
./Debug/spoopys_bizarre_adventure.elf:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
unsigned char game_over_message[] = "Game over!";
unsigned char win_message[] = "You win!";
unsigned char loss_message[] = "You lose!";

void startup(void){
__asm volatile(
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <_exit+0x4>)
20000002:	4685      	mov	sp, r0
20000004:	f000 f804 	bl	20000010 <main>

20000008 <_exit>:
20000008:	e7fe      	b.n	20000008 <_exit>
	" LDR R0,=0x2001C000\n"		/* set stack */
	" MOV SP,R0\n"
	" BL main\n"				/* call main */
	"_exit: B .\n"				/* never return */
	) ;
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <main>:

void main(void){
20000010:	b580      	push	{r7, lr}
20000012:	b0a6      	sub	sp, #152	; 0x98
20000014:	af00      	add	r7, sp, #0
    app_init();
20000016:	f000 fad3 	bl	200005c0 <app_init>
    
    graphic_clear_screen();
2000001a:	f000 fcff 	bl	20000a1c <graphic_clear_screen>
    ascii_clear_screen();
2000001e:	f001 f878 	bl	20001112 <ascii_clear_screen>
    graphic_write_command(LCD_ON, B_CS1 | B_CS2);
20000022:	2118      	movs	r1, #24
20000024:	203f      	movs	r0, #63	; 0x3f
20000026:	f000 fc73 	bl	20000910 <graphic_write_command>
    graphic_write_command(LCD_DISP_START, B_CS1 | B_CS2);
2000002a:	2118      	movs	r1, #24
2000002c:	20c0      	movs	r0, #192	; 0xc0
2000002e:	f000 fc6f 	bl	20000910 <graphic_write_command>
    
    gotoxy(1, 1);
20000032:	2101      	movs	r1, #1
20000034:	2001      	movs	r0, #1
20000036:	f001 f824 	bl	20001082 <gotoxy>
    ascii_write_string(start_message1);
2000003a:	4bd4      	ldr	r3, [pc, #848]	; (2000038c <main+0x37c>)
2000003c:	0018      	movs	r0, r3
2000003e:	f001 f854 	bl	200010ea <ascii_write_string>
    gotoxy(1, 2);
20000042:	2102      	movs	r1, #2
20000044:	2001      	movs	r0, #1
20000046:	f001 f81c 	bl	20001082 <gotoxy>
    ascii_write_string(start_message2);
2000004a:	4bd1      	ldr	r3, [pc, #836]	; (20000390 <main+0x380>)
2000004c:	0018      	movs	r0, r3
2000004e:	f001 f84c 	bl	200010ea <ascii_write_string>
    
    // Initiate objects
    SPRITE spoopy_sprite = {
20000052:	2380      	movs	r3, #128	; 0x80
20000054:	18fb      	adds	r3, r7, r3
20000056:	2200      	movs	r2, #0
20000058:	701a      	strb	r2, [r3, #0]
2000005a:	2380      	movs	r3, #128	; 0x80
2000005c:	18fb      	adds	r3, r7, r3
2000005e:	2200      	movs	r2, #0
20000060:	705a      	strb	r2, [r3, #1]
20000062:	2380      	movs	r3, #128	; 0x80
20000064:	18fb      	adds	r3, r7, r3
20000066:	2200      	movs	r2, #0
20000068:	605a      	str	r2, [r3, #4]
        0, // Init values, disregard these as these will be set later
        0,
        {0}
    };
    load_sprite(&spoopy_sprite, spoop_bits, spoop_width, spoop_height);
2000006a:	49ca      	ldr	r1, [pc, #808]	; (20000394 <main+0x384>)
2000006c:	2380      	movs	r3, #128	; 0x80
2000006e:	18f8      	adds	r0, r7, r3
20000070:	2310      	movs	r3, #16
20000072:	2210      	movs	r2, #16
20000074:	f001 f92e 	bl	200012d4 <load_sprite>
     // Initiate Spoopy
    SPRITE_OBJECT spoopy = {
20000078:	235c      	movs	r3, #92	; 0x5c
2000007a:	18fb      	adds	r3, r7, r3
2000007c:	2280      	movs	r2, #128	; 0x80
2000007e:	18ba      	adds	r2, r7, r2
20000080:	601a      	str	r2, [r3, #0]
20000082:	235c      	movs	r3, #92	; 0x5c
20000084:	18fb      	adds	r3, r7, r3
20000086:	2200      	movs	r2, #0
20000088:	605a      	str	r2, [r3, #4]
2000008a:	235c      	movs	r3, #92	; 0x5c
2000008c:	18fb      	adds	r3, r7, r3
2000008e:	2200      	movs	r2, #0
20000090:	609a      	str	r2, [r3, #8]
20000092:	235c      	movs	r3, #92	; 0x5c
20000094:	18fb      	adds	r3, r7, r3
20000096:	22fa      	movs	r2, #250	; 0xfa
20000098:	0052      	lsls	r2, r2, #1
2000009a:	60da      	str	r2, [r3, #12]
2000009c:	235c      	movs	r3, #92	; 0x5c
2000009e:	18fb      	adds	r3, r7, r3
200000a0:	22fa      	movs	r2, #250	; 0xfa
200000a2:	0052      	lsls	r2, r2, #1
200000a4:	611a      	str	r2, [r3, #16]
200000a6:	235c      	movs	r3, #92	; 0x5c
200000a8:	18fb      	adds	r3, r7, r3
200000aa:	4abb      	ldr	r2, [pc, #748]	; (20000398 <main+0x388>)
200000ac:	615a      	str	r2, [r3, #20]
200000ae:	235c      	movs	r3, #92	; 0x5c
200000b0:	18fb      	adds	r3, r7, r3
200000b2:	4aba      	ldr	r2, [pc, #744]	; (2000039c <main+0x38c>)
200000b4:	619a      	str	r2, [r3, #24]
200000b6:	235c      	movs	r3, #92	; 0x5c
200000b8:	18fb      	adds	r3, r7, r3
200000ba:	4ab9      	ldr	r2, [pc, #740]	; (200003a0 <main+0x390>)
200000bc:	61da      	str	r2, [r3, #28]
200000be:	235c      	movs	r3, #92	; 0x5c
200000c0:	18fb      	adds	r3, r7, r3
200000c2:	4ab8      	ldr	r2, [pc, #736]	; (200003a4 <main+0x394>)
200000c4:	621a      	str	r2, [r3, #32]
        draw_sprite_object,
        clear_sprite_object,
        move_sprite_object,
        set_sprite_object_speed,
    };
    PSPRITE_OBJECT spoopy_pointer = &spoopy;
200000c6:	235c      	movs	r3, #92	; 0x5c
200000c8:	18fb      	adds	r3, r7, r3
200000ca:	2294      	movs	r2, #148	; 0x94
200000cc:	18ba      	adds	r2, r7, r2
200000ce:	6013      	str	r3, [r2, #0]
    
    SPRITE exit_sprite = {
200000d0:	2354      	movs	r3, #84	; 0x54
200000d2:	18fb      	adds	r3, r7, r3
200000d4:	2200      	movs	r2, #0
200000d6:	701a      	strb	r2, [r3, #0]
200000d8:	2354      	movs	r3, #84	; 0x54
200000da:	18fb      	adds	r3, r7, r3
200000dc:	2200      	movs	r2, #0
200000de:	705a      	strb	r2, [r3, #1]
200000e0:	2354      	movs	r3, #84	; 0x54
200000e2:	18fb      	adds	r3, r7, r3
200000e4:	2200      	movs	r2, #0
200000e6:	605a      	str	r2, [r3, #4]
        0,
        0,
        {0}
    };
    PSPRITE exit_sprite_pointer = &exit_sprite;
200000e8:	2354      	movs	r3, #84	; 0x54
200000ea:	18fb      	adds	r3, r7, r3
200000ec:	2290      	movs	r2, #144	; 0x90
200000ee:	18ba      	adds	r2, r7, r2
200000f0:	6013      	str	r3, [r2, #0]
    load_sprite(exit_sprite_pointer, exit_bits, exit_width, exit_height);
200000f2:	49ad      	ldr	r1, [pc, #692]	; (200003a8 <main+0x398>)
200000f4:	2390      	movs	r3, #144	; 0x90
200000f6:	18fb      	adds	r3, r7, r3
200000f8:	6818      	ldr	r0, [r3, #0]
200000fa:	2310      	movs	r3, #16
200000fc:	2210      	movs	r2, #16
200000fe:	f001 f8e9 	bl	200012d4 <load_sprite>
    
    SPRITE_OBJECT exit = {
20000102:	2330      	movs	r3, #48	; 0x30
20000104:	18fb      	adds	r3, r7, r3
20000106:	2290      	movs	r2, #144	; 0x90
20000108:	18ba      	adds	r2, r7, r2
2000010a:	6812      	ldr	r2, [r2, #0]
2000010c:	601a      	str	r2, [r3, #0]
2000010e:	2330      	movs	r3, #48	; 0x30
20000110:	18fb      	adds	r3, r7, r3
20000112:	2200      	movs	r2, #0
20000114:	605a      	str	r2, [r3, #4]
20000116:	2330      	movs	r3, #48	; 0x30
20000118:	18fb      	adds	r3, r7, r3
2000011a:	2200      	movs	r2, #0
2000011c:	609a      	str	r2, [r3, #8]
2000011e:	2330      	movs	r3, #48	; 0x30
20000120:	18fb      	adds	r3, r7, r3
20000122:	22fa      	movs	r2, #250	; 0xfa
20000124:	0052      	lsls	r2, r2, #1
20000126:	60da      	str	r2, [r3, #12]
20000128:	2330      	movs	r3, #48	; 0x30
2000012a:	18fb      	adds	r3, r7, r3
2000012c:	22fa      	movs	r2, #250	; 0xfa
2000012e:	0052      	lsls	r2, r2, #1
20000130:	611a      	str	r2, [r3, #16]
20000132:	2330      	movs	r3, #48	; 0x30
20000134:	18fb      	adds	r3, r7, r3
20000136:	4a98      	ldr	r2, [pc, #608]	; (20000398 <main+0x388>)
20000138:	615a      	str	r2, [r3, #20]
2000013a:	2330      	movs	r3, #48	; 0x30
2000013c:	18fb      	adds	r3, r7, r3
2000013e:	4a97      	ldr	r2, [pc, #604]	; (2000039c <main+0x38c>)
20000140:	619a      	str	r2, [r3, #24]
20000142:	2330      	movs	r3, #48	; 0x30
20000144:	18fb      	adds	r3, r7, r3
20000146:	4a99      	ldr	r2, [pc, #612]	; (200003ac <main+0x39c>)
20000148:	61da      	str	r2, [r3, #28]
2000014a:	2330      	movs	r3, #48	; 0x30
2000014c:	18fb      	adds	r3, r7, r3
2000014e:	4a98      	ldr	r2, [pc, #608]	; (200003b0 <main+0x3a0>)
20000150:	621a      	str	r2, [r3, #32]
        draw_sprite_object,
        clear_sprite_object,
        dummy_function1,
        dummy_function2
    };
    PSPRITE_OBJECT exit_pointer = &exit;
20000152:	2330      	movs	r3, #48	; 0x30
20000154:	18fb      	adds	r3, r7, r3
20000156:	228c      	movs	r2, #140	; 0x8c
20000158:	18ba      	adds	r2, r7, r2
2000015a:	6013      	str	r3, [r2, #0]
    
    SPRITE enemy_sprite = {
2000015c:	2328      	movs	r3, #40	; 0x28
2000015e:	18fb      	adds	r3, r7, r3
20000160:	2200      	movs	r2, #0
20000162:	701a      	strb	r2, [r3, #0]
20000164:	2328      	movs	r3, #40	; 0x28
20000166:	18fb      	adds	r3, r7, r3
20000168:	2200      	movs	r2, #0
2000016a:	705a      	strb	r2, [r3, #1]
2000016c:	2328      	movs	r3, #40	; 0x28
2000016e:	18fb      	adds	r3, r7, r3
20000170:	2200      	movs	r2, #0
20000172:	605a      	str	r2, [r3, #4]
        0,
        0,
        {0}
    };
    load_sprite(&enemy_sprite, enemy_bits, enemy_width, enemy_height);
20000174:	498f      	ldr	r1, [pc, #572]	; (200003b4 <main+0x3a4>)
20000176:	2328      	movs	r3, #40	; 0x28
20000178:	18f8      	adds	r0, r7, r3
2000017a:	2310      	movs	r3, #16
2000017c:	2210      	movs	r2, #16
2000017e:	f001 f8a9 	bl	200012d4 <load_sprite>
    
    SPRITE_OBJECT enemy = {
20000182:	1d3b      	adds	r3, r7, #4
20000184:	2228      	movs	r2, #40	; 0x28
20000186:	18ba      	adds	r2, r7, r2
20000188:	601a      	str	r2, [r3, #0]
2000018a:	1d3b      	adds	r3, r7, #4
2000018c:	2200      	movs	r2, #0
2000018e:	605a      	str	r2, [r3, #4]
20000190:	1d3b      	adds	r3, r7, #4
20000192:	2200      	movs	r2, #0
20000194:	609a      	str	r2, [r3, #8]
20000196:	1d3b      	adds	r3, r7, #4
20000198:	22fa      	movs	r2, #250	; 0xfa
2000019a:	0052      	lsls	r2, r2, #1
2000019c:	60da      	str	r2, [r3, #12]
2000019e:	1d3b      	adds	r3, r7, #4
200001a0:	22fa      	movs	r2, #250	; 0xfa
200001a2:	0052      	lsls	r2, r2, #1
200001a4:	611a      	str	r2, [r3, #16]
200001a6:	1d3b      	adds	r3, r7, #4
200001a8:	4a7b      	ldr	r2, [pc, #492]	; (20000398 <main+0x388>)
200001aa:	615a      	str	r2, [r3, #20]
200001ac:	1d3b      	adds	r3, r7, #4
200001ae:	4a7b      	ldr	r2, [pc, #492]	; (2000039c <main+0x38c>)
200001b0:	619a      	str	r2, [r3, #24]
200001b2:	1d3b      	adds	r3, r7, #4
200001b4:	4a7a      	ldr	r2, [pc, #488]	; (200003a0 <main+0x390>)
200001b6:	61da      	str	r2, [r3, #28]
200001b8:	1d3b      	adds	r3, r7, #4
200001ba:	4a7a      	ldr	r2, [pc, #488]	; (200003a4 <main+0x394>)
200001bc:	621a      	str	r2, [r3, #32]
        draw_sprite_object,
        clear_sprite_object,
        move_sprite_object,
        set_sprite_object_speed
    };
    PSPRITE_OBJECT enemy_pointer = &enemy;
200001be:	1d3b      	adds	r3, r7, #4
200001c0:	2288      	movs	r2, #136	; 0x88
200001c2:	18ba      	adds	r2, r7, r2
200001c4:	6013      	str	r3, [r2, #0]
    
    init_map_grid(spoopy_pointer, exit_pointer, enemy_pointer);
200001c6:	2388      	movs	r3, #136	; 0x88
200001c8:	18fb      	adds	r3, r7, r3
200001ca:	681a      	ldr	r2, [r3, #0]
200001cc:	238c      	movs	r3, #140	; 0x8c
200001ce:	18fb      	adds	r3, r7, r3
200001d0:	6819      	ldr	r1, [r3, #0]
200001d2:	2394      	movs	r3, #148	; 0x94
200001d4:	18fb      	adds	r3, r7, r3
200001d6:	681b      	ldr	r3, [r3, #0]
200001d8:	0018      	movs	r0, r3
200001da:	f000 f993 	bl	20000504 <init_map_grid>
	
    // Draw sprites
    spoopy_pointer->draw(spoopy_pointer);
200001de:	2394      	movs	r3, #148	; 0x94
200001e0:	18fb      	adds	r3, r7, r3
200001e2:	681b      	ldr	r3, [r3, #0]
200001e4:	695b      	ldr	r3, [r3, #20]
200001e6:	2294      	movs	r2, #148	; 0x94
200001e8:	18ba      	adds	r2, r7, r2
200001ea:	6812      	ldr	r2, [r2, #0]
200001ec:	0010      	movs	r0, r2
200001ee:	4798      	blx	r3
    exit_pointer->draw(exit_pointer);
200001f0:	238c      	movs	r3, #140	; 0x8c
200001f2:	18fb      	adds	r3, r7, r3
200001f4:	681b      	ldr	r3, [r3, #0]
200001f6:	695b      	ldr	r3, [r3, #20]
200001f8:	228c      	movs	r2, #140	; 0x8c
200001fa:	18ba      	adds	r2, r7, r2
200001fc:	6812      	ldr	r2, [r2, #0]
200001fe:	0010      	movs	r0, r2
20000200:	4798      	blx	r3
    
    graphic_write_command(LCD_ON, B_CS1 | B_CS2);
20000202:	2118      	movs	r1, #24
20000204:	203f      	movs	r0, #63	; 0x3f
20000206:	f000 fb83 	bl	20000910 <graphic_write_command>
    graphic_write_command(LCD_DISP_START, B_CS1 | B_CS2);
2000020a:	2118      	movs	r1, #24
2000020c:	20c0      	movs	r0, #192	; 0xc0
2000020e:	f000 fb7f 	bl	20000910 <graphic_write_command>
 
    
    GPIO_D.odrHigh = 0xF0;
20000212:	4b69      	ldr	r3, [pc, #420]	; (200003b8 <main+0x3a8>)
20000214:	22f0      	movs	r2, #240	; 0xf0
20000216:	755a      	strb	r2, [r3, #21]
	while(1){
        GPIO_D.odrLow = GPIO_D.idrHigh;
20000218:	4b67      	ldr	r3, [pc, #412]	; (200003b8 <main+0x3a8>)
2000021a:	4a67      	ldr	r2, [pc, #412]	; (200003b8 <main+0x3a8>)
2000021c:	7c52      	ldrb	r2, [r2, #17]
2000021e:	b2d2      	uxtb	r2, r2
20000220:	751a      	strb	r2, [r3, #20]
		keyboard_val = keyb();
20000222:	f000 ffcb 	bl	200011bc <keyb>
20000226:	0003      	movs	r3, r0
20000228:	b2da      	uxtb	r2, r3
2000022a:	4b64      	ldr	r3, [pc, #400]	; (200003bc <main+0x3ac>)
2000022c:	701a      	strb	r2, [r3, #0]
		switch (keyboard_val){
2000022e:	4b63      	ldr	r3, [pc, #396]	; (200003bc <main+0x3ac>)
20000230:	781b      	ldrb	r3, [r3, #0]
20000232:	2b04      	cmp	r3, #4
20000234:	d013      	beq.n	2000025e <main+0x24e>
20000236:	dc02      	bgt.n	2000023e <main+0x22e>
20000238:	2b02      	cmp	r3, #2
2000023a:	d01c      	beq.n	20000276 <main+0x266>
2000023c:	e032      	b.n	200002a4 <main+0x294>
2000023e:	2b06      	cmp	r3, #6
20000240:	d002      	beq.n	20000248 <main+0x238>
20000242:	2b08      	cmp	r3, #8
20000244:	d023      	beq.n	2000028e <main+0x27e>
20000246:	e02d      	b.n	200002a4 <main+0x294>
			case 6: spoopy_pointer->set_speed(spoopy_pointer, 1, 0); break;
20000248:	2394      	movs	r3, #148	; 0x94
2000024a:	18fb      	adds	r3, r7, r3
2000024c:	681b      	ldr	r3, [r3, #0]
2000024e:	6a1b      	ldr	r3, [r3, #32]
20000250:	2294      	movs	r2, #148	; 0x94
20000252:	18ba      	adds	r2, r7, r2
20000254:	6810      	ldr	r0, [r2, #0]
20000256:	2200      	movs	r2, #0
20000258:	2101      	movs	r1, #1
2000025a:	4798      	blx	r3
2000025c:	e02d      	b.n	200002ba <main+0x2aa>
			case 4: spoopy_pointer->set_speed(spoopy_pointer, -1, 0); break;
2000025e:	2394      	movs	r3, #148	; 0x94
20000260:	18fb      	adds	r3, r7, r3
20000262:	681b      	ldr	r3, [r3, #0]
20000264:	6a1b      	ldr	r3, [r3, #32]
20000266:	2201      	movs	r2, #1
20000268:	4251      	negs	r1, r2
2000026a:	2294      	movs	r2, #148	; 0x94
2000026c:	18ba      	adds	r2, r7, r2
2000026e:	6810      	ldr	r0, [r2, #0]
20000270:	2200      	movs	r2, #0
20000272:	4798      	blx	r3
20000274:	e021      	b.n	200002ba <main+0x2aa>
			case 2: spoopy_pointer->set_speed(spoopy_pointer, 0, -1); break;
20000276:	2394      	movs	r3, #148	; 0x94
20000278:	18fb      	adds	r3, r7, r3
2000027a:	681b      	ldr	r3, [r3, #0]
2000027c:	6a1b      	ldr	r3, [r3, #32]
2000027e:	2201      	movs	r2, #1
20000280:	4252      	negs	r2, r2
20000282:	2194      	movs	r1, #148	; 0x94
20000284:	1879      	adds	r1, r7, r1
20000286:	6808      	ldr	r0, [r1, #0]
20000288:	2100      	movs	r1, #0
2000028a:	4798      	blx	r3
2000028c:	e015      	b.n	200002ba <main+0x2aa>
			case 8: spoopy_pointer->set_speed(spoopy_pointer, 0, 1); break;
2000028e:	2394      	movs	r3, #148	; 0x94
20000290:	18fb      	adds	r3, r7, r3
20000292:	681b      	ldr	r3, [r3, #0]
20000294:	6a1b      	ldr	r3, [r3, #32]
20000296:	2294      	movs	r2, #148	; 0x94
20000298:	18ba      	adds	r2, r7, r2
2000029a:	6810      	ldr	r0, [r2, #0]
2000029c:	2201      	movs	r2, #1
2000029e:	2100      	movs	r1, #0
200002a0:	4798      	blx	r3
200002a2:	e00a      	b.n	200002ba <main+0x2aa>
            default: spoopy_pointer->set_speed(spoopy_pointer, 0, 0); break;
200002a4:	2394      	movs	r3, #148	; 0x94
200002a6:	18fb      	adds	r3, r7, r3
200002a8:	681b      	ldr	r3, [r3, #0]
200002aa:	6a1b      	ldr	r3, [r3, #32]
200002ac:	2294      	movs	r2, #148	; 0x94
200002ae:	18ba      	adds	r2, r7, r2
200002b0:	6810      	ldr	r0, [r2, #0]
200002b2:	2200      	movs	r2, #0
200002b4:	2100      	movs	r1, #0
200002b6:	4798      	blx	r3
200002b8:	46c0      	nop			; (mov r8, r8)
		}
        update_sprite_object(spoopy_pointer);
200002ba:	2394      	movs	r3, #148	; 0x94
200002bc:	18fb      	adds	r3, r7, r3
200002be:	681b      	ldr	r3, [r3, #0]
200002c0:	0018      	movs	r0, r3
200002c2:	f001 f92b 	bl	2000151c <update_sprite_object>
        update_enemy_position(enemy_pointer);
200002c6:	2388      	movs	r3, #136	; 0x88
200002c8:	18fb      	adds	r3, r7, r3
200002ca:	681b      	ldr	r3, [r3, #0]
200002cc:	0018      	movs	r0, r3
200002ce:	f000 f8e1 	bl	20000494 <update_enemy_position>
        position_checking(spoopy_pointer);
200002d2:	2394      	movs	r3, #148	; 0x94
200002d4:	18fb      	adds	r3, r7, r3
200002d6:	681b      	ldr	r3, [r3, #0]
200002d8:	0018      	movs	r0, r3
200002da:	f000 f89d 	bl	20000418 <position_checking>
		graphic_write_command(LCD_ON, B_CS1 | B_CS2);
200002de:	2118      	movs	r1, #24
200002e0:	203f      	movs	r0, #63	; 0x3f
200002e2:	f000 fb15 	bl	20000910 <graphic_write_command>
		graphic_write_command(LCD_DISP_START, B_CS1 | B_CS2);
200002e6:	2118      	movs	r1, #24
200002e8:	20c0      	movs	r0, #192	; 0xc0
200002ea:	f000 fb11 	bl	20000910 <graphic_write_command>
		delay_milli(250);
200002ee:	20fa      	movs	r0, #250	; 0xfa
200002f0:	f001 f97c 	bl	200015ec <delay_milli>
        if(win_state != 0){
200002f4:	4b32      	ldr	r3, [pc, #200]	; (200003c0 <main+0x3b0>)
200002f6:	781b      	ldrb	r3, [r3, #0]
200002f8:	2b00      	cmp	r3, #0
200002fa:	d100      	bne.n	200002fe <main+0x2ee>
	while(1){
200002fc:	e78c      	b.n	20000218 <main+0x208>
            break;
200002fe:	46c0      	nop			; (mov r8, r8)
        }
	}
    
    ascii_clear_screen();
20000300:	f000 ff07 	bl	20001112 <ascii_clear_screen>
    graphic_clear_screen();
20000304:	f000 fb8a 	bl	20000a1c <graphic_clear_screen>
    
    spoopy_pointer->pos_x = (SCREEN_WIDTH / 2) - (spoopy_pointer->sprt->width / 2);
20000308:	2394      	movs	r3, #148	; 0x94
2000030a:	18fb      	adds	r3, r7, r3
2000030c:	681b      	ldr	r3, [r3, #0]
2000030e:	681b      	ldr	r3, [r3, #0]
20000310:	781b      	ldrb	r3, [r3, #0]
20000312:	085b      	lsrs	r3, r3, #1
20000314:	b2db      	uxtb	r3, r3
20000316:	001a      	movs	r2, r3
20000318:	2340      	movs	r3, #64	; 0x40
2000031a:	1a9a      	subs	r2, r3, r2
2000031c:	2394      	movs	r3, #148	; 0x94
2000031e:	18fb      	adds	r3, r7, r3
20000320:	681b      	ldr	r3, [r3, #0]
20000322:	60da      	str	r2, [r3, #12]
    spoopy_pointer->pos_y = (SCREEN_HEIGHT / 2) - (spoopy_pointer->sprt->height / 2);
20000324:	2394      	movs	r3, #148	; 0x94
20000326:	18fb      	adds	r3, r7, r3
20000328:	681b      	ldr	r3, [r3, #0]
2000032a:	681b      	ldr	r3, [r3, #0]
2000032c:	785b      	ldrb	r3, [r3, #1]
2000032e:	085b      	lsrs	r3, r3, #1
20000330:	b2db      	uxtb	r3, r3
20000332:	001a      	movs	r2, r3
20000334:	2320      	movs	r3, #32
20000336:	1a9a      	subs	r2, r3, r2
20000338:	2394      	movs	r3, #148	; 0x94
2000033a:	18fb      	adds	r3, r7, r3
2000033c:	681b      	ldr	r3, [r3, #0]
2000033e:	611a      	str	r2, [r3, #16]
    
    spoopy_pointer->draw(spoopy_pointer);
20000340:	2394      	movs	r3, #148	; 0x94
20000342:	18fb      	adds	r3, r7, r3
20000344:	681b      	ldr	r3, [r3, #0]
20000346:	695b      	ldr	r3, [r3, #20]
20000348:	2294      	movs	r2, #148	; 0x94
2000034a:	18ba      	adds	r2, r7, r2
2000034c:	6812      	ldr	r2, [r2, #0]
2000034e:	0010      	movs	r0, r2
20000350:	4798      	blx	r3
    
    gotoxy(1, 1);
20000352:	2101      	movs	r1, #1
20000354:	2001      	movs	r0, #1
20000356:	f000 fe94 	bl	20001082 <gotoxy>
    ascii_write_string(game_over_message);
2000035a:	4b1a      	ldr	r3, [pc, #104]	; (200003c4 <main+0x3b4>)
2000035c:	0018      	movs	r0, r3
2000035e:	f000 fec4 	bl	200010ea <ascii_write_string>
    gotoxy(1, 2);
20000362:	2102      	movs	r1, #2
20000364:	2001      	movs	r0, #1
20000366:	f000 fe8c 	bl	20001082 <gotoxy>
    if(win_state == 1){
2000036a:	4b15      	ldr	r3, [pc, #84]	; (200003c0 <main+0x3b0>)
2000036c:	781b      	ldrb	r3, [r3, #0]
2000036e:	2b01      	cmp	r3, #1
20000370:	d104      	bne.n	2000037c <main+0x36c>
        ascii_write_string(win_message);
20000372:	4b15      	ldr	r3, [pc, #84]	; (200003c8 <main+0x3b8>)
20000374:	0018      	movs	r0, r3
20000376:	f000 feb8 	bl	200010ea <ascii_write_string>
    } else {
        ascii_write_string(loss_message);
    }
}
2000037a:	e003      	b.n	20000384 <main+0x374>
        ascii_write_string(loss_message);
2000037c:	4b13      	ldr	r3, [pc, #76]	; (200003cc <main+0x3bc>)
2000037e:	0018      	movs	r0, r3
20000380:	f000 feb3 	bl	200010ea <ascii_write_string>
}
20000384:	46c0      	nop			; (mov r8, r8)
20000386:	46bd      	mov	sp, r7
20000388:	b026      	add	sp, #152	; 0x98
2000038a:	bd80      	pop	{r7, pc}
2000038c:	20001690 	mulcs	r0, r0, r6
20000390:	2000169c 	mulcs	r0, ip, r6
20000394:	20001630 	andcs	r1, r0, r0, lsr r6
20000398:	200013db 	ldrdcs	r1, [r0], -fp
2000039c:	200013fd 	strdcs	r1, [r0], -sp
200003a0:	2000141f 	andcs	r1, r0, pc, lsl r4
200003a4:	200014d9 	ldrdcs	r1, [r0], -r9
200003a8:	20001650 	andcs	r1, r0, r0, asr r6
200003ac:	200014f9 	strdcs	r1, [r0], -r9
200003b0:	20001509 	andcs	r1, r0, r9, lsl #10
200003b4:	20001670 	andcs	r1, r0, r0, ror r6
200003b8:	40020c00 	andmi	r0, r2, r0, lsl #24
200003bc:	2000160c 	andcs	r1, r0, ip, lsl #12
200003c0:	2000160d 	andcs	r1, r0, sp, lsl #12
200003c4:	200016b0 			; <UNDEFINED> instruction: 0x200016b0
200003c8:	200016bc 			; <UNDEFINED> instruction: 0x200016bc
200003cc:	200016c8 	andcs	r1, r0, r8, asr #13

200003d0 <keyboard_interrupt_handler>:

void keyboard_interrupt_handler(void){
200003d0:	b580      	push	{r7, lr}
200003d2:	af00      	add	r7, sp, #0
    if(EXTI.pr & INTERRUPT_TARGET_PINS){
200003d4:	4b0d      	ldr	r3, [pc, #52]	; (2000040c <keyboard_interrupt_handler+0x3c>)
200003d6:	695b      	ldr	r3, [r3, #20]
200003d8:	2260      	movs	r2, #96	; 0x60
200003da:	4013      	ands	r3, r2
200003dc:	d012      	beq.n	20000404 <keyboard_interrupt_handler+0x34>
        keyboard_val = keyb();
200003de:	f000 feed 	bl	200011bc <keyb>
200003e2:	0003      	movs	r3, r0
200003e4:	b2da      	uxtb	r2, r3
200003e6:	4b0a      	ldr	r3, [pc, #40]	; (20000410 <keyboard_interrupt_handler+0x40>)
200003e8:	701a      	strb	r2, [r3, #0]
        GPIO_D.odrHigh = 0xF0;
200003ea:	4b0a      	ldr	r3, [pc, #40]	; (20000414 <keyboard_interrupt_handler+0x44>)
200003ec:	22f0      	movs	r2, #240	; 0xf0
200003ee:	755a      	strb	r2, [r3, #21]
        
        EXTI.pr |= (EXTI.pr & INTERRUPT_TARGET_PINS);
200003f0:	4b06      	ldr	r3, [pc, #24]	; (2000040c <keyboard_interrupt_handler+0x3c>)
200003f2:	695b      	ldr	r3, [r3, #20]
200003f4:	2260      	movs	r2, #96	; 0x60
200003f6:	4013      	ands	r3, r2
200003f8:	0019      	movs	r1, r3
200003fa:	4b04      	ldr	r3, [pc, #16]	; (2000040c <keyboard_interrupt_handler+0x3c>)
200003fc:	4a03      	ldr	r2, [pc, #12]	; (2000040c <keyboard_interrupt_handler+0x3c>)
200003fe:	6952      	ldr	r2, [r2, #20]
20000400:	430a      	orrs	r2, r1
20000402:	615a      	str	r2, [r3, #20]
    }
}
20000404:	46c0      	nop			; (mov r8, r8)
20000406:	46bd      	mov	sp, r7
20000408:	bd80      	pop	{r7, pc}
2000040a:	46c0      	nop			; (mov r8, r8)
2000040c:	40013c00 	andmi	r3, r1, r0, lsl #24
20000410:	2000160c 	andcs	r1, r0, ip, lsl #12
20000414:	40020c00 	andmi	r0, r2, r0, lsl #24

20000418 <position_checking>:

void position_checking(PSPRITE_OBJECT spoopy_pointer){
20000418:	b590      	push	{r4, r7, lr}
2000041a:	b087      	sub	sp, #28
2000041c:	af00      	add	r7, sp, #0
2000041e:	6078      	str	r0, [r7, #4]
    int spoopy_current_x = (spoopy_pointer->pos_x + 1) / GRID_WIDTH;
20000420:	687b      	ldr	r3, [r7, #4]
20000422:	68db      	ldr	r3, [r3, #12]
20000424:	3301      	adds	r3, #1
20000426:	2b00      	cmp	r3, #0
20000428:	da00      	bge.n	2000042c <position_checking+0x14>
2000042a:	330f      	adds	r3, #15
2000042c:	111b      	asrs	r3, r3, #4
2000042e:	617b      	str	r3, [r7, #20]
    int spoopy_current_y = (spoopy_pointer->pos_y + 1) / GRID_HEIGHT;
20000430:	687b      	ldr	r3, [r7, #4]
20000432:	691b      	ldr	r3, [r3, #16]
20000434:	3301      	adds	r3, #1
20000436:	2b00      	cmp	r3, #0
20000438:	da00      	bge.n	2000043c <position_checking+0x24>
2000043a:	330f      	adds	r3, #15
2000043c:	111b      	asrs	r3, r3, #4
2000043e:	613b      	str	r3, [r7, #16]
    
    //int next_space = map_grid[spoopy_current_x + spoopy_pointer->dir_x][spoopy_current_y + spoopy_pointer->dir_y];
    int curr_space = map_grid[spoopy_current_x][spoopy_current_y];
20000440:	4a12      	ldr	r2, [pc, #72]	; (2000048c <position_checking+0x74>)
20000442:	697b      	ldr	r3, [r7, #20]
20000444:	009b      	lsls	r3, r3, #2
20000446:	18d2      	adds	r2, r2, r3
20000448:	693b      	ldr	r3, [r7, #16]
2000044a:	18d3      	adds	r3, r2, r3
2000044c:	781b      	ldrb	r3, [r3, #0]
2000044e:	60fb      	str	r3, [r7, #12]
    
    // Check win states
    switch(curr_space){
20000450:	68fb      	ldr	r3, [r7, #12]
20000452:	2b02      	cmp	r3, #2
20000454:	d002      	beq.n	2000045c <position_checking+0x44>
20000456:	2b03      	cmp	r3, #3
20000458:	d004      	beq.n	20000464 <position_checking+0x4c>
2000045a:	e007      	b.n	2000046c <position_checking+0x54>
        case EXIT_SPACE: win_state = 1; break;
2000045c:	4b0c      	ldr	r3, [pc, #48]	; (20000490 <position_checking+0x78>)
2000045e:	2201      	movs	r2, #1
20000460:	701a      	strb	r2, [r3, #0]
20000462:	e003      	b.n	2000046c <position_checking+0x54>
        case ENEMY_SPACE: win_state = -1; break;
20000464:	4b0a      	ldr	r3, [pc, #40]	; (20000490 <position_checking+0x78>)
20000466:	22ff      	movs	r2, #255	; 0xff
20000468:	701a      	strb	r2, [r3, #0]
2000046a:	46c0      	nop			; (mov r8, r8)
    }
    
    // Update spoopy's speed
    spoopy_pointer->set_speed(spoopy_pointer, spoopy_pointer->dir_x * GRID_WIDTH, spoopy_pointer->dir_y * GRID_HEIGHT);
2000046c:	687b      	ldr	r3, [r7, #4]
2000046e:	6a1c      	ldr	r4, [r3, #32]
20000470:	687b      	ldr	r3, [r7, #4]
20000472:	685b      	ldr	r3, [r3, #4]
20000474:	0119      	lsls	r1, r3, #4
20000476:	687b      	ldr	r3, [r7, #4]
20000478:	689b      	ldr	r3, [r3, #8]
2000047a:	011a      	lsls	r2, r3, #4
2000047c:	687b      	ldr	r3, [r7, #4]
2000047e:	0018      	movs	r0, r3
20000480:	47a0      	blx	r4
}
20000482:	46c0      	nop			; (mov r8, r8)
20000484:	46bd      	mov	sp, r7
20000486:	b007      	add	sp, #28
20000488:	bd90      	pop	{r4, r7, pc}
2000048a:	46c0      	nop			; (mov r8, r8)
2000048c:	20001610 	andcs	r1, r0, r0, lsl r6
20000490:	2000160d 	andcs	r1, r0, sp, lsl #12

20000494 <update_enemy_position>:

void update_enemy_position(PSPRITE_OBJECT enemy_pointer){
20000494:	b580      	push	{r7, lr}
20000496:	b082      	sub	sp, #8
20000498:	af00      	add	r7, sp, #0
2000049a:	6078      	str	r0, [r7, #4]
    map_grid[(enemy_pointer->pos_x + 1) / GRID_WIDTH][(enemy_pointer->pos_y + 1) / GRID_HEIGHT] = EMPTY_SPACE;
2000049c:	687b      	ldr	r3, [r7, #4]
2000049e:	68db      	ldr	r3, [r3, #12]
200004a0:	3301      	adds	r3, #1
200004a2:	2b00      	cmp	r3, #0
200004a4:	da00      	bge.n	200004a8 <update_enemy_position+0x14>
200004a6:	330f      	adds	r3, #15
200004a8:	111b      	asrs	r3, r3, #4
200004aa:	0018      	movs	r0, r3
200004ac:	687b      	ldr	r3, [r7, #4]
200004ae:	691b      	ldr	r3, [r3, #16]
200004b0:	3301      	adds	r3, #1
200004b2:	2b00      	cmp	r3, #0
200004b4:	da00      	bge.n	200004b8 <update_enemy_position+0x24>
200004b6:	330f      	adds	r3, #15
200004b8:	111b      	asrs	r3, r3, #4
200004ba:	0019      	movs	r1, r3
200004bc:	4a10      	ldr	r2, [pc, #64]	; (20000500 <update_enemy_position+0x6c>)
200004be:	0083      	lsls	r3, r0, #2
200004c0:	18d3      	adds	r3, r2, r3
200004c2:	2200      	movs	r2, #0
200004c4:	545a      	strb	r2, [r3, r1]
    update_sprite_object(enemy_pointer);
200004c6:	687b      	ldr	r3, [r7, #4]
200004c8:	0018      	movs	r0, r3
200004ca:	f001 f827 	bl	2000151c <update_sprite_object>
    map_grid[(enemy_pointer->pos_x + 1) / GRID_WIDTH][(enemy_pointer->pos_y + 1) / GRID_HEIGHT] = ENEMY_SPACE;
200004ce:	687b      	ldr	r3, [r7, #4]
200004d0:	68db      	ldr	r3, [r3, #12]
200004d2:	3301      	adds	r3, #1
200004d4:	2b00      	cmp	r3, #0
200004d6:	da00      	bge.n	200004da <update_enemy_position+0x46>
200004d8:	330f      	adds	r3, #15
200004da:	111b      	asrs	r3, r3, #4
200004dc:	0018      	movs	r0, r3
200004de:	687b      	ldr	r3, [r7, #4]
200004e0:	691b      	ldr	r3, [r3, #16]
200004e2:	3301      	adds	r3, #1
200004e4:	2b00      	cmp	r3, #0
200004e6:	da00      	bge.n	200004ea <update_enemy_position+0x56>
200004e8:	330f      	adds	r3, #15
200004ea:	111b      	asrs	r3, r3, #4
200004ec:	0019      	movs	r1, r3
200004ee:	4a04      	ldr	r2, [pc, #16]	; (20000500 <update_enemy_position+0x6c>)
200004f0:	0083      	lsls	r3, r0, #2
200004f2:	18d3      	adds	r3, r2, r3
200004f4:	2203      	movs	r2, #3
200004f6:	545a      	strb	r2, [r3, r1]
}
200004f8:	46c0      	nop			; (mov r8, r8)
200004fa:	46bd      	mov	sp, r7
200004fc:	b002      	add	sp, #8
200004fe:	bd80      	pop	{r7, pc}
20000500:	20001610 	andcs	r1, r0, r0, lsl r6

20000504 <init_map_grid>:

void init_map_grid(PSPRITE_OBJECT spoopy, PSPRITE_OBJECT exit, PSPRITE_OBJECT enemy){
20000504:	b580      	push	{r7, lr}
20000506:	b08c      	sub	sp, #48	; 0x30
20000508:	af00      	add	r7, sp, #0
2000050a:	60f8      	str	r0, [r7, #12]
2000050c:	60b9      	str	r1, [r7, #8]
2000050e:	607a      	str	r2, [r7, #4]
    for(int x = 0; x < MAP_WIDTH; x++){
20000510:	2300      	movs	r3, #0
20000512:	62fb      	str	r3, [r7, #44]	; 0x2c
20000514:	e013      	b.n	2000053e <init_map_grid+0x3a>
        for(int y = 0; y < MAP_HEIGHT; y++){
20000516:	2300      	movs	r3, #0
20000518:	62bb      	str	r3, [r7, #40]	; 0x28
2000051a:	e00a      	b.n	20000532 <init_map_grid+0x2e>
            map_grid[x][y] = EMPTY_SPACE;
2000051c:	4a27      	ldr	r2, [pc, #156]	; (200005bc <init_map_grid+0xb8>)
2000051e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
20000520:	009b      	lsls	r3, r3, #2
20000522:	18d2      	adds	r2, r2, r3
20000524:	6abb      	ldr	r3, [r7, #40]	; 0x28
20000526:	18d3      	adds	r3, r2, r3
20000528:	2200      	movs	r2, #0
2000052a:	701a      	strb	r2, [r3, #0]
        for(int y = 0; y < MAP_HEIGHT; y++){
2000052c:	6abb      	ldr	r3, [r7, #40]	; 0x28
2000052e:	3301      	adds	r3, #1
20000530:	62bb      	str	r3, [r7, #40]	; 0x28
20000532:	6abb      	ldr	r3, [r7, #40]	; 0x28
20000534:	2b03      	cmp	r3, #3
20000536:	ddf1      	ble.n	2000051c <init_map_grid+0x18>
    for(int x = 0; x < MAP_WIDTH; x++){
20000538:	6afb      	ldr	r3, [r7, #44]	; 0x2c
2000053a:	3301      	adds	r3, #1
2000053c:	62fb      	str	r3, [r7, #44]	; 0x2c
2000053e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
20000540:	2b07      	cmp	r3, #7
20000542:	dde8      	ble.n	20000516 <init_map_grid+0x12>
        }
    }
    
    // Set Spoopy's starting position
    int spoopy_x = 0;
20000544:	2300      	movs	r3, #0
20000546:	627b      	str	r3, [r7, #36]	; 0x24
    int spoopy_y = 0;
20000548:	2300      	movs	r3, #0
2000054a:	623b      	str	r3, [r7, #32]
    //map_grid[spoopy_x][spoopy_y] = SPOOPY_SPACE;
    spoopy->pos_x = spoopy_x * GRID_WIDTH;
2000054c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
2000054e:	011a      	lsls	r2, r3, #4
20000550:	68fb      	ldr	r3, [r7, #12]
20000552:	60da      	str	r2, [r3, #12]
    spoopy->pos_y = spoopy_y * GRID_HEIGHT;
20000554:	6a3b      	ldr	r3, [r7, #32]
20000556:	011a      	lsls	r2, r3, #4
20000558:	68fb      	ldr	r3, [r7, #12]
2000055a:	611a      	str	r2, [r3, #16]
    
    // Set exit's starting position
    int exit_x = MAP_WIDTH - 1;
2000055c:	2307      	movs	r3, #7
2000055e:	61fb      	str	r3, [r7, #28]
    int exit_y = MAP_HEIGHT - 1;
20000560:	2303      	movs	r3, #3
20000562:	61bb      	str	r3, [r7, #24]
    map_grid[exit_x][exit_y] = EXIT_SPACE;
20000564:	4a15      	ldr	r2, [pc, #84]	; (200005bc <init_map_grid+0xb8>)
20000566:	69fb      	ldr	r3, [r7, #28]
20000568:	009b      	lsls	r3, r3, #2
2000056a:	18d2      	adds	r2, r2, r3
2000056c:	69bb      	ldr	r3, [r7, #24]
2000056e:	18d3      	adds	r3, r2, r3
20000570:	2202      	movs	r2, #2
20000572:	701a      	strb	r2, [r3, #0]
    exit->pos_x = exit_x * GRID_WIDTH;
20000574:	69fb      	ldr	r3, [r7, #28]
20000576:	011a      	lsls	r2, r3, #4
20000578:	68bb      	ldr	r3, [r7, #8]
2000057a:	60da      	str	r2, [r3, #12]
    exit->pos_y = exit_y * GRID_HEIGHT;
2000057c:	69bb      	ldr	r3, [r7, #24]
2000057e:	011a      	lsls	r2, r3, #4
20000580:	68bb      	ldr	r3, [r7, #8]
20000582:	611a      	str	r2, [r3, #16]
    
    int enemy_x = 3;
20000584:	2303      	movs	r3, #3
20000586:	617b      	str	r3, [r7, #20]
    int enemy_y = 0;
20000588:	2300      	movs	r3, #0
2000058a:	613b      	str	r3, [r7, #16]
    map_grid[enemy_x][enemy_y] = ENEMY_SPACE;
2000058c:	4a0b      	ldr	r2, [pc, #44]	; (200005bc <init_map_grid+0xb8>)
2000058e:	697b      	ldr	r3, [r7, #20]
20000590:	009b      	lsls	r3, r3, #2
20000592:	18d2      	adds	r2, r2, r3
20000594:	693b      	ldr	r3, [r7, #16]
20000596:	18d3      	adds	r3, r2, r3
20000598:	2203      	movs	r2, #3
2000059a:	701a      	strb	r2, [r3, #0]
    enemy->pos_x = enemy_x * GRID_WIDTH;
2000059c:	697b      	ldr	r3, [r7, #20]
2000059e:	011a      	lsls	r2, r3, #4
200005a0:	687b      	ldr	r3, [r7, #4]
200005a2:	60da      	str	r2, [r3, #12]
    enemy->pos_y = enemy_y * GRID_HEIGHT;
200005a4:	693b      	ldr	r3, [r7, #16]
200005a6:	011a      	lsls	r2, r3, #4
200005a8:	687b      	ldr	r3, [r7, #4]
200005aa:	611a      	str	r2, [r3, #16]
    enemy->dir_y = -16;
200005ac:	687b      	ldr	r3, [r7, #4]
200005ae:	2210      	movs	r2, #16
200005b0:	4252      	negs	r2, r2
200005b2:	609a      	str	r2, [r3, #8]
}
200005b4:	46c0      	nop			; (mov r8, r8)
200005b6:	46bd      	mov	sp, r7
200005b8:	b00c      	add	sp, #48	; 0x30
200005ba:	bd80      	pop	{r7, pc}
200005bc:	20001610 	andcs	r1, r0, r0, lsl r6

200005c0 <app_init>:

void app_init(void){
200005c0:	b580      	push	{r7, lr}
200005c2:	af00      	add	r7, sp, #0
		" LDR R0, =0x08000209\n"
		" BLX R0\n"
		);
#endif

    GPIO_D.moder &= 0xFFFF0000;
200005c4:	4b1e      	ldr	r3, [pc, #120]	; (20000640 <app_init+0x80>)
200005c6:	4a1e      	ldr	r2, [pc, #120]	; (20000640 <app_init+0x80>)
200005c8:	6812      	ldr	r2, [r2, #0]
200005ca:	0c12      	lsrs	r2, r2, #16
200005cc:	0412      	lsls	r2, r2, #16
200005ce:	601a      	str	r2, [r3, #0]
    GPIO_D.moder |= 0x00005555;
200005d0:	4b1b      	ldr	r3, [pc, #108]	; (20000640 <app_init+0x80>)
200005d2:	4a1b      	ldr	r2, [pc, #108]	; (20000640 <app_init+0x80>)
200005d4:	6812      	ldr	r2, [r2, #0]
200005d6:	491b      	ldr	r1, [pc, #108]	; (20000644 <app_init+0x84>)
200005d8:	430a      	orrs	r2, r1
200005da:	601a      	str	r2, [r3, #0]

    graphicdisplay_init();
200005dc:	f000 fbd8 	bl	20000d90 <graphicdisplay_init>
    asciidisplay_init();
200005e0:	f000 fbe6 	bl	20000db0 <asciidisplay_init>
    graphic_initialize();
200005e4:	f000 f9ec 	bl	200009c0 <graphic_initialize>
    
    keyboard_init();
200005e8:	f000 fdb8 	bl	2000115c <keyboard_init>
    
    // *** Interrupt init ***
    // Set port D pin 8-11 as interrupts
    SYSCFG.exticr3 = 0x3333;
200005ec:	4b16      	ldr	r3, [pc, #88]	; (20000648 <app_init+0x88>)
200005ee:	4a17      	ldr	r2, [pc, #92]	; (2000064c <app_init+0x8c>)
200005f0:	611a      	str	r2, [r3, #16]
    
    // Set pin 8-11 as interrupts on both flanks
    EXTI.imr = INTERRUPT_TARGET_PINS;
200005f2:	4b17      	ldr	r3, [pc, #92]	; (20000650 <app_init+0x90>)
200005f4:	2260      	movs	r2, #96	; 0x60
200005f6:	601a      	str	r2, [r3, #0]
    EXTI.ftsr |= INTERRUPT_TARGET_PINS;
200005f8:	4b15      	ldr	r3, [pc, #84]	; (20000650 <app_init+0x90>)
200005fa:	4a15      	ldr	r2, [pc, #84]	; (20000650 <app_init+0x90>)
200005fc:	68d2      	ldr	r2, [r2, #12]
200005fe:	2160      	movs	r1, #96	; 0x60
20000600:	430a      	orrs	r2, r1
20000602:	60da      	str	r2, [r3, #12]
    EXTI.rtsr |= INTERRUPT_TARGET_PINS;
20000604:	4b12      	ldr	r3, [pc, #72]	; (20000650 <app_init+0x90>)
20000606:	4a12      	ldr	r2, [pc, #72]	; (20000650 <app_init+0x90>)
20000608:	6892      	ldr	r2, [r2, #8]
2000060a:	2160      	movs	r1, #96	; 0x60
2000060c:	430a      	orrs	r2, r1
2000060e:	609a      	str	r2, [r3, #8]
    
    // Set up interrupt vector
    *((void (**) (void))0x2001C09C) = keyboard_interrupt_handler;
20000610:	4b10      	ldr	r3, [pc, #64]	; (20000654 <app_init+0x94>)
20000612:	4a11      	ldr	r2, [pc, #68]	; (20000658 <app_init+0x98>)
20000614:	601a      	str	r2, [r3, #0]
    *((void (**) (void))0x2001C0E0) = keyboard_interrupt_handler;
20000616:	4b11      	ldr	r3, [pc, #68]	; (2000065c <app_init+0x9c>)
20000618:	4a0f      	ldr	r2, [pc, #60]	; (20000658 <app_init+0x98>)
2000061a:	601a      	str	r2, [r3, #0]
    
    // Enable interrupt vectors
    NVIC_ISER0 |= (1 << 23);
2000061c:	4b10      	ldr	r3, [pc, #64]	; (20000660 <app_init+0xa0>)
2000061e:	4a10      	ldr	r2, [pc, #64]	; (20000660 <app_init+0xa0>)
20000620:	6812      	ldr	r2, [r2, #0]
20000622:	2180      	movs	r1, #128	; 0x80
20000624:	0409      	lsls	r1, r1, #16
20000626:	430a      	orrs	r2, r1
20000628:	601a      	str	r2, [r3, #0]
    NVIC_ISER1 |= (1 << (40 - 32));
2000062a:	4b0e      	ldr	r3, [pc, #56]	; (20000664 <app_init+0xa4>)
2000062c:	4a0d      	ldr	r2, [pc, #52]	; (20000664 <app_init+0xa4>)
2000062e:	6812      	ldr	r2, [r2, #0]
20000630:	2180      	movs	r1, #128	; 0x80
20000632:	0049      	lsls	r1, r1, #1
20000634:	430a      	orrs	r2, r1
20000636:	601a      	str	r2, [r3, #0]
}
20000638:	46c0      	nop			; (mov r8, r8)
2000063a:	46bd      	mov	sp, r7
2000063c:	bd80      	pop	{r7, pc}
2000063e:	46c0      	nop			; (mov r8, r8)
20000640:	40020c00 	andmi	r0, r2, r0, lsl #24
20000644:	00005555 	andeq	r5, r0, r5, asr r5
20000648:	40013800 	andmi	r3, r1, r0, lsl #16
2000064c:	00003333 	andeq	r3, r0, r3, lsr r3
20000650:	40013c00 	andmi	r3, r1, r0, lsl #24
20000654:	2001c09c 	mulcs	r1, ip, r0
20000658:	200003d1 	ldrdcs	r0, [r0], -r1
2000065c:	2001c0e0 	andcs	ip, r1, r0, ror #1
20000660:	e000e100 	and	lr, r0, r0, lsl #2
20000664:	e000e104 	and	lr, r0, r4, lsl #2

20000668 <graphic_ctrl_bit_set>:
20000668:	b580      	push	{r7, lr}
2000066a:	b084      	sub	sp, #16
2000066c:	af00      	add	r7, sp, #0
2000066e:	0002      	movs	r2, r0
20000670:	1dfb      	adds	r3, r7, #7
20000672:	701a      	strb	r2, [r3, #0]
20000674:	4a13      	ldr	r2, [pc, #76]	; (200006c4 <graphic_ctrl_bit_set+0x5c>)
20000676:	4b13      	ldr	r3, [pc, #76]	; (200006c4 <graphic_ctrl_bit_set+0x5c>)
20000678:	7d1b      	ldrb	r3, [r3, #20]
2000067a:	b2db      	uxtb	r3, r3
2000067c:	2104      	movs	r1, #4
2000067e:	438b      	bics	r3, r1
20000680:	b2db      	uxtb	r3, r3
20000682:	7513      	strb	r3, [r2, #20]
20000684:	4a0f      	ldr	r2, [pc, #60]	; (200006c4 <graphic_ctrl_bit_set+0x5c>)
20000686:	230f      	movs	r3, #15
20000688:	18fb      	adds	r3, r7, r3
2000068a:	7d12      	ldrb	r2, [r2, #20]
2000068c:	701a      	strb	r2, [r3, #0]
2000068e:	230f      	movs	r3, #15
20000690:	18fb      	adds	r3, r7, r3
20000692:	220f      	movs	r2, #15
20000694:	18b9      	adds	r1, r7, r2
20000696:	1dfa      	adds	r2, r7, #7
20000698:	7809      	ldrb	r1, [r1, #0]
2000069a:	7812      	ldrb	r2, [r2, #0]
2000069c:	430a      	orrs	r2, r1
2000069e:	701a      	strb	r2, [r3, #0]
200006a0:	230f      	movs	r3, #15
200006a2:	18fb      	adds	r3, r7, r3
200006a4:	220f      	movs	r2, #15
200006a6:	18ba      	adds	r2, r7, r2
200006a8:	7812      	ldrb	r2, [r2, #0]
200006aa:	2104      	movs	r1, #4
200006ac:	438a      	bics	r2, r1
200006ae:	701a      	strb	r2, [r3, #0]
200006b0:	4a04      	ldr	r2, [pc, #16]	; (200006c4 <graphic_ctrl_bit_set+0x5c>)
200006b2:	230f      	movs	r3, #15
200006b4:	18fb      	adds	r3, r7, r3
200006b6:	781b      	ldrb	r3, [r3, #0]
200006b8:	7513      	strb	r3, [r2, #20]
200006ba:	46c0      	nop			; (mov r8, r8)
200006bc:	46bd      	mov	sp, r7
200006be:	b004      	add	sp, #16
200006c0:	bd80      	pop	{r7, pc}
200006c2:	46c0      	nop			; (mov r8, r8)
200006c4:	40021000 	andmi	r1, r2, r0

200006c8 <graphic_ctrl_bit_clear>:
200006c8:	b580      	push	{r7, lr}
200006ca:	b084      	sub	sp, #16
200006cc:	af00      	add	r7, sp, #0
200006ce:	0002      	movs	r2, r0
200006d0:	1dfb      	adds	r3, r7, #7
200006d2:	701a      	strb	r2, [r3, #0]
200006d4:	4a15      	ldr	r2, [pc, #84]	; (2000072c <graphic_ctrl_bit_clear+0x64>)
200006d6:	4b15      	ldr	r3, [pc, #84]	; (2000072c <graphic_ctrl_bit_clear+0x64>)
200006d8:	7d1b      	ldrb	r3, [r3, #20]
200006da:	b2db      	uxtb	r3, r3
200006dc:	2104      	movs	r1, #4
200006de:	438b      	bics	r3, r1
200006e0:	b2db      	uxtb	r3, r3
200006e2:	7513      	strb	r3, [r2, #20]
200006e4:	4a11      	ldr	r2, [pc, #68]	; (2000072c <graphic_ctrl_bit_clear+0x64>)
200006e6:	230f      	movs	r3, #15
200006e8:	18fb      	adds	r3, r7, r3
200006ea:	7d12      	ldrb	r2, [r2, #20]
200006ec:	701a      	strb	r2, [r3, #0]
200006ee:	1dfb      	adds	r3, r7, #7
200006f0:	781b      	ldrb	r3, [r3, #0]
200006f2:	b25b      	sxtb	r3, r3
200006f4:	43db      	mvns	r3, r3
200006f6:	b25b      	sxtb	r3, r3
200006f8:	220f      	movs	r2, #15
200006fa:	18ba      	adds	r2, r7, r2
200006fc:	7812      	ldrb	r2, [r2, #0]
200006fe:	b252      	sxtb	r2, r2
20000700:	4013      	ands	r3, r2
20000702:	b25a      	sxtb	r2, r3
20000704:	230f      	movs	r3, #15
20000706:	18fb      	adds	r3, r7, r3
20000708:	701a      	strb	r2, [r3, #0]
2000070a:	230f      	movs	r3, #15
2000070c:	18fb      	adds	r3, r7, r3
2000070e:	220f      	movs	r2, #15
20000710:	18ba      	adds	r2, r7, r2
20000712:	7812      	ldrb	r2, [r2, #0]
20000714:	2104      	movs	r1, #4
20000716:	438a      	bics	r2, r1
20000718:	701a      	strb	r2, [r3, #0]
2000071a:	4a04      	ldr	r2, [pc, #16]	; (2000072c <graphic_ctrl_bit_clear+0x64>)
2000071c:	230f      	movs	r3, #15
2000071e:	18fb      	adds	r3, r7, r3
20000720:	781b      	ldrb	r3, [r3, #0]
20000722:	7513      	strb	r3, [r2, #20]
20000724:	46c0      	nop			; (mov r8, r8)
20000726:	46bd      	mov	sp, r7
20000728:	b004      	add	sp, #16
2000072a:	bd80      	pop	{r7, pc}
2000072c:	40021000 	andmi	r1, r2, r0

20000730 <select_controller>:
20000730:	b580      	push	{r7, lr}
20000732:	b082      	sub	sp, #8
20000734:	af00      	add	r7, sp, #0
20000736:	0002      	movs	r2, r0
20000738:	1dfb      	adds	r3, r7, #7
2000073a:	701a      	strb	r2, [r3, #0]
2000073c:	1dfb      	adds	r3, r7, #7
2000073e:	781b      	ldrb	r3, [r3, #0]
20000740:	2b08      	cmp	r3, #8
20000742:	d00c      	beq.n	2000075e <select_controller+0x2e>
20000744:	dc02      	bgt.n	2000074c <select_controller+0x1c>
20000746:	2b00      	cmp	r3, #0
20000748:	d005      	beq.n	20000756 <select_controller+0x26>
2000074a:	e01a      	b.n	20000782 <select_controller+0x52>
2000074c:	2b10      	cmp	r3, #16
2000074e:	d00d      	beq.n	2000076c <select_controller+0x3c>
20000750:	2b18      	cmp	r3, #24
20000752:	d012      	beq.n	2000077a <select_controller+0x4a>
20000754:	e015      	b.n	20000782 <select_controller+0x52>
20000756:	2018      	movs	r0, #24
20000758:	f7ff ffb6 	bl	200006c8 <graphic_ctrl_bit_clear>
2000075c:	e011      	b.n	20000782 <select_controller+0x52>
2000075e:	2010      	movs	r0, #16
20000760:	f7ff ffb2 	bl	200006c8 <graphic_ctrl_bit_clear>
20000764:	2008      	movs	r0, #8
20000766:	f7ff ff7f 	bl	20000668 <graphic_ctrl_bit_set>
2000076a:	e00a      	b.n	20000782 <select_controller+0x52>
2000076c:	2008      	movs	r0, #8
2000076e:	f7ff ffab 	bl	200006c8 <graphic_ctrl_bit_clear>
20000772:	2010      	movs	r0, #16
20000774:	f7ff ff78 	bl	20000668 <graphic_ctrl_bit_set>
20000778:	e003      	b.n	20000782 <select_controller+0x52>
2000077a:	2018      	movs	r0, #24
2000077c:	f7ff ff74 	bl	20000668 <graphic_ctrl_bit_set>
20000780:	46c0      	nop			; (mov r8, r8)
20000782:	46c0      	nop			; (mov r8, r8)
20000784:	46bd      	mov	sp, r7
20000786:	b002      	add	sp, #8
20000788:	bd80      	pop	{r7, pc}

2000078a <graphic_wait_ready>:
2000078a:	b580      	push	{r7, lr}
2000078c:	b082      	sub	sp, #8
2000078e:	af00      	add	r7, sp, #0
20000790:	2040      	movs	r0, #64	; 0x40
20000792:	f7ff ff99 	bl	200006c8 <graphic_ctrl_bit_clear>
20000796:	4b17      	ldr	r3, [pc, #92]	; (200007f4 <graphic_wait_ready+0x6a>)
20000798:	4a17      	ldr	r2, [pc, #92]	; (200007f8 <graphic_wait_ready+0x6e>)
2000079a:	601a      	str	r2, [r3, #0]
2000079c:	2001      	movs	r0, #1
2000079e:	f7ff ff93 	bl	200006c8 <graphic_ctrl_bit_clear>
200007a2:	2002      	movs	r0, #2
200007a4:	f7ff ff60 	bl	20000668 <graphic_ctrl_bit_set>
200007a8:	f000 ff02 	bl	200015b0 <delay_500ns>
200007ac:	2040      	movs	r0, #64	; 0x40
200007ae:	f7ff ff5b 	bl	20000668 <graphic_ctrl_bit_set>
200007b2:	f000 fefd 	bl	200015b0 <delay_500ns>
200007b6:	4a0f      	ldr	r2, [pc, #60]	; (200007f4 <graphic_wait_ready+0x6a>)
200007b8:	1dfb      	adds	r3, r7, #7
200007ba:	7c52      	ldrb	r2, [r2, #17]
200007bc:	701a      	strb	r2, [r3, #0]
200007be:	2040      	movs	r0, #64	; 0x40
200007c0:	f7ff ff82 	bl	200006c8 <graphic_ctrl_bit_clear>
200007c4:	f000 fef4 	bl	200015b0 <delay_500ns>
200007c8:	1dfb      	adds	r3, r7, #7
200007ca:	1dfa      	adds	r2, r7, #7
200007cc:	7812      	ldrb	r2, [r2, #0]
200007ce:	217f      	movs	r1, #127	; 0x7f
200007d0:	438a      	bics	r2, r1
200007d2:	701a      	strb	r2, [r3, #0]
200007d4:	1dfb      	adds	r3, r7, #7
200007d6:	781b      	ldrb	r3, [r3, #0]
200007d8:	2b00      	cmp	r3, #0
200007da:	d000      	beq.n	200007de <graphic_wait_ready+0x54>
200007dc:	e7e6      	b.n	200007ac <graphic_wait_ready+0x22>
200007de:	46c0      	nop			; (mov r8, r8)
200007e0:	2040      	movs	r0, #64	; 0x40
200007e2:	f7ff ff41 	bl	20000668 <graphic_ctrl_bit_set>
200007e6:	4b03      	ldr	r3, [pc, #12]	; (200007f4 <graphic_wait_ready+0x6a>)
200007e8:	4a04      	ldr	r2, [pc, #16]	; (200007fc <graphic_wait_ready+0x72>)
200007ea:	601a      	str	r2, [r3, #0]
200007ec:	46c0      	nop			; (mov r8, r8)
200007ee:	46bd      	mov	sp, r7
200007f0:	b002      	add	sp, #8
200007f2:	bd80      	pop	{r7, pc}
200007f4:	40021000 	andmi	r1, r2, r0
200007f8:	00005555 	andeq	r5, r0, r5, asr r5
200007fc:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

20000800 <graphic_read>:
20000800:	b580      	push	{r7, lr}
20000802:	b084      	sub	sp, #16
20000804:	af00      	add	r7, sp, #0
20000806:	0002      	movs	r2, r0
20000808:	1dfb      	adds	r3, r7, #7
2000080a:	701a      	strb	r2, [r3, #0]
2000080c:	2040      	movs	r0, #64	; 0x40
2000080e:	f7ff ff5b 	bl	200006c8 <graphic_ctrl_bit_clear>
20000812:	4b1c      	ldr	r3, [pc, #112]	; (20000884 <graphic_read+0x84>)
20000814:	4a1c      	ldr	r2, [pc, #112]	; (20000888 <graphic_read+0x88>)
20000816:	601a      	str	r2, [r3, #0]
20000818:	2003      	movs	r0, #3
2000081a:	f7ff ff25 	bl	20000668 <graphic_ctrl_bit_set>
2000081e:	1dfb      	adds	r3, r7, #7
20000820:	781b      	ldrb	r3, [r3, #0]
20000822:	0018      	movs	r0, r3
20000824:	f7ff ff84 	bl	20000730 <select_controller>
20000828:	f000 fec2 	bl	200015b0 <delay_500ns>
2000082c:	2040      	movs	r0, #64	; 0x40
2000082e:	f7ff ff1b 	bl	20000668 <graphic_ctrl_bit_set>
20000832:	f000 febd 	bl	200015b0 <delay_500ns>
20000836:	4a13      	ldr	r2, [pc, #76]	; (20000884 <graphic_read+0x84>)
20000838:	230f      	movs	r3, #15
2000083a:	18fb      	adds	r3, r7, r3
2000083c:	7c52      	ldrb	r2, [r2, #17]
2000083e:	701a      	strb	r2, [r3, #0]
20000840:	2040      	movs	r0, #64	; 0x40
20000842:	f7ff ff41 	bl	200006c8 <graphic_ctrl_bit_clear>
20000846:	4b0f      	ldr	r3, [pc, #60]	; (20000884 <graphic_read+0x84>)
20000848:	4a10      	ldr	r2, [pc, #64]	; (2000088c <graphic_read+0x8c>)
2000084a:	601a      	str	r2, [r3, #0]
2000084c:	1dfb      	adds	r3, r7, #7
2000084e:	781b      	ldrb	r3, [r3, #0]
20000850:	2208      	movs	r2, #8
20000852:	4013      	ands	r3, r2
20000854:	d004      	beq.n	20000860 <graphic_read+0x60>
20000856:	2008      	movs	r0, #8
20000858:	f7ff ff6a 	bl	20000730 <select_controller>
2000085c:	f7ff ff95 	bl	2000078a <graphic_wait_ready>
20000860:	1dfb      	adds	r3, r7, #7
20000862:	781b      	ldrb	r3, [r3, #0]
20000864:	2210      	movs	r2, #16
20000866:	4013      	ands	r3, r2
20000868:	d004      	beq.n	20000874 <graphic_read+0x74>
2000086a:	2010      	movs	r0, #16
2000086c:	f7ff ff60 	bl	20000730 <select_controller>
20000870:	f7ff ff8b 	bl	2000078a <graphic_wait_ready>
20000874:	230f      	movs	r3, #15
20000876:	18fb      	adds	r3, r7, r3
20000878:	781b      	ldrb	r3, [r3, #0]
2000087a:	0018      	movs	r0, r3
2000087c:	46bd      	mov	sp, r7
2000087e:	b004      	add	sp, #16
20000880:	bd80      	pop	{r7, pc}
20000882:	46c0      	nop			; (mov r8, r8)
20000884:	40021000 	andmi	r1, r2, r0
20000888:	00005555 	andeq	r5, r0, r5, asr r5
2000088c:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

20000890 <graphic_write>:
20000890:	b580      	push	{r7, lr}
20000892:	b082      	sub	sp, #8
20000894:	af00      	add	r7, sp, #0
20000896:	0002      	movs	r2, r0
20000898:	1dfb      	adds	r3, r7, #7
2000089a:	701a      	strb	r2, [r3, #0]
2000089c:	1dbb      	adds	r3, r7, #6
2000089e:	1c0a      	adds	r2, r1, #0
200008a0:	701a      	strb	r2, [r3, #0]
200008a2:	4a1a      	ldr	r2, [pc, #104]	; (2000090c <graphic_write+0x7c>)
200008a4:	1dfb      	adds	r3, r7, #7
200008a6:	781b      	ldrb	r3, [r3, #0]
200008a8:	7553      	strb	r3, [r2, #21]
200008aa:	1dbb      	adds	r3, r7, #6
200008ac:	781b      	ldrb	r3, [r3, #0]
200008ae:	0018      	movs	r0, r3
200008b0:	f7ff ff3e 	bl	20000730 <select_controller>
200008b4:	f000 fe7c 	bl	200015b0 <delay_500ns>
200008b8:	2040      	movs	r0, #64	; 0x40
200008ba:	f7ff fed5 	bl	20000668 <graphic_ctrl_bit_set>
200008be:	f000 fe77 	bl	200015b0 <delay_500ns>
200008c2:	2040      	movs	r0, #64	; 0x40
200008c4:	f7ff ff00 	bl	200006c8 <graphic_ctrl_bit_clear>
200008c8:	1dbb      	adds	r3, r7, #6
200008ca:	781b      	ldrb	r3, [r3, #0]
200008cc:	2208      	movs	r2, #8
200008ce:	4013      	ands	r3, r2
200008d0:	d004      	beq.n	200008dc <graphic_write+0x4c>
200008d2:	2008      	movs	r0, #8
200008d4:	f7ff ff2c 	bl	20000730 <select_controller>
200008d8:	f7ff ff57 	bl	2000078a <graphic_wait_ready>
200008dc:	1dbb      	adds	r3, r7, #6
200008de:	781b      	ldrb	r3, [r3, #0]
200008e0:	2210      	movs	r2, #16
200008e2:	4013      	ands	r3, r2
200008e4:	d004      	beq.n	200008f0 <graphic_write+0x60>
200008e6:	2010      	movs	r0, #16
200008e8:	f7ff ff22 	bl	20000730 <select_controller>
200008ec:	f7ff ff4d 	bl	2000078a <graphic_wait_ready>
200008f0:	4b06      	ldr	r3, [pc, #24]	; (2000090c <graphic_write+0x7c>)
200008f2:	2200      	movs	r2, #0
200008f4:	755a      	strb	r2, [r3, #21]
200008f6:	2040      	movs	r0, #64	; 0x40
200008f8:	f7ff feb6 	bl	20000668 <graphic_ctrl_bit_set>
200008fc:	2000      	movs	r0, #0
200008fe:	f7ff ff17 	bl	20000730 <select_controller>
20000902:	46c0      	nop			; (mov r8, r8)
20000904:	46bd      	mov	sp, r7
20000906:	b002      	add	sp, #8
20000908:	bd80      	pop	{r7, pc}
2000090a:	46c0      	nop			; (mov r8, r8)
2000090c:	40021000 	andmi	r1, r2, r0

20000910 <graphic_write_command>:
20000910:	b580      	push	{r7, lr}
20000912:	b082      	sub	sp, #8
20000914:	af00      	add	r7, sp, #0
20000916:	0002      	movs	r2, r0
20000918:	1dfb      	adds	r3, r7, #7
2000091a:	701a      	strb	r2, [r3, #0]
2000091c:	1dbb      	adds	r3, r7, #6
2000091e:	1c0a      	adds	r2, r1, #0
20000920:	701a      	strb	r2, [r3, #0]
20000922:	2040      	movs	r0, #64	; 0x40
20000924:	f7ff fed0 	bl	200006c8 <graphic_ctrl_bit_clear>
20000928:	1dbb      	adds	r3, r7, #6
2000092a:	781b      	ldrb	r3, [r3, #0]
2000092c:	0018      	movs	r0, r3
2000092e:	f7ff feff 	bl	20000730 <select_controller>
20000932:	2003      	movs	r0, #3
20000934:	f7ff fec8 	bl	200006c8 <graphic_ctrl_bit_clear>
20000938:	1dbb      	adds	r3, r7, #6
2000093a:	781a      	ldrb	r2, [r3, #0]
2000093c:	1dfb      	adds	r3, r7, #7
2000093e:	781b      	ldrb	r3, [r3, #0]
20000940:	0011      	movs	r1, r2
20000942:	0018      	movs	r0, r3
20000944:	f7ff ffa4 	bl	20000890 <graphic_write>
20000948:	46c0      	nop			; (mov r8, r8)
2000094a:	46bd      	mov	sp, r7
2000094c:	b002      	add	sp, #8
2000094e:	bd80      	pop	{r7, pc}

20000950 <graphic_write_data>:
20000950:	b580      	push	{r7, lr}
20000952:	b082      	sub	sp, #8
20000954:	af00      	add	r7, sp, #0
20000956:	0002      	movs	r2, r0
20000958:	1dfb      	adds	r3, r7, #7
2000095a:	701a      	strb	r2, [r3, #0]
2000095c:	1dbb      	adds	r3, r7, #6
2000095e:	1c0a      	adds	r2, r1, #0
20000960:	701a      	strb	r2, [r3, #0]
20000962:	2040      	movs	r0, #64	; 0x40
20000964:	f7ff feb0 	bl	200006c8 <graphic_ctrl_bit_clear>
20000968:	1dbb      	adds	r3, r7, #6
2000096a:	781b      	ldrb	r3, [r3, #0]
2000096c:	0018      	movs	r0, r3
2000096e:	f7ff fedf 	bl	20000730 <select_controller>
20000972:	2001      	movs	r0, #1
20000974:	f7ff fe78 	bl	20000668 <graphic_ctrl_bit_set>
20000978:	2002      	movs	r0, #2
2000097a:	f7ff fea5 	bl	200006c8 <graphic_ctrl_bit_clear>
2000097e:	1dbb      	adds	r3, r7, #6
20000980:	781a      	ldrb	r2, [r3, #0]
20000982:	1dfb      	adds	r3, r7, #7
20000984:	781b      	ldrb	r3, [r3, #0]
20000986:	0011      	movs	r1, r2
20000988:	0018      	movs	r0, r3
2000098a:	f7ff ff81 	bl	20000890 <graphic_write>
2000098e:	46c0      	nop			; (mov r8, r8)
20000990:	46bd      	mov	sp, r7
20000992:	b002      	add	sp, #8
20000994:	bd80      	pop	{r7, pc}

20000996 <graphic_read_data>:
20000996:	b580      	push	{r7, lr}
20000998:	b082      	sub	sp, #8
2000099a:	af00      	add	r7, sp, #0
2000099c:	0002      	movs	r2, r0
2000099e:	1dfb      	adds	r3, r7, #7
200009a0:	701a      	strb	r2, [r3, #0]
200009a2:	1dfb      	adds	r3, r7, #7
200009a4:	781b      	ldrb	r3, [r3, #0]
200009a6:	0018      	movs	r0, r3
200009a8:	f7ff ff2a 	bl	20000800 <graphic_read>
200009ac:	1dfb      	adds	r3, r7, #7
200009ae:	781b      	ldrb	r3, [r3, #0]
200009b0:	0018      	movs	r0, r3
200009b2:	f7ff ff25 	bl	20000800 <graphic_read>
200009b6:	0003      	movs	r3, r0
200009b8:	0018      	movs	r0, r3
200009ba:	46bd      	mov	sp, r7
200009bc:	b002      	add	sp, #8
200009be:	bd80      	pop	{r7, pc}

200009c0 <graphic_initialize>:
200009c0:	b580      	push	{r7, lr}
200009c2:	af00      	add	r7, sp, #0
200009c4:	2040      	movs	r0, #64	; 0x40
200009c6:	f7ff fe4f 	bl	20000668 <graphic_ctrl_bit_set>
200009ca:	200a      	movs	r0, #10
200009cc:	f000 fdf9 	bl	200015c2 <delay_mikro>
200009d0:	2078      	movs	r0, #120	; 0x78
200009d2:	f7ff fe79 	bl	200006c8 <graphic_ctrl_bit_clear>
200009d6:	201e      	movs	r0, #30
200009d8:	f000 fe08 	bl	200015ec <delay_milli>
200009dc:	2020      	movs	r0, #32
200009de:	f7ff fe43 	bl	20000668 <graphic_ctrl_bit_set>
200009e2:	2064      	movs	r0, #100	; 0x64
200009e4:	f000 fe02 	bl	200015ec <delay_milli>
200009e8:	2118      	movs	r1, #24
200009ea:	203e      	movs	r0, #62	; 0x3e
200009ec:	f7ff ff90 	bl	20000910 <graphic_write_command>
200009f0:	2118      	movs	r1, #24
200009f2:	203f      	movs	r0, #63	; 0x3f
200009f4:	f7ff ff8c 	bl	20000910 <graphic_write_command>
200009f8:	2118      	movs	r1, #24
200009fa:	20c0      	movs	r0, #192	; 0xc0
200009fc:	f7ff ff88 	bl	20000910 <graphic_write_command>
20000a00:	2118      	movs	r1, #24
20000a02:	2040      	movs	r0, #64	; 0x40
20000a04:	f7ff ff84 	bl	20000910 <graphic_write_command>
20000a08:	2118      	movs	r1, #24
20000a0a:	20b8      	movs	r0, #184	; 0xb8
20000a0c:	f7ff ff80 	bl	20000910 <graphic_write_command>
20000a10:	2000      	movs	r0, #0
20000a12:	f7ff fe8d 	bl	20000730 <select_controller>
20000a16:	46c0      	nop			; (mov r8, r8)
20000a18:	46bd      	mov	sp, r7
20000a1a:	bd80      	pop	{r7, pc}

20000a1c <graphic_clear_screen>:
20000a1c:	b580      	push	{r7, lr}
20000a1e:	b082      	sub	sp, #8
20000a20:	af00      	add	r7, sp, #0
20000a22:	1dfb      	adds	r3, r7, #7
20000a24:	2200      	movs	r2, #0
20000a26:	701a      	strb	r2, [r3, #0]
20000a28:	e023      	b.n	20000a72 <graphic_clear_screen+0x56>
20000a2a:	1dfb      	adds	r3, r7, #7
20000a2c:	781b      	ldrb	r3, [r3, #0]
20000a2e:	2248      	movs	r2, #72	; 0x48
20000a30:	4252      	negs	r2, r2
20000a32:	4313      	orrs	r3, r2
20000a34:	b2db      	uxtb	r3, r3
20000a36:	2118      	movs	r1, #24
20000a38:	0018      	movs	r0, r3
20000a3a:	f7ff ff69 	bl	20000910 <graphic_write_command>
20000a3e:	2118      	movs	r1, #24
20000a40:	2040      	movs	r0, #64	; 0x40
20000a42:	f7ff ff65 	bl	20000910 <graphic_write_command>
20000a46:	1dbb      	adds	r3, r7, #6
20000a48:	2200      	movs	r2, #0
20000a4a:	701a      	strb	r2, [r3, #0]
20000a4c:	e008      	b.n	20000a60 <graphic_clear_screen+0x44>
20000a4e:	2118      	movs	r1, #24
20000a50:	2000      	movs	r0, #0
20000a52:	f7ff ff7d 	bl	20000950 <graphic_write_data>
20000a56:	1dbb      	adds	r3, r7, #6
20000a58:	781a      	ldrb	r2, [r3, #0]
20000a5a:	1dbb      	adds	r3, r7, #6
20000a5c:	3201      	adds	r2, #1
20000a5e:	701a      	strb	r2, [r3, #0]
20000a60:	1dbb      	adds	r3, r7, #6
20000a62:	781b      	ldrb	r3, [r3, #0]
20000a64:	2b3f      	cmp	r3, #63	; 0x3f
20000a66:	d9f2      	bls.n	20000a4e <graphic_clear_screen+0x32>
20000a68:	1dfb      	adds	r3, r7, #7
20000a6a:	781a      	ldrb	r2, [r3, #0]
20000a6c:	1dfb      	adds	r3, r7, #7
20000a6e:	3201      	adds	r2, #1
20000a70:	701a      	strb	r2, [r3, #0]
20000a72:	1dfb      	adds	r3, r7, #7
20000a74:	781b      	ldrb	r3, [r3, #0]
20000a76:	2b07      	cmp	r3, #7
20000a78:	d9d7      	bls.n	20000a2a <graphic_clear_screen+0xe>
20000a7a:	46c0      	nop			; (mov r8, r8)
20000a7c:	46bd      	mov	sp, r7
20000a7e:	b002      	add	sp, #8
20000a80:	bd80      	pop	{r7, pc}

20000a82 <pixel>:
20000a82:	b590      	push	{r4, r7, lr}
20000a84:	b085      	sub	sp, #20
20000a86:	af00      	add	r7, sp, #0
20000a88:	0004      	movs	r4, r0
20000a8a:	0008      	movs	r0, r1
20000a8c:	0011      	movs	r1, r2
20000a8e:	1dfb      	adds	r3, r7, #7
20000a90:	1c22      	adds	r2, r4, #0
20000a92:	701a      	strb	r2, [r3, #0]
20000a94:	1dbb      	adds	r3, r7, #6
20000a96:	1c02      	adds	r2, r0, #0
20000a98:	701a      	strb	r2, [r3, #0]
20000a9a:	1d7b      	adds	r3, r7, #5
20000a9c:	1c0a      	adds	r2, r1, #0
20000a9e:	701a      	strb	r2, [r3, #0]
20000aa0:	1dfb      	adds	r3, r7, #7
20000aa2:	781b      	ldrb	r3, [r3, #0]
20000aa4:	2b00      	cmp	r3, #0
20000aa6:	d100      	bne.n	20000aaa <pixel+0x28>
20000aa8:	e0b4      	b.n	20000c14 <pixel+0x192>
20000aaa:	1dfb      	adds	r3, r7, #7
20000aac:	781b      	ldrb	r3, [r3, #0]
20000aae:	2b80      	cmp	r3, #128	; 0x80
20000ab0:	d900      	bls.n	20000ab4 <pixel+0x32>
20000ab2:	e0af      	b.n	20000c14 <pixel+0x192>
20000ab4:	1dbb      	adds	r3, r7, #6
20000ab6:	781b      	ldrb	r3, [r3, #0]
20000ab8:	2b00      	cmp	r3, #0
20000aba:	d100      	bne.n	20000abe <pixel+0x3c>
20000abc:	e0ac      	b.n	20000c18 <pixel+0x196>
20000abe:	1dbb      	adds	r3, r7, #6
20000ac0:	781b      	ldrb	r3, [r3, #0]
20000ac2:	2b40      	cmp	r3, #64	; 0x40
20000ac4:	d900      	bls.n	20000ac8 <pixel+0x46>
20000ac6:	e0a7      	b.n	20000c18 <pixel+0x196>
20000ac8:	1d7b      	adds	r3, r7, #5
20000aca:	781b      	ldrb	r3, [r3, #0]
20000acc:	2b01      	cmp	r3, #1
20000ace:	d004      	beq.n	20000ada <pixel+0x58>
20000ad0:	1d7b      	adds	r3, r7, #5
20000ad2:	781b      	ldrb	r3, [r3, #0]
20000ad4:	2b00      	cmp	r3, #0
20000ad6:	d000      	beq.n	20000ada <pixel+0x58>
20000ad8:	e0a0      	b.n	20000c1c <pixel+0x19a>
20000ada:	1dbb      	adds	r3, r7, #6
20000adc:	781b      	ldrb	r3, [r3, #0]
20000ade:	3b01      	subs	r3, #1
20000ae0:	2b00      	cmp	r3, #0
20000ae2:	da00      	bge.n	20000ae6 <pixel+0x64>
20000ae4:	3307      	adds	r3, #7
20000ae6:	10db      	asrs	r3, r3, #3
20000ae8:	001a      	movs	r2, r3
20000aea:	230c      	movs	r3, #12
20000aec:	18fb      	adds	r3, r7, r3
20000aee:	701a      	strb	r2, [r3, #0]
20000af0:	230f      	movs	r3, #15
20000af2:	18fb      	adds	r3, r7, r3
20000af4:	2201      	movs	r2, #1
20000af6:	701a      	strb	r2, [r3, #0]
20000af8:	230f      	movs	r3, #15
20000afa:	18fb      	adds	r3, r7, r3
20000afc:	781a      	ldrb	r2, [r3, #0]
20000afe:	1dbb      	adds	r3, r7, #6
20000b00:	781b      	ldrb	r3, [r3, #0]
20000b02:	3b01      	subs	r3, #1
20000b04:	4947      	ldr	r1, [pc, #284]	; (20000c24 <pixel+0x1a2>)
20000b06:	400b      	ands	r3, r1
20000b08:	d504      	bpl.n	20000b14 <pixel+0x92>
20000b0a:	3b01      	subs	r3, #1
20000b0c:	2108      	movs	r1, #8
20000b0e:	4249      	negs	r1, r1
20000b10:	430b      	orrs	r3, r1
20000b12:	3301      	adds	r3, #1
20000b14:	409a      	lsls	r2, r3
20000b16:	230f      	movs	r3, #15
20000b18:	18fb      	adds	r3, r7, r3
20000b1a:	701a      	strb	r2, [r3, #0]
20000b1c:	1d7b      	adds	r3, r7, #5
20000b1e:	781b      	ldrb	r3, [r3, #0]
20000b20:	2b00      	cmp	r3, #0
20000b22:	d106      	bne.n	20000b32 <pixel+0xb0>
20000b24:	230f      	movs	r3, #15
20000b26:	18fb      	adds	r3, r7, r3
20000b28:	220f      	movs	r2, #15
20000b2a:	18ba      	adds	r2, r7, r2
20000b2c:	7812      	ldrb	r2, [r2, #0]
20000b2e:	43d2      	mvns	r2, r2
20000b30:	701a      	strb	r2, [r3, #0]
20000b32:	1dfb      	adds	r3, r7, #7
20000b34:	781b      	ldrb	r3, [r3, #0]
20000b36:	2b40      	cmp	r3, #64	; 0x40
20000b38:	d90a      	bls.n	20000b50 <pixel+0xce>
20000b3a:	230d      	movs	r3, #13
20000b3c:	18fb      	adds	r3, r7, r3
20000b3e:	2210      	movs	r2, #16
20000b40:	701a      	strb	r2, [r3, #0]
20000b42:	230e      	movs	r3, #14
20000b44:	18fb      	adds	r3, r7, r3
20000b46:	1dfa      	adds	r2, r7, #7
20000b48:	7812      	ldrb	r2, [r2, #0]
20000b4a:	3a41      	subs	r2, #65	; 0x41
20000b4c:	701a      	strb	r2, [r3, #0]
20000b4e:	e009      	b.n	20000b64 <pixel+0xe2>
20000b50:	230d      	movs	r3, #13
20000b52:	18fb      	adds	r3, r7, r3
20000b54:	2208      	movs	r2, #8
20000b56:	701a      	strb	r2, [r3, #0]
20000b58:	230e      	movs	r3, #14
20000b5a:	18fb      	adds	r3, r7, r3
20000b5c:	1dfa      	adds	r2, r7, #7
20000b5e:	7812      	ldrb	r2, [r2, #0]
20000b60:	3a01      	subs	r2, #1
20000b62:	701a      	strb	r2, [r3, #0]
20000b64:	230e      	movs	r3, #14
20000b66:	18fb      	adds	r3, r7, r3
20000b68:	781b      	ldrb	r3, [r3, #0]
20000b6a:	2240      	movs	r2, #64	; 0x40
20000b6c:	4313      	orrs	r3, r2
20000b6e:	b2da      	uxtb	r2, r3
20000b70:	230d      	movs	r3, #13
20000b72:	18fb      	adds	r3, r7, r3
20000b74:	781b      	ldrb	r3, [r3, #0]
20000b76:	0019      	movs	r1, r3
20000b78:	0010      	movs	r0, r2
20000b7a:	f7ff fec9 	bl	20000910 <graphic_write_command>
20000b7e:	230c      	movs	r3, #12
20000b80:	18fb      	adds	r3, r7, r3
20000b82:	781b      	ldrb	r3, [r3, #0]
20000b84:	2248      	movs	r2, #72	; 0x48
20000b86:	4252      	negs	r2, r2
20000b88:	4313      	orrs	r3, r2
20000b8a:	b2da      	uxtb	r2, r3
20000b8c:	230d      	movs	r3, #13
20000b8e:	18fb      	adds	r3, r7, r3
20000b90:	781b      	ldrb	r3, [r3, #0]
20000b92:	0019      	movs	r1, r3
20000b94:	0010      	movs	r0, r2
20000b96:	f7ff febb 	bl	20000910 <graphic_write_command>
20000b9a:	230b      	movs	r3, #11
20000b9c:	18fc      	adds	r4, r7, r3
20000b9e:	230d      	movs	r3, #13
20000ba0:	18fb      	adds	r3, r7, r3
20000ba2:	781b      	ldrb	r3, [r3, #0]
20000ba4:	0018      	movs	r0, r3
20000ba6:	f7ff fef6 	bl	20000996 <graphic_read_data>
20000baa:	0003      	movs	r3, r0
20000bac:	7023      	strb	r3, [r4, #0]
20000bae:	230e      	movs	r3, #14
20000bb0:	18fb      	adds	r3, r7, r3
20000bb2:	781b      	ldrb	r3, [r3, #0]
20000bb4:	2240      	movs	r2, #64	; 0x40
20000bb6:	4313      	orrs	r3, r2
20000bb8:	b2da      	uxtb	r2, r3
20000bba:	230d      	movs	r3, #13
20000bbc:	18fb      	adds	r3, r7, r3
20000bbe:	781b      	ldrb	r3, [r3, #0]
20000bc0:	0019      	movs	r1, r3
20000bc2:	0010      	movs	r0, r2
20000bc4:	f7ff fea4 	bl	20000910 <graphic_write_command>
20000bc8:	1d7b      	adds	r3, r7, #5
20000bca:	781b      	ldrb	r3, [r3, #0]
20000bcc:	2b01      	cmp	r3, #1
20000bce:	d10a      	bne.n	20000be6 <pixel+0x164>
20000bd0:	230f      	movs	r3, #15
20000bd2:	18fb      	adds	r3, r7, r3
20000bd4:	220f      	movs	r2, #15
20000bd6:	18b9      	adds	r1, r7, r2
20000bd8:	220b      	movs	r2, #11
20000bda:	18ba      	adds	r2, r7, r2
20000bdc:	7809      	ldrb	r1, [r1, #0]
20000bde:	7812      	ldrb	r2, [r2, #0]
20000be0:	430a      	orrs	r2, r1
20000be2:	701a      	strb	r2, [r3, #0]
20000be4:	e009      	b.n	20000bfa <pixel+0x178>
20000be6:	230f      	movs	r3, #15
20000be8:	18fb      	adds	r3, r7, r3
20000bea:	220f      	movs	r2, #15
20000bec:	18ba      	adds	r2, r7, r2
20000bee:	210b      	movs	r1, #11
20000bf0:	1879      	adds	r1, r7, r1
20000bf2:	7812      	ldrb	r2, [r2, #0]
20000bf4:	7809      	ldrb	r1, [r1, #0]
20000bf6:	400a      	ands	r2, r1
20000bf8:	701a      	strb	r2, [r3, #0]
20000bfa:	230d      	movs	r3, #13
20000bfc:	18fb      	adds	r3, r7, r3
20000bfe:	781a      	ldrb	r2, [r3, #0]
20000c00:	230f      	movs	r3, #15
20000c02:	18fb      	adds	r3, r7, r3
20000c04:	781b      	ldrb	r3, [r3, #0]
20000c06:	0011      	movs	r1, r2
20000c08:	0018      	movs	r0, r3
20000c0a:	f7ff fea1 	bl	20000950 <graphic_write_data>
20000c0e:	f000 fccf 	bl	200015b0 <delay_500ns>
20000c12:	e004      	b.n	20000c1e <pixel+0x19c>
20000c14:	46c0      	nop			; (mov r8, r8)
20000c16:	e002      	b.n	20000c1e <pixel+0x19c>
20000c18:	46c0      	nop			; (mov r8, r8)
20000c1a:	e000      	b.n	20000c1e <pixel+0x19c>
20000c1c:	46c0      	nop			; (mov r8, r8)
20000c1e:	46bd      	mov	sp, r7
20000c20:	b005      	add	sp, #20
20000c22:	bd90      	pop	{r4, r7, pc}
20000c24:	80000007 	andhi	r0, r0, r7

20000c28 <draw_object>:
20000c28:	b580      	push	{r7, lr}
20000c2a:	b084      	sub	sp, #16
20000c2c:	af00      	add	r7, sp, #0
20000c2e:	6078      	str	r0, [r7, #4]
20000c30:	2300      	movs	r3, #0
20000c32:	60fb      	str	r3, [r7, #12]
20000c34:	e020      	b.n	20000c78 <draw_object+0x50>
20000c36:	687b      	ldr	r3, [r7, #4]
20000c38:	681a      	ldr	r2, [r3, #0]
20000c3a:	68fb      	ldr	r3, [r7, #12]
20000c3c:	3304      	adds	r3, #4
20000c3e:	005b      	lsls	r3, r3, #1
20000c40:	18d3      	adds	r3, r2, r3
20000c42:	3304      	adds	r3, #4
20000c44:	781a      	ldrb	r2, [r3, #0]
20000c46:	687b      	ldr	r3, [r7, #4]
20000c48:	68db      	ldr	r3, [r3, #12]
20000c4a:	b2db      	uxtb	r3, r3
20000c4c:	18d3      	adds	r3, r2, r3
20000c4e:	b2d8      	uxtb	r0, r3
20000c50:	687b      	ldr	r3, [r7, #4]
20000c52:	681a      	ldr	r2, [r3, #0]
20000c54:	68fb      	ldr	r3, [r7, #12]
20000c56:	3304      	adds	r3, #4
20000c58:	005b      	lsls	r3, r3, #1
20000c5a:	18d3      	adds	r3, r2, r3
20000c5c:	3305      	adds	r3, #5
20000c5e:	781a      	ldrb	r2, [r3, #0]
20000c60:	687b      	ldr	r3, [r7, #4]
20000c62:	691b      	ldr	r3, [r3, #16]
20000c64:	b2db      	uxtb	r3, r3
20000c66:	18d3      	adds	r3, r2, r3
20000c68:	b2db      	uxtb	r3, r3
20000c6a:	2201      	movs	r2, #1
20000c6c:	0019      	movs	r1, r3
20000c6e:	f7ff ff08 	bl	20000a82 <pixel>
20000c72:	68fb      	ldr	r3, [r7, #12]
20000c74:	3301      	adds	r3, #1
20000c76:	60fb      	str	r3, [r7, #12]
20000c78:	687b      	ldr	r3, [r7, #4]
20000c7a:	681b      	ldr	r3, [r3, #0]
20000c7c:	681a      	ldr	r2, [r3, #0]
20000c7e:	68fb      	ldr	r3, [r7, #12]
20000c80:	429a      	cmp	r2, r3
20000c82:	dcd8      	bgt.n	20000c36 <draw_object+0xe>
20000c84:	46c0      	nop			; (mov r8, r8)
20000c86:	46bd      	mov	sp, r7
20000c88:	b004      	add	sp, #16
20000c8a:	bd80      	pop	{r7, pc}

20000c8c <clear_object>:
20000c8c:	b580      	push	{r7, lr}
20000c8e:	b084      	sub	sp, #16
20000c90:	af00      	add	r7, sp, #0
20000c92:	6078      	str	r0, [r7, #4]
20000c94:	2300      	movs	r3, #0
20000c96:	60fb      	str	r3, [r7, #12]
20000c98:	e020      	b.n	20000cdc <clear_object+0x50>
20000c9a:	687b      	ldr	r3, [r7, #4]
20000c9c:	681a      	ldr	r2, [r3, #0]
20000c9e:	68fb      	ldr	r3, [r7, #12]
20000ca0:	3304      	adds	r3, #4
20000ca2:	005b      	lsls	r3, r3, #1
20000ca4:	18d3      	adds	r3, r2, r3
20000ca6:	3304      	adds	r3, #4
20000ca8:	781a      	ldrb	r2, [r3, #0]
20000caa:	687b      	ldr	r3, [r7, #4]
20000cac:	68db      	ldr	r3, [r3, #12]
20000cae:	b2db      	uxtb	r3, r3
20000cb0:	18d3      	adds	r3, r2, r3
20000cb2:	b2d8      	uxtb	r0, r3
20000cb4:	687b      	ldr	r3, [r7, #4]
20000cb6:	681a      	ldr	r2, [r3, #0]
20000cb8:	68fb      	ldr	r3, [r7, #12]
20000cba:	3304      	adds	r3, #4
20000cbc:	005b      	lsls	r3, r3, #1
20000cbe:	18d3      	adds	r3, r2, r3
20000cc0:	3305      	adds	r3, #5
20000cc2:	781a      	ldrb	r2, [r3, #0]
20000cc4:	687b      	ldr	r3, [r7, #4]
20000cc6:	691b      	ldr	r3, [r3, #16]
20000cc8:	b2db      	uxtb	r3, r3
20000cca:	18d3      	adds	r3, r2, r3
20000ccc:	b2db      	uxtb	r3, r3
20000cce:	2200      	movs	r2, #0
20000cd0:	0019      	movs	r1, r3
20000cd2:	f7ff fed6 	bl	20000a82 <pixel>
20000cd6:	68fb      	ldr	r3, [r7, #12]
20000cd8:	3301      	adds	r3, #1
20000cda:	60fb      	str	r3, [r7, #12]
20000cdc:	687b      	ldr	r3, [r7, #4]
20000cde:	681b      	ldr	r3, [r3, #0]
20000ce0:	681a      	ldr	r2, [r3, #0]
20000ce2:	68fb      	ldr	r3, [r7, #12]
20000ce4:	429a      	cmp	r2, r3
20000ce6:	dcd8      	bgt.n	20000c9a <clear_object+0xe>
20000ce8:	46c0      	nop			; (mov r8, r8)
20000cea:	46bd      	mov	sp, r7
20000cec:	b004      	add	sp, #16
20000cee:	bd80      	pop	{r7, pc}

20000cf0 <move_object>:
20000cf0:	b580      	push	{r7, lr}
20000cf2:	b082      	sub	sp, #8
20000cf4:	af00      	add	r7, sp, #0
20000cf6:	6078      	str	r0, [r7, #4]
20000cf8:	687b      	ldr	r3, [r7, #4]
20000cfa:	0018      	movs	r0, r3
20000cfc:	f7ff ffc6 	bl	20000c8c <clear_object>
20000d00:	687b      	ldr	r3, [r7, #4]
20000d02:	68da      	ldr	r2, [r3, #12]
20000d04:	687b      	ldr	r3, [r7, #4]
20000d06:	685b      	ldr	r3, [r3, #4]
20000d08:	18d2      	adds	r2, r2, r3
20000d0a:	687b      	ldr	r3, [r7, #4]
20000d0c:	60da      	str	r2, [r3, #12]
20000d0e:	687b      	ldr	r3, [r7, #4]
20000d10:	691a      	ldr	r2, [r3, #16]
20000d12:	687b      	ldr	r3, [r7, #4]
20000d14:	689b      	ldr	r3, [r3, #8]
20000d16:	18d2      	adds	r2, r2, r3
20000d18:	687b      	ldr	r3, [r7, #4]
20000d1a:	611a      	str	r2, [r3, #16]
20000d1c:	687b      	ldr	r3, [r7, #4]
20000d1e:	68db      	ldr	r3, [r3, #12]
20000d20:	2b00      	cmp	r3, #0
20000d22:	dd07      	ble.n	20000d34 <move_object+0x44>
20000d24:	687b      	ldr	r3, [r7, #4]
20000d26:	68da      	ldr	r2, [r3, #12]
20000d28:	687b      	ldr	r3, [r7, #4]
20000d2a:	681b      	ldr	r3, [r3, #0]
20000d2c:	685b      	ldr	r3, [r3, #4]
20000d2e:	18d3      	adds	r3, r2, r3
20000d30:	2b80      	cmp	r3, #128	; 0x80
20000d32:	dd04      	ble.n	20000d3e <move_object+0x4e>
20000d34:	687b      	ldr	r3, [r7, #4]
20000d36:	685b      	ldr	r3, [r3, #4]
20000d38:	425a      	negs	r2, r3
20000d3a:	687b      	ldr	r3, [r7, #4]
20000d3c:	605a      	str	r2, [r3, #4]
20000d3e:	687b      	ldr	r3, [r7, #4]
20000d40:	691b      	ldr	r3, [r3, #16]
20000d42:	2b00      	cmp	r3, #0
20000d44:	dd07      	ble.n	20000d56 <move_object+0x66>
20000d46:	687b      	ldr	r3, [r7, #4]
20000d48:	691a      	ldr	r2, [r3, #16]
20000d4a:	687b      	ldr	r3, [r7, #4]
20000d4c:	681b      	ldr	r3, [r3, #0]
20000d4e:	689b      	ldr	r3, [r3, #8]
20000d50:	18d3      	adds	r3, r2, r3
20000d52:	2b40      	cmp	r3, #64	; 0x40
20000d54:	dd04      	ble.n	20000d60 <move_object+0x70>
20000d56:	687b      	ldr	r3, [r7, #4]
20000d58:	689b      	ldr	r3, [r3, #8]
20000d5a:	425a      	negs	r2, r3
20000d5c:	687b      	ldr	r3, [r7, #4]
20000d5e:	609a      	str	r2, [r3, #8]
20000d60:	687b      	ldr	r3, [r7, #4]
20000d62:	0018      	movs	r0, r3
20000d64:	f7ff ff60 	bl	20000c28 <draw_object>
20000d68:	46c0      	nop			; (mov r8, r8)
20000d6a:	46bd      	mov	sp, r7
20000d6c:	b002      	add	sp, #8
20000d6e:	bd80      	pop	{r7, pc}

20000d70 <set_object_speed>:
20000d70:	b580      	push	{r7, lr}
20000d72:	b084      	sub	sp, #16
20000d74:	af00      	add	r7, sp, #0
20000d76:	60f8      	str	r0, [r7, #12]
20000d78:	60b9      	str	r1, [r7, #8]
20000d7a:	607a      	str	r2, [r7, #4]
20000d7c:	68fb      	ldr	r3, [r7, #12]
20000d7e:	68ba      	ldr	r2, [r7, #8]
20000d80:	605a      	str	r2, [r3, #4]
20000d82:	68fb      	ldr	r3, [r7, #12]
20000d84:	687a      	ldr	r2, [r7, #4]
20000d86:	609a      	str	r2, [r3, #8]
20000d88:	46c0      	nop			; (mov r8, r8)
20000d8a:	46bd      	mov	sp, r7
20000d8c:	b004      	add	sp, #16
20000d8e:	bd80      	pop	{r7, pc}

20000d90 <graphicdisplay_init>:
20000d90:	b580      	push	{r7, lr}
20000d92:	af00      	add	r7, sp, #0
20000d94:	4b04      	ldr	r3, [pc, #16]	; (20000da8 <graphicdisplay_init+0x18>)
20000d96:	4a05      	ldr	r2, [pc, #20]	; (20000dac <graphicdisplay_init+0x1c>)
20000d98:	601a      	str	r2, [r3, #0]
20000d9a:	4b03      	ldr	r3, [pc, #12]	; (20000da8 <graphicdisplay_init+0x18>)
20000d9c:	4a03      	ldr	r2, [pc, #12]	; (20000dac <graphicdisplay_init+0x1c>)
20000d9e:	609a      	str	r2, [r3, #8]
20000da0:	46c0      	nop			; (mov r8, r8)
20000da2:	46bd      	mov	sp, r7
20000da4:	bd80      	pop	{r7, pc}
20000da6:	46c0      	nop			; (mov r8, r8)
20000da8:	40021000 	andmi	r1, r2, r0
20000dac:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

20000db0 <asciidisplay_init>:
20000db0:	b580      	push	{r7, lr}
20000db2:	af00      	add	r7, sp, #0
20000db4:	4b0c      	ldr	r3, [pc, #48]	; (20000de8 <asciidisplay_init+0x38>)
20000db6:	4a0d      	ldr	r2, [pc, #52]	; (20000dec <asciidisplay_init+0x3c>)
20000db8:	601a      	str	r2, [r3, #0]
20000dba:	2201      	movs	r2, #1
20000dbc:	2127      	movs	r1, #39	; 0x27
20000dbe:	2038      	movs	r0, #56	; 0x38
20000dc0:	f000 f912 	bl	20000fe8 <ascii_command>
20000dc4:	2201      	movs	r2, #1
20000dc6:	2127      	movs	r1, #39	; 0x27
20000dc8:	200e      	movs	r0, #14
20000dca:	f000 f90d 	bl	20000fe8 <ascii_command>
20000dce:	2200      	movs	r2, #0
20000dd0:	2102      	movs	r1, #2
20000dd2:	2001      	movs	r0, #1
20000dd4:	f000 f908 	bl	20000fe8 <ascii_command>
20000dd8:	2201      	movs	r2, #1
20000dda:	2127      	movs	r1, #39	; 0x27
20000ddc:	2006      	movs	r0, #6
20000dde:	f000 f903 	bl	20000fe8 <ascii_command>
20000de2:	46c0      	nop			; (mov r8, r8)
20000de4:	46bd      	mov	sp, r7
20000de6:	bd80      	pop	{r7, pc}
20000de8:	40021000 	andmi	r1, r2, r0
20000dec:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

20000df0 <ascii_ctrl_bit_set>:
20000df0:	b580      	push	{r7, lr}
20000df2:	b084      	sub	sp, #16
20000df4:	af00      	add	r7, sp, #0
20000df6:	0002      	movs	r2, r0
20000df8:	1dfb      	adds	r3, r7, #7
20000dfa:	701a      	strb	r2, [r3, #0]
20000dfc:	4a10      	ldr	r2, [pc, #64]	; (20000e40 <ascii_ctrl_bit_set+0x50>)
20000dfe:	4b10      	ldr	r3, [pc, #64]	; (20000e40 <ascii_ctrl_bit_set+0x50>)
20000e00:	7d1b      	ldrb	r3, [r3, #20]
20000e02:	b2db      	uxtb	r3, r3
20000e04:	2104      	movs	r1, #4
20000e06:	430b      	orrs	r3, r1
20000e08:	b2db      	uxtb	r3, r3
20000e0a:	7513      	strb	r3, [r2, #20]
20000e0c:	4a0c      	ldr	r2, [pc, #48]	; (20000e40 <ascii_ctrl_bit_set+0x50>)
20000e0e:	230f      	movs	r3, #15
20000e10:	18fb      	adds	r3, r7, r3
20000e12:	7d12      	ldrb	r2, [r2, #20]
20000e14:	701a      	strb	r2, [r3, #0]
20000e16:	230f      	movs	r3, #15
20000e18:	18fb      	adds	r3, r7, r3
20000e1a:	220f      	movs	r2, #15
20000e1c:	18b9      	adds	r1, r7, r2
20000e1e:	1dfa      	adds	r2, r7, #7
20000e20:	7809      	ldrb	r1, [r1, #0]
20000e22:	7812      	ldrb	r2, [r2, #0]
20000e24:	430a      	orrs	r2, r1
20000e26:	701a      	strb	r2, [r3, #0]
20000e28:	4a05      	ldr	r2, [pc, #20]	; (20000e40 <ascii_ctrl_bit_set+0x50>)
20000e2a:	230f      	movs	r3, #15
20000e2c:	18fb      	adds	r3, r7, r3
20000e2e:	781b      	ldrb	r3, [r3, #0]
20000e30:	2104      	movs	r1, #4
20000e32:	430b      	orrs	r3, r1
20000e34:	b2db      	uxtb	r3, r3
20000e36:	7513      	strb	r3, [r2, #20]
20000e38:	46c0      	nop			; (mov r8, r8)
20000e3a:	46bd      	mov	sp, r7
20000e3c:	b004      	add	sp, #16
20000e3e:	bd80      	pop	{r7, pc}
20000e40:	40021000 	andmi	r1, r2, r0

20000e44 <ascii_ctrl_bit_clear>:
20000e44:	b580      	push	{r7, lr}
20000e46:	b084      	sub	sp, #16
20000e48:	af00      	add	r7, sp, #0
20000e4a:	0002      	movs	r2, r0
20000e4c:	1dfb      	adds	r3, r7, #7
20000e4e:	701a      	strb	r2, [r3, #0]
20000e50:	4a13      	ldr	r2, [pc, #76]	; (20000ea0 <ascii_ctrl_bit_clear+0x5c>)
20000e52:	4b13      	ldr	r3, [pc, #76]	; (20000ea0 <ascii_ctrl_bit_clear+0x5c>)
20000e54:	7d1b      	ldrb	r3, [r3, #20]
20000e56:	b2db      	uxtb	r3, r3
20000e58:	2104      	movs	r1, #4
20000e5a:	430b      	orrs	r3, r1
20000e5c:	b2db      	uxtb	r3, r3
20000e5e:	7513      	strb	r3, [r2, #20]
20000e60:	4a0f      	ldr	r2, [pc, #60]	; (20000ea0 <ascii_ctrl_bit_clear+0x5c>)
20000e62:	230f      	movs	r3, #15
20000e64:	18fb      	adds	r3, r7, r3
20000e66:	7d12      	ldrb	r2, [r2, #20]
20000e68:	701a      	strb	r2, [r3, #0]
20000e6a:	1dfb      	adds	r3, r7, #7
20000e6c:	781b      	ldrb	r3, [r3, #0]
20000e6e:	b25b      	sxtb	r3, r3
20000e70:	43db      	mvns	r3, r3
20000e72:	b25b      	sxtb	r3, r3
20000e74:	220f      	movs	r2, #15
20000e76:	18ba      	adds	r2, r7, r2
20000e78:	7812      	ldrb	r2, [r2, #0]
20000e7a:	b252      	sxtb	r2, r2
20000e7c:	4013      	ands	r3, r2
20000e7e:	b25a      	sxtb	r2, r3
20000e80:	230f      	movs	r3, #15
20000e82:	18fb      	adds	r3, r7, r3
20000e84:	701a      	strb	r2, [r3, #0]
20000e86:	4a06      	ldr	r2, [pc, #24]	; (20000ea0 <ascii_ctrl_bit_clear+0x5c>)
20000e88:	230f      	movs	r3, #15
20000e8a:	18fb      	adds	r3, r7, r3
20000e8c:	781b      	ldrb	r3, [r3, #0]
20000e8e:	2104      	movs	r1, #4
20000e90:	430b      	orrs	r3, r1
20000e92:	b2db      	uxtb	r3, r3
20000e94:	7513      	strb	r3, [r2, #20]
20000e96:	46c0      	nop			; (mov r8, r8)
20000e98:	46bd      	mov	sp, r7
20000e9a:	b004      	add	sp, #16
20000e9c:	bd80      	pop	{r7, pc}
20000e9e:	46c0      	nop			; (mov r8, r8)
20000ea0:	40021000 	andmi	r1, r2, r0

20000ea4 <ascii_write_cmd>:
20000ea4:	b580      	push	{r7, lr}
20000ea6:	b082      	sub	sp, #8
20000ea8:	af00      	add	r7, sp, #0
20000eaa:	0002      	movs	r2, r0
20000eac:	1dfb      	adds	r3, r7, #7
20000eae:	701a      	strb	r2, [r3, #0]
20000eb0:	2001      	movs	r0, #1
20000eb2:	f7ff ffc7 	bl	20000e44 <ascii_ctrl_bit_clear>
20000eb6:	2002      	movs	r0, #2
20000eb8:	f7ff ffc4 	bl	20000e44 <ascii_ctrl_bit_clear>
20000ebc:	1dfb      	adds	r3, r7, #7
20000ebe:	781b      	ldrb	r3, [r3, #0]
20000ec0:	0018      	movs	r0, r3
20000ec2:	f000 f861 	bl	20000f88 <ascii_write_controller>
20000ec6:	46c0      	nop			; (mov r8, r8)
20000ec8:	46bd      	mov	sp, r7
20000eca:	b002      	add	sp, #8
20000ecc:	bd80      	pop	{r7, pc}

20000ece <ascii_write_data>:
20000ece:	b580      	push	{r7, lr}
20000ed0:	b082      	sub	sp, #8
20000ed2:	af00      	add	r7, sp, #0
20000ed4:	0002      	movs	r2, r0
20000ed6:	1dfb      	adds	r3, r7, #7
20000ed8:	701a      	strb	r2, [r3, #0]
20000eda:	2001      	movs	r0, #1
20000edc:	f7ff ff88 	bl	20000df0 <ascii_ctrl_bit_set>
20000ee0:	2002      	movs	r0, #2
20000ee2:	f7ff ffaf 	bl	20000e44 <ascii_ctrl_bit_clear>
20000ee6:	1dfb      	adds	r3, r7, #7
20000ee8:	781b      	ldrb	r3, [r3, #0]
20000eea:	0018      	movs	r0, r3
20000eec:	f000 f84c 	bl	20000f88 <ascii_write_controller>
20000ef0:	46c0      	nop			; (mov r8, r8)
20000ef2:	46bd      	mov	sp, r7
20000ef4:	b002      	add	sp, #8
20000ef6:	bd80      	pop	{r7, pc}

20000ef8 <ascii_read_data>:
20000ef8:	b590      	push	{r4, r7, lr}
20000efa:	b083      	sub	sp, #12
20000efc:	af00      	add	r7, sp, #0
20000efe:	4b0e      	ldr	r3, [pc, #56]	; (20000f38 <ascii_read_data+0x40>)
20000f00:	4a0d      	ldr	r2, [pc, #52]	; (20000f38 <ascii_read_data+0x40>)
20000f02:	6812      	ldr	r2, [r2, #0]
20000f04:	0412      	lsls	r2, r2, #16
20000f06:	0c12      	lsrs	r2, r2, #16
20000f08:	601a      	str	r2, [r3, #0]
20000f0a:	2002      	movs	r0, #2
20000f0c:	f7ff ff70 	bl	20000df0 <ascii_ctrl_bit_set>
20000f10:	2001      	movs	r0, #1
20000f12:	f7ff ff6d 	bl	20000df0 <ascii_ctrl_bit_set>
20000f16:	1dfc      	adds	r4, r7, #7
20000f18:	f000 f84e 	bl	20000fb8 <ascii_read_controller>
20000f1c:	0003      	movs	r3, r0
20000f1e:	7023      	strb	r3, [r4, #0]
20000f20:	4b05      	ldr	r3, [pc, #20]	; (20000f38 <ascii_read_data+0x40>)
20000f22:	4a05      	ldr	r2, [pc, #20]	; (20000f38 <ascii_read_data+0x40>)
20000f24:	6812      	ldr	r2, [r2, #0]
20000f26:	4905      	ldr	r1, [pc, #20]	; (20000f3c <ascii_read_data+0x44>)
20000f28:	430a      	orrs	r2, r1
20000f2a:	601a      	str	r2, [r3, #0]
20000f2c:	1dfb      	adds	r3, r7, #7
20000f2e:	781b      	ldrb	r3, [r3, #0]
20000f30:	0018      	movs	r0, r3
20000f32:	46bd      	mov	sp, r7
20000f34:	b003      	add	sp, #12
20000f36:	bd90      	pop	{r4, r7, pc}
20000f38:	40021000 	andmi	r1, r2, r0
20000f3c:	55550000 	ldrbpl	r0, [r5, #-0]

20000f40 <ascii_read_status>:
20000f40:	b590      	push	{r4, r7, lr}
20000f42:	b083      	sub	sp, #12
20000f44:	af00      	add	r7, sp, #0
20000f46:	4b0e      	ldr	r3, [pc, #56]	; (20000f80 <ascii_read_status+0x40>)
20000f48:	4a0d      	ldr	r2, [pc, #52]	; (20000f80 <ascii_read_status+0x40>)
20000f4a:	6812      	ldr	r2, [r2, #0]
20000f4c:	0412      	lsls	r2, r2, #16
20000f4e:	0c12      	lsrs	r2, r2, #16
20000f50:	601a      	str	r2, [r3, #0]
20000f52:	2001      	movs	r0, #1
20000f54:	f7ff ff76 	bl	20000e44 <ascii_ctrl_bit_clear>
20000f58:	2002      	movs	r0, #2
20000f5a:	f7ff ff49 	bl	20000df0 <ascii_ctrl_bit_set>
20000f5e:	1dfc      	adds	r4, r7, #7
20000f60:	f000 f82a 	bl	20000fb8 <ascii_read_controller>
20000f64:	0003      	movs	r3, r0
20000f66:	7023      	strb	r3, [r4, #0]
20000f68:	4b05      	ldr	r3, [pc, #20]	; (20000f80 <ascii_read_status+0x40>)
20000f6a:	4a05      	ldr	r2, [pc, #20]	; (20000f80 <ascii_read_status+0x40>)
20000f6c:	6812      	ldr	r2, [r2, #0]
20000f6e:	4905      	ldr	r1, [pc, #20]	; (20000f84 <ascii_read_status+0x44>)
20000f70:	430a      	orrs	r2, r1
20000f72:	601a      	str	r2, [r3, #0]
20000f74:	1dfb      	adds	r3, r7, #7
20000f76:	781b      	ldrb	r3, [r3, #0]
20000f78:	0018      	movs	r0, r3
20000f7a:	46bd      	mov	sp, r7
20000f7c:	b003      	add	sp, #12
20000f7e:	bd90      	pop	{r4, r7, pc}
20000f80:	40021000 	andmi	r1, r2, r0
20000f84:	55550000 	ldrbpl	r0, [r5, #-0]

20000f88 <ascii_write_controller>:
20000f88:	b580      	push	{r7, lr}
20000f8a:	b082      	sub	sp, #8
20000f8c:	af00      	add	r7, sp, #0
20000f8e:	0002      	movs	r2, r0
20000f90:	1dfb      	adds	r3, r7, #7
20000f92:	701a      	strb	r2, [r3, #0]
20000f94:	2040      	movs	r0, #64	; 0x40
20000f96:	f7ff ff2b 	bl	20000df0 <ascii_ctrl_bit_set>
20000f9a:	4a06      	ldr	r2, [pc, #24]	; (20000fb4 <ascii_write_controller+0x2c>)
20000f9c:	1dfb      	adds	r3, r7, #7
20000f9e:	781b      	ldrb	r3, [r3, #0]
20000fa0:	7553      	strb	r3, [r2, #21]
20000fa2:	f000 fad3 	bl	2000154c <delay_250ns>
20000fa6:	2040      	movs	r0, #64	; 0x40
20000fa8:	f7ff ff4c 	bl	20000e44 <ascii_ctrl_bit_clear>
20000fac:	46c0      	nop			; (mov r8, r8)
20000fae:	46bd      	mov	sp, r7
20000fb0:	b002      	add	sp, #8
20000fb2:	bd80      	pop	{r7, pc}
20000fb4:	40021000 	andmi	r1, r2, r0

20000fb8 <ascii_read_controller>:
20000fb8:	b580      	push	{r7, lr}
20000fba:	b082      	sub	sp, #8
20000fbc:	af00      	add	r7, sp, #0
20000fbe:	2040      	movs	r0, #64	; 0x40
20000fc0:	f7ff ff16 	bl	20000df0 <ascii_ctrl_bit_set>
20000fc4:	f000 faf4 	bl	200015b0 <delay_500ns>
20000fc8:	4a06      	ldr	r2, [pc, #24]	; (20000fe4 <ascii_read_controller+0x2c>)
20000fca:	1dfb      	adds	r3, r7, #7
20000fcc:	7c52      	ldrb	r2, [r2, #17]
20000fce:	701a      	strb	r2, [r3, #0]
20000fd0:	2040      	movs	r0, #64	; 0x40
20000fd2:	f7ff ff37 	bl	20000e44 <ascii_ctrl_bit_clear>
20000fd6:	1dfb      	adds	r3, r7, #7
20000fd8:	781b      	ldrb	r3, [r3, #0]
20000fda:	0018      	movs	r0, r3
20000fdc:	46bd      	mov	sp, r7
20000fde:	b002      	add	sp, #8
20000fe0:	bd80      	pop	{r7, pc}
20000fe2:	46c0      	nop			; (mov r8, r8)
20000fe4:	40021000 	andmi	r1, r2, r0

20000fe8 <ascii_command>:
20000fe8:	b580      	push	{r7, lr}
20000fea:	b082      	sub	sp, #8
20000fec:	af00      	add	r7, sp, #0
20000fee:	6039      	str	r1, [r7, #0]
20000ff0:	0011      	movs	r1, r2
20000ff2:	1dfb      	adds	r3, r7, #7
20000ff4:	1c02      	adds	r2, r0, #0
20000ff6:	701a      	strb	r2, [r3, #0]
20000ff8:	1d3b      	adds	r3, r7, #4
20000ffa:	1c0a      	adds	r2, r1, #0
20000ffc:	801a      	strh	r2, [r3, #0]
20000ffe:	46c0      	nop			; (mov r8, r8)
20001000:	f7ff ff9e 	bl	20000f40 <ascii_read_status>
20001004:	0003      	movs	r3, r0
20001006:	b25b      	sxtb	r3, r3
20001008:	2b00      	cmp	r3, #0
2000100a:	dbf9      	blt.n	20001000 <ascii_command+0x18>
2000100c:	2008      	movs	r0, #8
2000100e:	f000 fad8 	bl	200015c2 <delay_mikro>
20001012:	1dfb      	adds	r3, r7, #7
20001014:	781b      	ldrb	r3, [r3, #0]
20001016:	0018      	movs	r0, r3
20001018:	f7ff ff44 	bl	20000ea4 <ascii_write_cmd>
2000101c:	1d3b      	adds	r3, r7, #4
2000101e:	881b      	ldrh	r3, [r3, #0]
20001020:	2b01      	cmp	r3, #1
20001022:	d104      	bne.n	2000102e <ascii_command+0x46>
20001024:	683b      	ldr	r3, [r7, #0]
20001026:	0018      	movs	r0, r3
20001028:	f000 facb 	bl	200015c2 <delay_mikro>
2000102c:	e003      	b.n	20001036 <ascii_command+0x4e>
2000102e:	683b      	ldr	r3, [r7, #0]
20001030:	0018      	movs	r0, r3
20001032:	f000 fadb 	bl	200015ec <delay_milli>
20001036:	46c0      	nop			; (mov r8, r8)
20001038:	46bd      	mov	sp, r7
2000103a:	b002      	add	sp, #8
2000103c:	bd80      	pop	{r7, pc}

2000103e <ascii_write_char>:
2000103e:	b580      	push	{r7, lr}
20001040:	b082      	sub	sp, #8
20001042:	af00      	add	r7, sp, #0
20001044:	0002      	movs	r2, r0
20001046:	1dfb      	adds	r3, r7, #7
20001048:	701a      	strb	r2, [r3, #0]
2000104a:	2002      	movs	r0, #2
2000104c:	f7ff fed0 	bl	20000df0 <ascii_ctrl_bit_set>
20001050:	2001      	movs	r0, #1
20001052:	f7ff fef7 	bl	20000e44 <ascii_ctrl_bit_clear>
20001056:	46c0      	nop			; (mov r8, r8)
20001058:	f7ff ff72 	bl	20000f40 <ascii_read_status>
2000105c:	0003      	movs	r3, r0
2000105e:	b25b      	sxtb	r3, r3
20001060:	2b00      	cmp	r3, #0
20001062:	dbf9      	blt.n	20001058 <ascii_write_char+0x1a>
20001064:	2008      	movs	r0, #8
20001066:	f000 faac 	bl	200015c2 <delay_mikro>
2000106a:	1dfb      	adds	r3, r7, #7
2000106c:	781b      	ldrb	r3, [r3, #0]
2000106e:	0018      	movs	r0, r3
20001070:	f7ff ff2d 	bl	20000ece <ascii_write_data>
20001074:	202b      	movs	r0, #43	; 0x2b
20001076:	f000 faa4 	bl	200015c2 <delay_mikro>
2000107a:	46c0      	nop			; (mov r8, r8)
2000107c:	46bd      	mov	sp, r7
2000107e:	b002      	add	sp, #8
20001080:	bd80      	pop	{r7, pc}

20001082 <gotoxy>:
20001082:	b580      	push	{r7, lr}
20001084:	b084      	sub	sp, #16
20001086:	af00      	add	r7, sp, #0
20001088:	6078      	str	r0, [r7, #4]
2000108a:	6039      	str	r1, [r7, #0]
2000108c:	687b      	ldr	r3, [r7, #4]
2000108e:	2b00      	cmp	r3, #0
20001090:	d025      	beq.n	200010de <gotoxy+0x5c>
20001092:	687b      	ldr	r3, [r7, #4]
20001094:	2b14      	cmp	r3, #20
20001096:	d822      	bhi.n	200010de <gotoxy+0x5c>
20001098:	683b      	ldr	r3, [r7, #0]
2000109a:	2b00      	cmp	r3, #0
2000109c:	d021      	beq.n	200010e2 <gotoxy+0x60>
2000109e:	683b      	ldr	r3, [r7, #0]
200010a0:	2b02      	cmp	r3, #2
200010a2:	d81e      	bhi.n	200010e2 <gotoxy+0x60>
200010a4:	687b      	ldr	r3, [r7, #4]
200010a6:	b2da      	uxtb	r2, r3
200010a8:	230f      	movs	r3, #15
200010aa:	18fb      	adds	r3, r7, r3
200010ac:	3a01      	subs	r2, #1
200010ae:	701a      	strb	r2, [r3, #0]
200010b0:	683b      	ldr	r3, [r7, #0]
200010b2:	2b02      	cmp	r3, #2
200010b4:	d106      	bne.n	200010c4 <gotoxy+0x42>
200010b6:	230f      	movs	r3, #15
200010b8:	18fb      	adds	r3, r7, r3
200010ba:	220f      	movs	r2, #15
200010bc:	18ba      	adds	r2, r7, r2
200010be:	7812      	ldrb	r2, [r2, #0]
200010c0:	3240      	adds	r2, #64	; 0x40
200010c2:	701a      	strb	r2, [r3, #0]
200010c4:	230f      	movs	r3, #15
200010c6:	18fb      	adds	r3, r7, r3
200010c8:	781b      	ldrb	r3, [r3, #0]
200010ca:	2280      	movs	r2, #128	; 0x80
200010cc:	4252      	negs	r2, r2
200010ce:	4313      	orrs	r3, r2
200010d0:	b2db      	uxtb	r3, r3
200010d2:	2201      	movs	r2, #1
200010d4:	2127      	movs	r1, #39	; 0x27
200010d6:	0018      	movs	r0, r3
200010d8:	f7ff ff86 	bl	20000fe8 <ascii_command>
200010dc:	e002      	b.n	200010e4 <gotoxy+0x62>
200010de:	46c0      	nop			; (mov r8, r8)
200010e0:	e000      	b.n	200010e4 <gotoxy+0x62>
200010e2:	46c0      	nop			; (mov r8, r8)
200010e4:	46bd      	mov	sp, r7
200010e6:	b004      	add	sp, #16
200010e8:	bd80      	pop	{r7, pc}

200010ea <ascii_write_string>:
200010ea:	b580      	push	{r7, lr}
200010ec:	b082      	sub	sp, #8
200010ee:	af00      	add	r7, sp, #0
200010f0:	6078      	str	r0, [r7, #4]
200010f2:	e006      	b.n	20001102 <ascii_write_string+0x18>
200010f4:	687b      	ldr	r3, [r7, #4]
200010f6:	1c5a      	adds	r2, r3, #1
200010f8:	607a      	str	r2, [r7, #4]
200010fa:	781b      	ldrb	r3, [r3, #0]
200010fc:	0018      	movs	r0, r3
200010fe:	f7ff ff9e 	bl	2000103e <ascii_write_char>
20001102:	687b      	ldr	r3, [r7, #4]
20001104:	781b      	ldrb	r3, [r3, #0]
20001106:	2b00      	cmp	r3, #0
20001108:	d1f4      	bne.n	200010f4 <ascii_write_string+0xa>
2000110a:	46c0      	nop			; (mov r8, r8)
2000110c:	46bd      	mov	sp, r7
2000110e:	b002      	add	sp, #8
20001110:	bd80      	pop	{r7, pc}

20001112 <ascii_clear_screen>:
20001112:	b590      	push	{r4, r7, lr}
20001114:	b089      	sub	sp, #36	; 0x24
20001116:	af00      	add	r7, sp, #0
20001118:	003b      	movs	r3, r7
2000111a:	4a0f      	ldr	r2, [pc, #60]	; (20001158 <ascii_clear_screen+0x46>)
2000111c:	ca13      	ldmia	r2!, {r0, r1, r4}
2000111e:	c313      	stmia	r3!, {r0, r1, r4}
20001120:	ca13      	ldmia	r2!, {r0, r1, r4}
20001122:	c313      	stmia	r3!, {r0, r1, r4}
20001124:	6811      	ldr	r1, [r2, #0]
20001126:	6019      	str	r1, [r3, #0]
20001128:	8891      	ldrh	r1, [r2, #4]
2000112a:	8099      	strh	r1, [r3, #4]
2000112c:	7992      	ldrb	r2, [r2, #6]
2000112e:	719a      	strb	r2, [r3, #6]
20001130:	2101      	movs	r1, #1
20001132:	2001      	movs	r0, #1
20001134:	f7ff ffa5 	bl	20001082 <gotoxy>
20001138:	003b      	movs	r3, r7
2000113a:	0018      	movs	r0, r3
2000113c:	f7ff ffd5 	bl	200010ea <ascii_write_string>
20001140:	2102      	movs	r1, #2
20001142:	2001      	movs	r0, #1
20001144:	f7ff ff9d 	bl	20001082 <gotoxy>
20001148:	003b      	movs	r3, r7
2000114a:	0018      	movs	r0, r3
2000114c:	f7ff ffcd 	bl	200010ea <ascii_write_string>
20001150:	46c0      	nop			; (mov r8, r8)
20001152:	46bd      	mov	sp, r7
20001154:	b009      	add	sp, #36	; 0x24
20001156:	bd90      	pop	{r4, r7, pc}
20001158:	20001744 	andcs	r1, r0, r4, asr #14

2000115c <keyboard_init>:
2000115c:	b580      	push	{r7, lr}
2000115e:	af00      	add	r7, sp, #0
20001160:	4b15      	ldr	r3, [pc, #84]	; (200011b8 <keyboard_init+0x5c>)
20001162:	4a15      	ldr	r2, [pc, #84]	; (200011b8 <keyboard_init+0x5c>)
20001164:	6812      	ldr	r2, [r2, #0]
20001166:	0412      	lsls	r2, r2, #16
20001168:	0c12      	lsrs	r2, r2, #16
2000116a:	601a      	str	r2, [r3, #0]
2000116c:	4b12      	ldr	r3, [pc, #72]	; (200011b8 <keyboard_init+0x5c>)
2000116e:	4a12      	ldr	r2, [pc, #72]	; (200011b8 <keyboard_init+0x5c>)
20001170:	6812      	ldr	r2, [r2, #0]
20001172:	21aa      	movs	r1, #170	; 0xaa
20001174:	05c9      	lsls	r1, r1, #23
20001176:	430a      	orrs	r2, r1
20001178:	601a      	str	r2, [r3, #0]
2000117a:	4b0f      	ldr	r3, [pc, #60]	; (200011b8 <keyboard_init+0x5c>)
2000117c:	4a0e      	ldr	r2, [pc, #56]	; (200011b8 <keyboard_init+0x5c>)
2000117e:	6852      	ldr	r2, [r2, #4]
20001180:	21ff      	movs	r1, #255	; 0xff
20001182:	400a      	ands	r2, r1
20001184:	605a      	str	r2, [r3, #4]
20001186:	4b0c      	ldr	r3, [pc, #48]	; (200011b8 <keyboard_init+0x5c>)
20001188:	4a0b      	ldr	r2, [pc, #44]	; (200011b8 <keyboard_init+0x5c>)
2000118a:	6852      	ldr	r2, [r2, #4]
2000118c:	605a      	str	r2, [r3, #4]
2000118e:	4b0a      	ldr	r3, [pc, #40]	; (200011b8 <keyboard_init+0x5c>)
20001190:	4a09      	ldr	r2, [pc, #36]	; (200011b8 <keyboard_init+0x5c>)
20001192:	68d2      	ldr	r2, [r2, #12]
20001194:	0412      	lsls	r2, r2, #16
20001196:	0c12      	lsrs	r2, r2, #16
20001198:	60da      	str	r2, [r3, #12]
2000119a:	4b07      	ldr	r3, [pc, #28]	; (200011b8 <keyboard_init+0x5c>)
2000119c:	4a06      	ldr	r2, [pc, #24]	; (200011b8 <keyboard_init+0x5c>)
2000119e:	68d2      	ldr	r2, [r2, #12]
200011a0:	21aa      	movs	r1, #170	; 0xaa
200011a2:	0409      	lsls	r1, r1, #16
200011a4:	430a      	orrs	r2, r1
200011a6:	60da      	str	r2, [r3, #12]
200011a8:	4b03      	ldr	r3, [pc, #12]	; (200011b8 <keyboard_init+0x5c>)
200011aa:	4a03      	ldr	r2, [pc, #12]	; (200011b8 <keyboard_init+0x5c>)
200011ac:	7d52      	ldrb	r2, [r2, #21]
200011ae:	b2d2      	uxtb	r2, r2
200011b0:	755a      	strb	r2, [r3, #21]
200011b2:	46c0      	nop			; (mov r8, r8)
200011b4:	46bd      	mov	sp, r7
200011b6:	bd80      	pop	{r7, pc}
200011b8:	40020c00 	andmi	r0, r2, r0, lsl #24

200011bc <keyb>:
200011bc:	b580      	push	{r7, lr}
200011be:	b082      	sub	sp, #8
200011c0:	af00      	add	r7, sp, #0
200011c2:	1dfb      	adds	r3, r7, #7
200011c4:	2201      	movs	r2, #1
200011c6:	701a      	strb	r2, [r3, #0]
200011c8:	e020      	b.n	2000120c <keyb+0x50>
200011ca:	1dfb      	adds	r3, r7, #7
200011cc:	781b      	ldrb	r3, [r3, #0]
200011ce:	0018      	movs	r0, r3
200011d0:	f000 f82a 	bl	20001228 <ActivateRow>
200011d4:	f000 f854 	bl	20001280 <ReadColumn>
200011d8:	0002      	movs	r2, r0
200011da:	1dbb      	adds	r3, r7, #6
200011dc:	701a      	strb	r2, [r3, #0]
200011de:	1dbb      	adds	r3, r7, #6
200011e0:	781b      	ldrb	r3, [r3, #0]
200011e2:	2b00      	cmp	r3, #0
200011e4:	d00d      	beq.n	20001202 <keyb+0x46>
200011e6:	2000      	movs	r0, #0
200011e8:	f000 f81e 	bl	20001228 <ActivateRow>
200011ec:	1dfb      	adds	r3, r7, #7
200011ee:	781b      	ldrb	r3, [r3, #0]
200011f0:	1e5a      	subs	r2, r3, #1
200011f2:	1dbb      	adds	r3, r7, #6
200011f4:	781b      	ldrb	r3, [r3, #0]
200011f6:	3b01      	subs	r3, #1
200011f8:	490a      	ldr	r1, [pc, #40]	; (20001224 <keyb+0x68>)
200011fa:	0092      	lsls	r2, r2, #2
200011fc:	188a      	adds	r2, r1, r2
200011fe:	5cd3      	ldrb	r3, [r2, r3]
20001200:	e00c      	b.n	2000121c <keyb+0x60>
20001202:	1dfb      	adds	r3, r7, #7
20001204:	781a      	ldrb	r2, [r3, #0]
20001206:	1dfb      	adds	r3, r7, #7
20001208:	3201      	adds	r2, #1
2000120a:	701a      	strb	r2, [r3, #0]
2000120c:	1dfb      	adds	r3, r7, #7
2000120e:	781b      	ldrb	r3, [r3, #0]
20001210:	2b04      	cmp	r3, #4
20001212:	d9da      	bls.n	200011ca <keyb+0xe>
20001214:	2000      	movs	r0, #0
20001216:	f000 f807 	bl	20001228 <ActivateRow>
2000121a:	23ff      	movs	r3, #255	; 0xff
2000121c:	0018      	movs	r0, r3
2000121e:	46bd      	mov	sp, r7
20001220:	b002      	add	sp, #8
20001222:	bd80      	pop	{r7, pc}
20001224:	200016d4 	ldrdcs	r1, [r0], -r4

20001228 <ActivateRow>:
20001228:	b580      	push	{r7, lr}
2000122a:	b082      	sub	sp, #8
2000122c:	af00      	add	r7, sp, #0
2000122e:	0002      	movs	r2, r0
20001230:	1dfb      	adds	r3, r7, #7
20001232:	701a      	strb	r2, [r3, #0]
20001234:	1dfb      	adds	r3, r7, #7
20001236:	781b      	ldrb	r3, [r3, #0]
20001238:	2b04      	cmp	r3, #4
2000123a:	d818      	bhi.n	2000126e <ActivateRow+0x46>
2000123c:	009a      	lsls	r2, r3, #2
2000123e:	4b0e      	ldr	r3, [pc, #56]	; (20001278 <ActivateRow+0x50>)
20001240:	18d3      	adds	r3, r2, r3
20001242:	681b      	ldr	r3, [r3, #0]
20001244:	469f      	mov	pc, r3
20001246:	4b0d      	ldr	r3, [pc, #52]	; (2000127c <ActivateRow+0x54>)
20001248:	2200      	movs	r2, #0
2000124a:	755a      	strb	r2, [r3, #21]
2000124c:	e00f      	b.n	2000126e <ActivateRow+0x46>
2000124e:	4b0b      	ldr	r3, [pc, #44]	; (2000127c <ActivateRow+0x54>)
20001250:	2210      	movs	r2, #16
20001252:	755a      	strb	r2, [r3, #21]
20001254:	e00b      	b.n	2000126e <ActivateRow+0x46>
20001256:	4b09      	ldr	r3, [pc, #36]	; (2000127c <ActivateRow+0x54>)
20001258:	2220      	movs	r2, #32
2000125a:	755a      	strb	r2, [r3, #21]
2000125c:	e007      	b.n	2000126e <ActivateRow+0x46>
2000125e:	4b07      	ldr	r3, [pc, #28]	; (2000127c <ActivateRow+0x54>)
20001260:	2240      	movs	r2, #64	; 0x40
20001262:	755a      	strb	r2, [r3, #21]
20001264:	e003      	b.n	2000126e <ActivateRow+0x46>
20001266:	4b05      	ldr	r3, [pc, #20]	; (2000127c <ActivateRow+0x54>)
20001268:	2280      	movs	r2, #128	; 0x80
2000126a:	755a      	strb	r2, [r3, #21]
2000126c:	46c0      	nop			; (mov r8, r8)
2000126e:	46c0      	nop			; (mov r8, r8)
20001270:	46bd      	mov	sp, r7
20001272:	b002      	add	sp, #8
20001274:	bd80      	pop	{r7, pc}
20001276:	46c0      	nop			; (mov r8, r8)
20001278:	20001764 	andcs	r1, r0, r4, ror #14
2000127c:	40020c00 	andmi	r0, r2, r0, lsl #24

20001280 <ReadColumn>:
20001280:	b580      	push	{r7, lr}
20001282:	b082      	sub	sp, #8
20001284:	af00      	add	r7, sp, #0
20001286:	4a12      	ldr	r2, [pc, #72]	; (200012d0 <ReadColumn+0x50>)
20001288:	1dfb      	adds	r3, r7, #7
2000128a:	7c52      	ldrb	r2, [r2, #17]
2000128c:	701a      	strb	r2, [r3, #0]
2000128e:	1dfb      	adds	r3, r7, #7
20001290:	781b      	ldrb	r3, [r3, #0]
20001292:	2208      	movs	r2, #8
20001294:	4013      	ands	r3, r2
20001296:	d001      	beq.n	2000129c <ReadColumn+0x1c>
20001298:	2304      	movs	r3, #4
2000129a:	e015      	b.n	200012c8 <ReadColumn+0x48>
2000129c:	1dfb      	adds	r3, r7, #7
2000129e:	781b      	ldrb	r3, [r3, #0]
200012a0:	2204      	movs	r2, #4
200012a2:	4013      	ands	r3, r2
200012a4:	d001      	beq.n	200012aa <ReadColumn+0x2a>
200012a6:	2303      	movs	r3, #3
200012a8:	e00e      	b.n	200012c8 <ReadColumn+0x48>
200012aa:	1dfb      	adds	r3, r7, #7
200012ac:	781b      	ldrb	r3, [r3, #0]
200012ae:	2202      	movs	r2, #2
200012b0:	4013      	ands	r3, r2
200012b2:	d001      	beq.n	200012b8 <ReadColumn+0x38>
200012b4:	2302      	movs	r3, #2
200012b6:	e007      	b.n	200012c8 <ReadColumn+0x48>
200012b8:	1dfb      	adds	r3, r7, #7
200012ba:	781b      	ldrb	r3, [r3, #0]
200012bc:	2201      	movs	r2, #1
200012be:	4013      	ands	r3, r2
200012c0:	d001      	beq.n	200012c6 <ReadColumn+0x46>
200012c2:	2301      	movs	r3, #1
200012c4:	e000      	b.n	200012c8 <ReadColumn+0x48>
200012c6:	2300      	movs	r3, #0
200012c8:	0018      	movs	r0, r3
200012ca:	46bd      	mov	sp, r7
200012cc:	b002      	add	sp, #8
200012ce:	bd80      	pop	{r7, pc}
200012d0:	40020c00 	andmi	r0, r2, r0, lsl #24

200012d4 <load_sprite>:
#include "sprites.h"

void load_sprite(SPRITE* s, unsigned char* data, int width, int height){
200012d4:	b580      	push	{r7, lr}
200012d6:	b084      	sub	sp, #16
200012d8:	af00      	add	r7, sp, #0
200012da:	60f8      	str	r0, [r7, #12]
200012dc:	60b9      	str	r1, [r7, #8]
200012de:	607a      	str	r2, [r7, #4]
200012e0:	603b      	str	r3, [r7, #0]
    s->width = width;
200012e2:	687b      	ldr	r3, [r7, #4]
200012e4:	b2da      	uxtb	r2, r3
200012e6:	68fb      	ldr	r3, [r7, #12]
200012e8:	701a      	strb	r2, [r3, #0]
    s->height = height;
200012ea:	683b      	ldr	r3, [r7, #0]
200012ec:	b2da      	uxtb	r2, r3
200012ee:	68fb      	ldr	r3, [r7, #12]
200012f0:	705a      	strb	r2, [r3, #1]
    s->data = data;
200012f2:	68fb      	ldr	r3, [r7, #12]
200012f4:	68ba      	ldr	r2, [r7, #8]
200012f6:	605a      	str	r2, [r3, #4]
}
200012f8:	46c0      	nop			; (mov r8, r8)
200012fa:	46bd      	mov	sp, r7
200012fc:	b004      	add	sp, #16
200012fe:	bd80      	pop	{r7, pc}

20001300 <draw_sprite>:

void draw_sprite(SPRITE* s, int x, int y, int set){
20001300:	b580      	push	{r7, lr}
20001302:	b08a      	sub	sp, #40	; 0x28
20001304:	af00      	add	r7, sp, #0
20001306:	60f8      	str	r0, [r7, #12]
20001308:	60b9      	str	r1, [r7, #8]
2000130a:	607a      	str	r2, [r7, #4]
2000130c:	603b      	str	r3, [r7, #0]
    int width_in_bytes;
    
    if(s->width % 8 == 0){
2000130e:	68fb      	ldr	r3, [r7, #12]
20001310:	781b      	ldrb	r3, [r3, #0]
20001312:	2207      	movs	r2, #7
20001314:	4013      	ands	r3, r2
20001316:	b2db      	uxtb	r3, r3
20001318:	2b00      	cmp	r3, #0
2000131a:	d105      	bne.n	20001328 <draw_sprite+0x28>
        width_in_bytes = s->width / 8;
2000131c:	68fb      	ldr	r3, [r7, #12]
2000131e:	781b      	ldrb	r3, [r3, #0]
20001320:	08db      	lsrs	r3, r3, #3
20001322:	b2db      	uxtb	r3, r3
20001324:	627b      	str	r3, [r7, #36]	; 0x24
20001326:	e005      	b.n	20001334 <draw_sprite+0x34>
    } else {
        width_in_bytes = s->width / 8 + 1;
20001328:	68fb      	ldr	r3, [r7, #12]
2000132a:	781b      	ldrb	r3, [r3, #0]
2000132c:	08db      	lsrs	r3, r3, #3
2000132e:	b2db      	uxtb	r3, r3
20001330:	3301      	adds	r3, #1
20001332:	627b      	str	r3, [r7, #36]	; 0x24
    }
    
    for(int i = 0; i < s->height; i++){
20001334:	2300      	movs	r3, #0
20001336:	623b      	str	r3, [r7, #32]
20001338:	e045      	b.n	200013c6 <draw_sprite+0xc6>
        for(int j = 0; j < width_in_bytes; j++){
2000133a:	2300      	movs	r3, #0
2000133c:	61fb      	str	r3, [r7, #28]
2000133e:	e03b      	b.n	200013b8 <draw_sprite+0xb8>
            unsigned char byte = s->data[i * width_in_bytes + j];
20001340:	68fb      	ldr	r3, [r7, #12]
20001342:	685b      	ldr	r3, [r3, #4]
20001344:	6a3a      	ldr	r2, [r7, #32]
20001346:	6a79      	ldr	r1, [r7, #36]	; 0x24
20001348:	4351      	muls	r1, r2
2000134a:	69fa      	ldr	r2, [r7, #28]
2000134c:	188a      	adds	r2, r1, r2
2000134e:	189a      	adds	r2, r3, r2
20001350:	2317      	movs	r3, #23
20001352:	18fb      	adds	r3, r7, r3
20001354:	7812      	ldrb	r2, [r2, #0]
20001356:	701a      	strb	r2, [r3, #0]
            for(int k = 0; k < 8; k++){
20001358:	2300      	movs	r3, #0
2000135a:	61bb      	str	r3, [r7, #24]
2000135c:	e026      	b.n	200013ac <draw_sprite+0xac>
                if(byte & (1 << k)){
2000135e:	2317      	movs	r3, #23
20001360:	18fb      	adds	r3, r7, r3
20001362:	781a      	ldrb	r2, [r3, #0]
20001364:	69bb      	ldr	r3, [r7, #24]
20001366:	411a      	asrs	r2, r3
20001368:	0013      	movs	r3, r2
2000136a:	2201      	movs	r2, #1
2000136c:	4013      	ands	r3, r2
2000136e:	d01a      	beq.n	200013a6 <draw_sprite+0xa6>
                    pixel(8 * j + k + x + 1, i + y + 1, set);
20001370:	69fb      	ldr	r3, [r7, #28]
20001372:	b2db      	uxtb	r3, r3
20001374:	00db      	lsls	r3, r3, #3
20001376:	b2da      	uxtb	r2, r3
20001378:	69bb      	ldr	r3, [r7, #24]
2000137a:	b2db      	uxtb	r3, r3
2000137c:	18d3      	adds	r3, r2, r3
2000137e:	b2da      	uxtb	r2, r3
20001380:	68bb      	ldr	r3, [r7, #8]
20001382:	b2db      	uxtb	r3, r3
20001384:	18d3      	adds	r3, r2, r3
20001386:	b2db      	uxtb	r3, r3
20001388:	3301      	adds	r3, #1
2000138a:	b2d8      	uxtb	r0, r3
2000138c:	6a3b      	ldr	r3, [r7, #32]
2000138e:	b2da      	uxtb	r2, r3
20001390:	687b      	ldr	r3, [r7, #4]
20001392:	b2db      	uxtb	r3, r3
20001394:	18d3      	adds	r3, r2, r3
20001396:	b2db      	uxtb	r3, r3
20001398:	3301      	adds	r3, #1
2000139a:	b2db      	uxtb	r3, r3
2000139c:	683a      	ldr	r2, [r7, #0]
2000139e:	b2d2      	uxtb	r2, r2
200013a0:	0019      	movs	r1, r3
200013a2:	f7ff fb6e 	bl	20000a82 <pixel>
            for(int k = 0; k < 8; k++){
200013a6:	69bb      	ldr	r3, [r7, #24]
200013a8:	3301      	adds	r3, #1
200013aa:	61bb      	str	r3, [r7, #24]
200013ac:	69bb      	ldr	r3, [r7, #24]
200013ae:	2b07      	cmp	r3, #7
200013b0:	ddd5      	ble.n	2000135e <draw_sprite+0x5e>
        for(int j = 0; j < width_in_bytes; j++){
200013b2:	69fb      	ldr	r3, [r7, #28]
200013b4:	3301      	adds	r3, #1
200013b6:	61fb      	str	r3, [r7, #28]
200013b8:	69fa      	ldr	r2, [r7, #28]
200013ba:	6a7b      	ldr	r3, [r7, #36]	; 0x24
200013bc:	429a      	cmp	r2, r3
200013be:	dbbf      	blt.n	20001340 <draw_sprite+0x40>
    for(int i = 0; i < s->height; i++){
200013c0:	6a3b      	ldr	r3, [r7, #32]
200013c2:	3301      	adds	r3, #1
200013c4:	623b      	str	r3, [r7, #32]
200013c6:	68fb      	ldr	r3, [r7, #12]
200013c8:	785b      	ldrb	r3, [r3, #1]
200013ca:	001a      	movs	r2, r3
200013cc:	6a3b      	ldr	r3, [r7, #32]
200013ce:	429a      	cmp	r2, r3
200013d0:	dcb3      	bgt.n	2000133a <draw_sprite+0x3a>
                }
            }
        }
    }
}
200013d2:	46c0      	nop			; (mov r8, r8)
200013d4:	46bd      	mov	sp, r7
200013d6:	b00a      	add	sp, #40	; 0x28
200013d8:	bd80      	pop	{r7, pc}

200013da <draw_sprite_object>:

void draw_sprite_object(PSPRITE_OBJECT p){
200013da:	b580      	push	{r7, lr}
200013dc:	b082      	sub	sp, #8
200013de:	af00      	add	r7, sp, #0
200013e0:	6078      	str	r0, [r7, #4]
    draw_sprite(p->sprt, p->pos_x, p->pos_y, 1);
200013e2:	687b      	ldr	r3, [r7, #4]
200013e4:	6818      	ldr	r0, [r3, #0]
200013e6:	687b      	ldr	r3, [r7, #4]
200013e8:	68d9      	ldr	r1, [r3, #12]
200013ea:	687b      	ldr	r3, [r7, #4]
200013ec:	691a      	ldr	r2, [r3, #16]
200013ee:	2301      	movs	r3, #1
200013f0:	f7ff ff86 	bl	20001300 <draw_sprite>
}
200013f4:	46c0      	nop			; (mov r8, r8)
200013f6:	46bd      	mov	sp, r7
200013f8:	b002      	add	sp, #8
200013fa:	bd80      	pop	{r7, pc}

200013fc <clear_sprite_object>:

void clear_sprite_object(PSPRITE_OBJECT p){
200013fc:	b580      	push	{r7, lr}
200013fe:	b082      	sub	sp, #8
20001400:	af00      	add	r7, sp, #0
20001402:	6078      	str	r0, [r7, #4]
    draw_sprite(p->sprt, p->pos_x, p->pos_y, 0);
20001404:	687b      	ldr	r3, [r7, #4]
20001406:	6818      	ldr	r0, [r3, #0]
20001408:	687b      	ldr	r3, [r7, #4]
2000140a:	68d9      	ldr	r1, [r3, #12]
2000140c:	687b      	ldr	r3, [r7, #4]
2000140e:	691a      	ldr	r2, [r3, #16]
20001410:	2300      	movs	r3, #0
20001412:	f7ff ff75 	bl	20001300 <draw_sprite>
}
20001416:	46c0      	nop			; (mov r8, r8)
20001418:	46bd      	mov	sp, r7
2000141a:	b002      	add	sp, #8
2000141c:	bd80      	pop	{r7, pc}

2000141e <move_sprite_object>:

void move_sprite_object(PSPRITE_OBJECT p){
2000141e:	b580      	push	{r7, lr}
20001420:	b082      	sub	sp, #8
20001422:	af00      	add	r7, sp, #0
20001424:	6078      	str	r0, [r7, #4]
    p->clear(p);
20001426:	687b      	ldr	r3, [r7, #4]
20001428:	699b      	ldr	r3, [r3, #24]
2000142a:	687a      	ldr	r2, [r7, #4]
2000142c:	0010      	movs	r0, r2
2000142e:	4798      	blx	r3
    p->pos_x += p->dir_x;
20001430:	687b      	ldr	r3, [r7, #4]
20001432:	68da      	ldr	r2, [r3, #12]
20001434:	687b      	ldr	r3, [r7, #4]
20001436:	685b      	ldr	r3, [r3, #4]
20001438:	18d2      	adds	r2, r2, r3
2000143a:	687b      	ldr	r3, [r7, #4]
2000143c:	60da      	str	r2, [r3, #12]
    p->pos_y += p->dir_y;
2000143e:	687b      	ldr	r3, [r7, #4]
20001440:	691a      	ldr	r2, [r3, #16]
20001442:	687b      	ldr	r3, [r7, #4]
20001444:	689b      	ldr	r3, [r3, #8]
20001446:	18d2      	adds	r2, r2, r3
20001448:	687b      	ldr	r3, [r7, #4]
2000144a:	611a      	str	r2, [r3, #16]
    
    if(p->pos_x < 0){
2000144c:	687b      	ldr	r3, [r7, #4]
2000144e:	68db      	ldr	r3, [r3, #12]
20001450:	2b00      	cmp	r3, #0
20001452:	da07      	bge.n	20001464 <move_sprite_object+0x46>
        p->pos_x = 0;
20001454:	687b      	ldr	r3, [r7, #4]
20001456:	2200      	movs	r2, #0
20001458:	60da      	str	r2, [r3, #12]
        p->dir_x = -p->dir_x;
2000145a:	687b      	ldr	r3, [r7, #4]
2000145c:	685b      	ldr	r3, [r3, #4]
2000145e:	425a      	negs	r2, r3
20001460:	687b      	ldr	r3, [r7, #4]
20001462:	605a      	str	r2, [r3, #4]
    }
    if(p->pos_x + p->sprt->width > 127){
20001464:	687b      	ldr	r3, [r7, #4]
20001466:	68da      	ldr	r2, [r3, #12]
20001468:	687b      	ldr	r3, [r7, #4]
2000146a:	681b      	ldr	r3, [r3, #0]
2000146c:	781b      	ldrb	r3, [r3, #0]
2000146e:	18d3      	adds	r3, r2, r3
20001470:	2b7f      	cmp	r3, #127	; 0x7f
20001472:	dd0c      	ble.n	2000148e <move_sprite_object+0x70>
        p->pos_x = 127 - p->sprt->width;
20001474:	687b      	ldr	r3, [r7, #4]
20001476:	681b      	ldr	r3, [r3, #0]
20001478:	781b      	ldrb	r3, [r3, #0]
2000147a:	001a      	movs	r2, r3
2000147c:	237f      	movs	r3, #127	; 0x7f
2000147e:	1a9a      	subs	r2, r3, r2
20001480:	687b      	ldr	r3, [r7, #4]
20001482:	60da      	str	r2, [r3, #12]
        p->dir_x = -p->dir_x;
20001484:	687b      	ldr	r3, [r7, #4]
20001486:	685b      	ldr	r3, [r3, #4]
20001488:	425a      	negs	r2, r3
2000148a:	687b      	ldr	r3, [r7, #4]
2000148c:	605a      	str	r2, [r3, #4]
    }
    
    if(p->pos_y < 0){
2000148e:	687b      	ldr	r3, [r7, #4]
20001490:	691b      	ldr	r3, [r3, #16]
20001492:	2b00      	cmp	r3, #0
20001494:	da07      	bge.n	200014a6 <move_sprite_object+0x88>
        p->pos_y = 0;
20001496:	687b      	ldr	r3, [r7, #4]
20001498:	2200      	movs	r2, #0
2000149a:	611a      	str	r2, [r3, #16]
        p->dir_y = -p->dir_y;
2000149c:	687b      	ldr	r3, [r7, #4]
2000149e:	689b      	ldr	r3, [r3, #8]
200014a0:	425a      	negs	r2, r3
200014a2:	687b      	ldr	r3, [r7, #4]
200014a4:	609a      	str	r2, [r3, #8]
    }
    if(p->pos_y + p->sprt->height > 63){
200014a6:	687b      	ldr	r3, [r7, #4]
200014a8:	691a      	ldr	r2, [r3, #16]
200014aa:	687b      	ldr	r3, [r7, #4]
200014ac:	681b      	ldr	r3, [r3, #0]
200014ae:	785b      	ldrb	r3, [r3, #1]
200014b0:	18d3      	adds	r3, r2, r3
200014b2:	2b3f      	cmp	r3, #63	; 0x3f
200014b4:	dd0c      	ble.n	200014d0 <move_sprite_object+0xb2>
        p->pos_y = 63 -p->sprt->height;
200014b6:	687b      	ldr	r3, [r7, #4]
200014b8:	681b      	ldr	r3, [r3, #0]
200014ba:	785b      	ldrb	r3, [r3, #1]
200014bc:	001a      	movs	r2, r3
200014be:	233f      	movs	r3, #63	; 0x3f
200014c0:	1a9a      	subs	r2, r3, r2
200014c2:	687b      	ldr	r3, [r7, #4]
200014c4:	611a      	str	r2, [r3, #16]
        p->dir_y = -p->dir_y;
200014c6:	687b      	ldr	r3, [r7, #4]
200014c8:	689b      	ldr	r3, [r3, #8]
200014ca:	425a      	negs	r2, r3
200014cc:	687b      	ldr	r3, [r7, #4]
200014ce:	609a      	str	r2, [r3, #8]
    }
}
200014d0:	46c0      	nop			; (mov r8, r8)
200014d2:	46bd      	mov	sp, r7
200014d4:	b002      	add	sp, #8
200014d6:	bd80      	pop	{r7, pc}

200014d8 <set_sprite_object_speed>:

void set_sprite_object_speed(PSPRITE_OBJECT p, int x, int y){
200014d8:	b580      	push	{r7, lr}
200014da:	b084      	sub	sp, #16
200014dc:	af00      	add	r7, sp, #0
200014de:	60f8      	str	r0, [r7, #12]
200014e0:	60b9      	str	r1, [r7, #8]
200014e2:	607a      	str	r2, [r7, #4]
    p->dir_x = x;
200014e4:	68fb      	ldr	r3, [r7, #12]
200014e6:	68ba      	ldr	r2, [r7, #8]
200014e8:	605a      	str	r2, [r3, #4]
    p->dir_y = y;
200014ea:	68fb      	ldr	r3, [r7, #12]
200014ec:	687a      	ldr	r2, [r7, #4]
200014ee:	609a      	str	r2, [r3, #8]
}
200014f0:	46c0      	nop			; (mov r8, r8)
200014f2:	46bd      	mov	sp, r7
200014f4:	b004      	add	sp, #16
200014f6:	bd80      	pop	{r7, pc}

200014f8 <dummy_function1>:

void dummy_function1(PSPRITE_OBJECT p){
200014f8:	b580      	push	{r7, lr}
200014fa:	b082      	sub	sp, #8
200014fc:	af00      	add	r7, sp, #0
200014fe:	6078      	str	r0, [r7, #4]
    return;
20001500:	46c0      	nop			; (mov r8, r8)
}
20001502:	46bd      	mov	sp, r7
20001504:	b002      	add	sp, #8
20001506:	bd80      	pop	{r7, pc}

20001508 <dummy_function2>:

void dummy_function2(PSPRITE_OBJECT p, int x, int y){
20001508:	b580      	push	{r7, lr}
2000150a:	b084      	sub	sp, #16
2000150c:	af00      	add	r7, sp, #0
2000150e:	60f8      	str	r0, [r7, #12]
20001510:	60b9      	str	r1, [r7, #8]
20001512:	607a      	str	r2, [r7, #4]
    return;
20001514:	46c0      	nop			; (mov r8, r8)
}
20001516:	46bd      	mov	sp, r7
20001518:	b004      	add	sp, #16
2000151a:	bd80      	pop	{r7, pc}

2000151c <update_sprite_object>:

void update_sprite_object(PSPRITE_OBJECT obj){
2000151c:	b580      	push	{r7, lr}
2000151e:	b082      	sub	sp, #8
20001520:	af00      	add	r7, sp, #0
20001522:	6078      	str	r0, [r7, #4]
    obj->clear(obj);
20001524:	687b      	ldr	r3, [r7, #4]
20001526:	699b      	ldr	r3, [r3, #24]
20001528:	687a      	ldr	r2, [r7, #4]
2000152a:	0010      	movs	r0, r2
2000152c:	4798      	blx	r3
    obj->move(obj);
2000152e:	687b      	ldr	r3, [r7, #4]
20001530:	69db      	ldr	r3, [r3, #28]
20001532:	687a      	ldr	r2, [r7, #4]
20001534:	0010      	movs	r0, r2
20001536:	4798      	blx	r3
    obj->draw(obj);
20001538:	687b      	ldr	r3, [r7, #4]
2000153a:	695b      	ldr	r3, [r3, #20]
2000153c:	687a      	ldr	r2, [r7, #4]
2000153e:	0010      	movs	r0, r2
20001540:	4798      	blx	r3
}
20001542:	46c0      	nop			; (mov r8, r8)
20001544:	46bd      	mov	sp, r7
20001546:	b002      	add	sp, #8
20001548:	bd80      	pop	{r7, pc}
	...

2000154c <delay_250ns>:
2000154c:	b580      	push	{r7, lr}
2000154e:	af00      	add	r7, sp, #0
20001550:	4b13      	ldr	r3, [pc, #76]	; (200015a0 <delay_250ns+0x54>)
20001552:	4a13      	ldr	r2, [pc, #76]	; (200015a0 <delay_250ns+0x54>)
20001554:	6812      	ldr	r2, [r2, #0]
20001556:	4913      	ldr	r1, [pc, #76]	; (200015a4 <delay_250ns+0x58>)
20001558:	400a      	ands	r2, r1
2000155a:	601a      	str	r2, [r3, #0]
2000155c:	4b12      	ldr	r3, [pc, #72]	; (200015a8 <delay_250ns+0x5c>)
2000155e:	4a12      	ldr	r2, [pc, #72]	; (200015a8 <delay_250ns+0x5c>)
20001560:	6812      	ldr	r2, [r2, #0]
20001562:	0e12      	lsrs	r2, r2, #24
20001564:	0612      	lsls	r2, r2, #24
20001566:	601a      	str	r2, [r3, #0]
20001568:	4b0f      	ldr	r3, [pc, #60]	; (200015a8 <delay_250ns+0x5c>)
2000156a:	4a0f      	ldr	r2, [pc, #60]	; (200015a8 <delay_250ns+0x5c>)
2000156c:	6812      	ldr	r2, [r2, #0]
2000156e:	2129      	movs	r1, #41	; 0x29
20001570:	430a      	orrs	r2, r1
20001572:	601a      	str	r2, [r3, #0]
20001574:	4b0d      	ldr	r3, [pc, #52]	; (200015ac <delay_250ns+0x60>)
20001576:	2200      	movs	r2, #0
20001578:	601a      	str	r2, [r3, #0]
2000157a:	4b09      	ldr	r3, [pc, #36]	; (200015a0 <delay_250ns+0x54>)
2000157c:	4a08      	ldr	r2, [pc, #32]	; (200015a0 <delay_250ns+0x54>)
2000157e:	6812      	ldr	r2, [r2, #0]
20001580:	2105      	movs	r1, #5
20001582:	430a      	orrs	r2, r1
20001584:	601a      	str	r2, [r3, #0]
20001586:	46c0      	nop			; (mov r8, r8)
20001588:	4b05      	ldr	r3, [pc, #20]	; (200015a0 <delay_250ns+0x54>)
2000158a:	681b      	ldr	r3, [r3, #0]
2000158c:	4b04      	ldr	r3, [pc, #16]	; (200015a0 <delay_250ns+0x54>)
2000158e:	4a04      	ldr	r2, [pc, #16]	; (200015a0 <delay_250ns+0x54>)
20001590:	6812      	ldr	r2, [r2, #0]
20001592:	4904      	ldr	r1, [pc, #16]	; (200015a4 <delay_250ns+0x58>)
20001594:	400a      	ands	r2, r1
20001596:	601a      	str	r2, [r3, #0]
20001598:	46c0      	nop			; (mov r8, r8)
2000159a:	46bd      	mov	sp, r7
2000159c:	bd80      	pop	{r7, pc}
2000159e:	46c0      	nop			; (mov r8, r8)
200015a0:	e000e010 	and	lr, r0, r0, lsl r0
200015a4:	fffefff8 			; <UNDEFINED> instruction: 0xfffefff8
200015a8:	e000e014 	and	lr, r0, r4, lsl r0
200015ac:	e000e018 	and	lr, r0, r8, lsl r0

200015b0 <delay_500ns>:
200015b0:	b580      	push	{r7, lr}
200015b2:	af00      	add	r7, sp, #0
200015b4:	f7ff ffca 	bl	2000154c <delay_250ns>
200015b8:	f7ff ffc8 	bl	2000154c <delay_250ns>
200015bc:	46c0      	nop			; (mov r8, r8)
200015be:	46bd      	mov	sp, r7
200015c0:	bd80      	pop	{r7, pc}

200015c2 <delay_mikro>:
200015c2:	b580      	push	{r7, lr}
200015c4:	b084      	sub	sp, #16
200015c6:	af00      	add	r7, sp, #0
200015c8:	6078      	str	r0, [r7, #4]
200015ca:	2300      	movs	r3, #0
200015cc:	60fb      	str	r3, [r7, #12]
200015ce:	e004      	b.n	200015da <delay_mikro+0x18>
200015d0:	f7ff ffee 	bl	200015b0 <delay_500ns>
200015d4:	68fb      	ldr	r3, [r7, #12]
200015d6:	3301      	adds	r3, #1
200015d8:	60fb      	str	r3, [r7, #12]
200015da:	687b      	ldr	r3, [r7, #4]
200015dc:	005a      	lsls	r2, r3, #1
200015de:	68fb      	ldr	r3, [r7, #12]
200015e0:	429a      	cmp	r2, r3
200015e2:	d8f5      	bhi.n	200015d0 <delay_mikro+0xe>
200015e4:	46c0      	nop			; (mov r8, r8)
200015e6:	46bd      	mov	sp, r7
200015e8:	b004      	add	sp, #16
200015ea:	bd80      	pop	{r7, pc}

200015ec <delay_milli>:
200015ec:	b580      	push	{r7, lr}
200015ee:	b082      	sub	sp, #8
200015f0:	af00      	add	r7, sp, #0
200015f2:	6078      	str	r0, [r7, #4]
200015f4:	687b      	ldr	r3, [r7, #4]
200015f6:	22fa      	movs	r2, #250	; 0xfa
200015f8:	0092      	lsls	r2, r2, #2
200015fa:	4353      	muls	r3, r2
200015fc:	0018      	movs	r0, r3
200015fe:	f7ff ffe0 	bl	200015c2 <delay_mikro>
20001602:	46c0      	nop			; (mov r8, r8)
20001604:	46bd      	mov	sp, r7
20001606:	b002      	add	sp, #8
20001608:	bd80      	pop	{r7, pc}
2000160a:	46c0      	nop			; (mov r8, r8)

2000160c <keyboard_val>:
	...

2000160d <win_state>:
2000160d:	00000000 	andeq	r0, r0, r0

20001610 <map_grid>:
	...

20001630 <spoop_bits>:
20001630:	c2433c3c 	subgt	r3, r3, #60, 24	; 0x3c00
20001634:	d00fb99d 	mulle	pc, sp, r9	; <UNPREDICTABLE>
20001638:	524a2e74 	subpl	r2, sl, #116, 28	; 0x740
2000163c:	5e7a566a 	cdppl	6, 7, cr5, cr10, cr10, {3}
20001640:	1ff82184 	svcne	0x00f82184
20001644:	100c0c30 	andne	r0, ip, r0, lsr ip
20001648:	38162412 	ldmdacc	r6, {r1, r4, sl, sp}
2000164c:	1e7811c8 	rpwne<illegal precision>m	f1, f0, #0.0

20001650 <exit_bits>:
20001650:	8181ffff 	strdhi	pc, [r1, pc]
20001654:	a5a5bdbd 	strge	fp, [r5, #3517]!	; 0xdbd
20001658:	a5a5a5a5 	strge	sl, [r5, #1445]!	; 0x5a5
2000165c:	a5a5a5a5 	strge	sl, [r5, #1445]!	; 0x5a5
20001660:	a5a5a5a5 	strge	sl, [r5, #1445]!	; 0x5a5
20001664:	a5a5a5a5 	strge	sl, [r5, #1445]!	; 0x5a5
20001668:	bdbda5a5 	cfldr32lt	mvfx10, [sp, #660]!	; 0x294
2000166c:	ffff8181 			; <UNDEFINED> instruction: 0xffff8181

20001670 <enemy_bits>:
20001670:	7ffe781e 	svcvc	0x00fe781e
20001674:	2c346006 	ldccs	0, cr6, [r4], #-24	; 0xffffffe8
20001678:	12481668 	subne	r1, r8, #104, 12	; 0x6800000
2000167c:	07e00c30 			; <UNDEFINED> instruction: 0x07e00c30
20001680:	0db00660 	ldceq	6, cr0, [r0, #384]!	; 0x180
20001684:	17680ad0 			; <UNDEFINED> instruction: 0x17680ad0
20001688:	366c399c 			; <UNDEFINED> instruction: 0x366c399c
2000168c:	399c2ff4 	ldmibcc	ip, {r2, r4, r5, r6, r7, r8, r9, sl, fp, sp}

20001690 <start_message1>:
20001690:	6f6f7053 	svcvs	0x006f7053
20001694:	73277970 			; <UNDEFINED> instruction: 0x73277970
20001698:	00000000 	andeq	r0, r0, r0

2000169c <start_message2>:
2000169c:	617a6962 	cmnvs	sl, r2, ror #18
200016a0:	20657272 	rsbcs	r7, r5, r2, ror r2
200016a4:	65766461 	ldrbvs	r6, [r6, #-1121]!	; 0xfffffb9f
200016a8:	7275746e 	rsbsvc	r7, r5, #1845493760	; 0x6e000000
200016ac:	00000065 	andeq	r0, r0, r5, rrx

200016b0 <game_over_message>:
200016b0:	656d6147 	strbvs	r6, [sp, #-327]!	; 0xfffffeb9
200016b4:	65766f20 	ldrbvs	r6, [r6, #-3872]!	; 0xfffff0e0
200016b8:	00002172 	andeq	r2, r0, r2, ror r1

200016bc <win_message>:
200016bc:	20756f59 	rsbscs	r6, r5, r9, asr pc
200016c0:	216e6977 	smccs	59031	; 0xe697
200016c4:	00000000 	andeq	r0, r0, r0

200016c8 <loss_message>:
200016c8:	20756f59 	rsbscs	r6, r5, r9, asr pc
200016cc:	65736f6c 	ldrbvs	r6, [r3, #-3948]!	; 0xfffff094
200016d0:	00000021 	andeq	r0, r0, r1, lsr #32

200016d4 <key>:
200016d4:	0a030201 	beq	200c1ee0 <enemy_bits+0xc07bc>
200016d8:	0b060504 	bleq	20182af0 <enemy_bits+0x1813cc>
200016dc:	0c090807 	stceq	8, cr0, [r9], {7}
200016e0:	0d0f000e 	stceq	0, cr0, [pc, #-56]	; 200016b0 <game_over_message>

200016e4 <spoop_bits>:
200016e4:	c2433c3c 	subgt	r3, r3, #60, 24	; 0x3c00
200016e8:	d00fb99d 	mulle	pc, sp, r9	; <UNPREDICTABLE>
200016ec:	524a2e74 	subpl	r2, sl, #116, 28	; 0x740
200016f0:	5e7a566a 	cdppl	6, 7, cr5, cr10, cr10, {3}
200016f4:	1ff82184 	svcne	0x00f82184
200016f8:	100c0c30 	andne	r0, ip, r0, lsr ip
200016fc:	38162412 	ldmdacc	r6, {r1, r4, sl, sp}
20001700:	1e7811c8 	rpwne<illegal precision>m	f1, f0, #0.0

20001704 <exit_bits>:
20001704:	8181ffff 	strdhi	pc, [r1, pc]
20001708:	a5a5bdbd 	strge	fp, [r5, #3517]!	; 0xdbd
2000170c:	a5a5a5a5 	strge	sl, [r5, #1445]!	; 0x5a5
20001710:	a5a5a5a5 	strge	sl, [r5, #1445]!	; 0x5a5
20001714:	a5a5a5a5 	strge	sl, [r5, #1445]!	; 0x5a5
20001718:	a5a5a5a5 	strge	sl, [r5, #1445]!	; 0x5a5
2000171c:	bdbda5a5 	cfldr32lt	mvfx10, [sp, #660]!	; 0x294
20001720:	ffff8181 			; <UNDEFINED> instruction: 0xffff8181

20001724 <enemy_bits>:
20001724:	7ffe781e 	svcvc	0x00fe781e
20001728:	2c346006 	ldccs	0, cr6, [r4], #-24	; 0xffffffe8
2000172c:	12481668 	subne	r1, r8, #104, 12	; 0x6800000
20001730:	07e00c30 			; <UNDEFINED> instruction: 0x07e00c30
20001734:	0db00660 	ldceq	6, cr0, [r0, #384]!	; 0x180
20001738:	17680ad0 			; <UNDEFINED> instruction: 0x17680ad0
2000173c:	366c399c 			; <UNDEFINED> instruction: 0x366c399c
20001740:	399c2ff4 	ldmibcc	ip, {r2, r4, r5, r6, r7, r8, r9, sl, fp, sp}
20001744:	20202020 	eorcs	r2, r0, r0, lsr #32
20001748:	20202020 	eorcs	r2, r0, r0, lsr #32
2000174c:	20202020 	eorcs	r2, r0, r0, lsr #32
20001750:	20202020 	eorcs	r2, r0, r0, lsr #32
20001754:	20202020 	eorcs	r2, r0, r0, lsr #32
20001758:	20202020 	eorcs	r2, r0, r0, lsr #32
2000175c:	20202020 	eorcs	r2, r0, r0, lsr #32
20001760:	00002020 	andeq	r2, r0, r0, lsr #32
20001764:	20001246 	andcs	r1, r0, r6, asr #4
20001768:	2000124e 	andcs	r1, r0, lr, asr #4
2000176c:	20001256 	andcs	r1, r0, r6, asr r2
20001770:	2000125e 	andcs	r1, r0, lr, asr r2
20001774:	20001266 	andcs	r1, r0, r6, ror #4

Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	0000082e 	andeq	r0, r0, lr, lsr #16
       4:	00000004 	andeq	r0, r0, r4
       8:	01040000 	mrseq	r0, (UNDEF: 4)
       c:	00000084 	andeq	r0, r0, r4, lsl #1
      10:	0002500c 	andeq	r5, r2, ip
      14:	00001800 	andeq	r1, r0, r0, lsl #16
	...
      20:	02020200 	andeq	r0, r2, #0, 4
      24:	0000420c 	andeq	r4, r0, ip, lsl #4
      28:	000d0300 	andeq	r0, sp, r0, lsl #6
      2c:	0d020000 	stceq	0, cr0, [r2, #-0]
      30:	00000042 	andeq	r0, r0, r2, asr #32
      34:	03ce0300 	biceq	r0, lr, #0, 6
      38:	0e020000 	cdpeq	0, 0, cr0, cr2, cr0, {0}
      3c:	00000042 	andeq	r0, r0, r2, asr #32
      40:	01040001 	tsteq	r4, r1
      44:	0002b508 	andeq	fp, r2, r8, lsl #10
      48:	02040500 	andeq	r0, r4, #0, 10
      4c:	0000620a 	andeq	r6, r0, sl, lsl #4
      50:	64690600 	strbtvs	r0, [r9], #-1536	; 0xfffffa00
      54:	0b020072 	bleq	80224 <startup-0x1ff7fddc>
      58:	00000062 	andeq	r0, r0, r2, rrx
      5c:	00002107 	andeq	r2, r0, r7, lsl #2
      60:	04040000 	streq	r0, [r4], #-0
      64:	00037c07 	andeq	r7, r3, r7, lsl #24
      68:	02020200 	andeq	r0, r2, #0, 4
      6c:	00008a13 	andeq	r8, r0, r3, lsl sl
      70:	04a90300 	strteq	r0, [r9], #768	; 0x300
      74:	14020000 	strne	r0, [r2], #-0
      78:	00000042 	andeq	r0, r0, r2, asr #32
      7c:	007c0300 	rsbseq	r0, ip, r0, lsl #6
      80:	15020000 	strne	r0, [r2, #-0]
      84:	00000042 	andeq	r0, r0, r2, asr #32
      88:	04050001 	streq	r0, [r5], #-1
      8c:	00a31102 	adceq	r1, r3, r2, lsl #2
      90:	6f060000 	svcvs	0x00060000
      94:	02007264 	andeq	r7, r0, #100, 4	; 0x40000006
      98:	00006212 	andeq	r6, r0, r2, lsl r2
      9c:	00690700 	rsbeq	r0, r9, r0, lsl #14
      a0:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
      a4:	0000031e 	andeq	r0, r0, lr, lsl r3
      a8:	ec040218 	sfm	f0, 4, [r4], {24}
      ac:	03000000 	movweq	r0, #0
      b0:	00000454 	andeq	r0, r0, r4, asr r4
      b4:	00620502 	rsbeq	r0, r2, r2, lsl #10
      b8:	03000000 	movweq	r0, #0
      bc:	0000017f 	andeq	r0, r0, pc, ror r1
      c0:	00620602 	rsbeq	r0, r2, r2, lsl #12
      c4:	03040000 	movweq	r0, #16384	; 0x4000
      c8:	0000020e 	andeq	r0, r0, lr, lsl #4
      cc:	00620702 	rsbeq	r0, r2, r2, lsl #14
      d0:	03080000 	movweq	r0, #32768	; 0x8000
      d4:	00000435 	andeq	r0, r0, r5, lsr r4
      d8:	00620802 	rsbeq	r0, r2, r2, lsl #16
      dc:	090c0000 	stmdbeq	ip, {}	; <UNPREDICTABLE>
      e0:	00000049 	andeq	r0, r0, r9, asr #32
      e4:	008a0910 	addeq	r0, sl, r0, lsl r9
      e8:	00140000 	andseq	r0, r4, r0
      ec:	0003890a 	andeq	r8, r3, sl, lsl #18
      f0:	a3180200 	tstge	r8, #0, 4
      f4:	02000000 	andeq	r0, r0, #0
      f8:	18070302 	stmdane	r7, {r1, r8, r9}
      fc:	03000001 	movweq	r0, #1
     100:	00000152 	andeq	r0, r0, r2, asr r1
     104:	00420803 	subeq	r0, r2, r3, lsl #16
     108:	03000000 	movweq	r0, #0
     10c:	0000021b 	andeq	r0, r0, fp, lsl r2
     110:	00420903 	subeq	r0, r2, r3, lsl #18
     114:	00010000 	andeq	r0, r1, r0
     118:	05030405 	streq	r0, [r3, #-1029]	; 0xfffffbfb
     11c:	00000131 	andeq	r0, r0, r1, lsr r1
     120:	0003610b 	andeq	r6, r3, fp, lsl #2
     124:	62060300 	andvs	r0, r6, #0, 6
     128:	07000000 	streq	r0, [r0, -r0]
     12c:	000000f7 	strdeq	r0, [r0], -r7
     130:	03040200 	movweq	r0, #16896	; 0x4200
     134:	0001520e 	andeq	r5, r1, lr, lsl #4
     138:	00140300 	andseq	r0, r4, r0, lsl #6
     13c:	0f030000 	svceq	0x00030000
     140:	00000152 	andeq	r0, r0, r2, asr r1
     144:	045a0300 	ldrbeq	r0, [sl], #-768	; 0xfffffd00
     148:	10030000 	andne	r0, r3, r0
     14c:	00000042 	andeq	r0, r0, r2, asr #32
     150:	02040002 	andeq	r0, r4, #2
     154:	00037607 	andeq	r7, r3, r7, lsl #12
     158:	03040500 	movweq	r0, #17664	; 0x4500
     15c:	0001720c 	andeq	r7, r1, ip, lsl #4
     160:	6d700600 	ldclvs	6, cr0, [r0, #-0]
     164:	0d030063 	stceq	0, cr0, [r3, #-396]	; 0xfffffe74
     168:	00000062 	andeq	r0, r0, r2, rrx
     16c:	00013107 	andeq	r3, r1, r7, lsl #2
     170:	02020000 	andeq	r0, r2, #0
     174:	01931803 	orrseq	r1, r3, r3, lsl #16
     178:	ec030000 	stc	0, cr0, [r3], {-0}
     17c:	03000003 	movweq	r0, #3
     180:	00004219 	andeq	r4, r0, r9, lsl r2
     184:	94030000 	strls	r0, [r3], #-0
     188:	03000003 	movweq	r0, #3
     18c:	0000421a 	andeq	r4, r0, sl, lsl r2
     190:	05000100 	streq	r0, [r0, #-256]	; 0xffffff00
     194:	ac160304 	ldcge	3, cr0, [r6], {4}
     198:	0b000001 	bleq	1a4 <startup-0x1ffffe5c>
     19c:	0000004c 	andeq	r0, r0, ip, asr #32
     1a0:	00621703 	rsbeq	r1, r2, r3, lsl #14
     1a4:	72070000 	andvc	r0, r7, #0
     1a8:	00000001 	andeq	r0, r0, r1
     1ac:	1f030202 	svcne	0x00030202
     1b0:	000001cd 	andeq	r0, r0, sp, asr #3
     1b4:	00002003 	andeq	r2, r0, r3
     1b8:	42200300 	eormi	r0, r0, #0, 6
     1bc:	00000000 	andeq	r0, r0, r0
     1c0:	00041503 	andeq	r1, r4, r3, lsl #10
     1c4:	42210300 	eormi	r0, r1, #0, 6
     1c8:	01000000 	mrseq	r0, (UNDEF: 0)
     1cc:	03040500 	movweq	r0, #17664	; 0x4500
     1d0:	0001e61d 	andeq	lr, r1, sp, lsl r6
     1d4:	00540b00 	subseq	r0, r4, r0, lsl #22
     1d8:	1e030000 	cdpne	0, 0, cr0, cr3, cr0, {0}
     1dc:	00000062 	andeq	r0, r0, r2, rrx
     1e0:	0001ac07 	andeq	sl, r1, r7, lsl #24
     1e4:	02020000 	andeq	r0, r2, #0
     1e8:	02072603 	andeq	r2, r7, #3145728	; 0x300000
     1ec:	8d030000 	stchi	0, cr0, [r3, #-0]
     1f0:	03000001 	movweq	r0, #1
     1f4:	00004227 	andeq	r4, r0, r7, lsr #4
     1f8:	44030000 	strmi	r0, [r3], #-0
     1fc:	03000003 	movweq	r0, #3
     200:	00004228 	andeq	r4, r0, r8, lsr #4
     204:	05000100 	streq	r0, [r0, #-256]	; 0xffffff00
     208:	20240304 	eorcs	r0, r4, r4, lsl #6
     20c:	0b000002 	bleq	21c <startup-0x1ffffde4>
     210:	0000005c 	andeq	r0, r0, ip, asr r0
     214:	00622503 	rsbeq	r2, r2, r3, lsl #10
     218:	e6070000 	str	r0, [r7], -r0
     21c:	00000001 	andeq	r0, r0, r1
     220:	2d030202 	sfmcs	f0, 4, [r3, #-8]
     224:	00000241 	andeq	r0, r0, r1, asr #4
     228:	0002f403 	andeq	pc, r2, r3, lsl #8
     22c:	422e0300 	eormi	r0, lr, #0, 6
     230:	00000000 	andeq	r0, r0, r0
     234:	00047003 	andeq	r7, r4, r3
     238:	422f0300 	eormi	r0, pc, #0, 6
     23c:	01000000 	mrseq	r0, (UNDEF: 0)
     240:	03040500 	movweq	r0, #17664	; 0x4500
     244:	00025a2b 	andeq	r5, r2, fp, lsr #20
     248:	00640b00 	rsbeq	r0, r4, r0, lsl #22
     24c:	2c030000 	stccs	0, cr0, [r3], {-0}
     250:	00000062 	andeq	r0, r0, r2, rrx
     254:	00022007 	andeq	r2, r2, r7
     258:	10020000 	andne	r0, r2, r0
     25c:	027b1503 	rsbseq	r1, fp, #12582912	; 0xc00000
     260:	93090000 	movwls	r0, #36864	; 0x9000
     264:	00000001 	andeq	r0, r0, r1
     268:	0001cd09 	andeq	ip, r1, r9, lsl #26
     26c:	07090400 	streq	r0, [r9, -r0, lsl #8]
     270:	08000002 	stmdaeq	r0, {r1}
     274:	00024109 	andeq	r4, r2, r9, lsl #2
     278:	05000c00 	streq	r0, [r0, #-3072]	; 0xfffff400
     27c:	94130310 	ldrls	r0, [r3], #-784	; 0xfffffcf0
     280:	0b000002 	bleq	290 <startup-0x1ffffd70>
     284:	000002c9 	andeq	r0, r0, r9, asr #5
     288:	00621403 	rsbeq	r1, r2, r3, lsl #8
     28c:	5a070000 	bpl	1c0294 <startup-0x1fe3fd6c>
     290:	00000002 	andeq	r0, r0, r2
     294:	36030202 	strcc	r0, [r3], -r2, lsl #4
     298:	000002b5 			; <UNDEFINED> instruction: 0x000002b5
     29c:	00014403 	andeq	r4, r1, r3, lsl #8
     2a0:	42370300 	eorsmi	r0, r7, #0, 6
     2a4:	00000000 	andeq	r0, r0, r0
     2a8:	00013a03 	andeq	r3, r1, r3, lsl #20
     2ac:	42380300 	eorsmi	r0, r8, #0, 6
     2b0:	01000000 	mrseq	r0, (UNDEF: 0)
     2b4:	03040500 	movweq	r0, #17664	; 0x4500
     2b8:	0002ce34 	andeq	ip, r2, r4, lsr lr
     2bc:	02c30b00 	sbceq	r0, r3, #0, 22
     2c0:	35030000 	strcc	r0, [r3, #-0]
     2c4:	00000062 	andeq	r0, r0, r2, rrx
     2c8:	00029407 	andeq	r9, r2, r7, lsl #8
     2cc:	b8080000 	stmdalt	r8, {}	; <UNPREDICTABLE>
     2d0:	1c000003 	stcne	0, cr0, [r0], {3}
     2d4:	02f30403 	rscseq	r0, r3, #50331648	; 0x3000000
     2d8:	18090000 	stmdane	r9, {}	; <UNPREDICTABLE>
     2dc:	00000001 	andeq	r0, r0, r1
     2e0:	00015909 	andeq	r5, r1, r9, lsl #18
     2e4:	7b090400 	blvc	2412ec <startup-0x1fdbed14>
     2e8:	08000002 	stmdaeq	r0, {r1}
     2ec:	0002b509 	andeq	fp, r2, r9, lsl #10
     2f0:	0a001800 	beq	62f8 <startup-0x1fff9d08>
     2f4:	00000248 	andeq	r0, r0, r8, asr #4
     2f8:	02ce3b03 	sbceq	r3, lr, #3072	; 0xc00
     2fc:	2b080000 	blcs	200304 <startup-0x1fdffcfc>
     300:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
     304:	03520404 	cmpeq	r2, #4, 8	; 0x4000000
     308:	690c0000 	stmdbvs	ip, {}	; <UNPREDICTABLE>
     30c:	0400726d 	streq	r7, [r0], #-621	; 0xfffffd93
     310:	00006205 	andeq	r6, r0, r5, lsl #4
     314:	650c0000 	strvs	r0, [ip, #-0]
     318:	0400726d 	streq	r7, [r0], #-621	; 0xfffffd93
     31c:	00006206 	andeq	r6, r0, r6, lsl #4
     320:	a4030400 	strge	r0, [r3], #-1024	; 0xfffffc00
     324:	04000002 	streq	r0, [r0], #-2
     328:	00006207 	andeq	r6, r0, r7, lsl #4
     32c:	3b030800 	blcc	c2334 <startup-0x1ff3dccc>
     330:	04000004 	streq	r0, [r0], #-4
     334:	00006208 	andeq	r6, r0, r8, lsl #4
     338:	b0030c00 	andlt	r0, r3, r0, lsl #24
     33c:	04000004 	streq	r0, [r0], #-4
     340:	00006209 	andeq	r6, r0, r9, lsl #4
     344:	700c1000 	andvc	r1, ip, r0
     348:	0a040072 	beq	100518 <startup-0x1feffae8>
     34c:	00000062 	andeq	r0, r0, r2, rrx
     350:	060a0014 			; <UNDEFINED> instruction: 0x060a0014
     354:	04000004 	streq	r0, [r0], #-4
     358:	0002fe0b 	andeq	pc, r2, fp, lsl #28
     35c:	05040d00 	streq	r0, [r4, #-3328]	; 0xfffff300
     360:	00746e69 	rsbseq	r6, r4, r9, ror #28
     364:	31070404 	tstcc	r7, r4, lsl #8
     368:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
     36c:	00000042 	andeq	r0, r0, r2, asr #32
     370:	0000037b 	andeq	r0, r0, fp, ror r3
     374:	0003640f 	andeq	r6, r3, pc, lsl #8
     378:	10001f00 	andne	r1, r0, r0, lsl #30
     37c:	000002ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
     380:	036b0305 	cmneq	fp, #335544320	; 0x14000000
     384:	03050000 	movweq	r0, #20480	; 0x5000
     388:	20001630 	andcs	r1, r0, r0, lsr r6
     38c:	00015c10 	andeq	r5, r1, r0, lsl ip
     390:	6b030600 	blvs	c1b98 <startup-0x1ff3e468>
     394:	05000003 	streq	r0, [r0, #-3]
     398:	00165003 	andseq	r5, r6, r3
     39c:	03e11020 	mvneq	r1, #32
     3a0:	03070000 	movweq	r0, #28672	; 0x7000
     3a4:	0000036b 	andeq	r0, r0, fp, ror #6
     3a8:	16700305 	ldrbtne	r0, [r0], -r5, lsl #6
     3ac:	2e082000 	cdpcs	0, 0, cr2, cr8, cr0, {0}
     3b0:	08000002 	stmdaeq	r0, {r1}
     3b4:	03df0908 	bicseq	r0, pc, #8, 18	; 0x20000
     3b8:	c3030000 	movwgt	r0, #12288	; 0x3000
     3bc:	08000001 	stmdaeq	r0, {r0}
     3c0:	0000420a 	andeq	r4, r0, sl, lsl #4
     3c4:	0a030000 	beq	c03cc <startup-0x1ff3fc34>
     3c8:	08000003 	stmdaeq	r0, {r0, r1}
     3cc:	0000420b 	andeq	r4, r0, fp, lsl #4
     3d0:	0b030100 	bleq	c07d8 <startup-0x1ff3f828>
     3d4:	08000005 	stmdaeq	r0, {r0, r2}
     3d8:	0003df0c 	andeq	sp, r3, ip, lsl #30
     3dc:	11000400 	tstne	r0, r0, lsl #8
     3e0:	00004204 	andeq	r4, r0, r4, lsl #4
     3e4:	02270a00 	eoreq	r0, r7, #0, 20
     3e8:	0d080000 	stceq	0, cr0, [r8, #-0]
     3ec:	000003ae 	andeq	r0, r0, lr, lsr #7
     3f0:	0002260a 	andeq	r2, r2, sl, lsl #12
     3f4:	fb0d0800 	blx	3423fe <startup-0x1fcbdc02>
     3f8:	11000003 	tstne	r0, r3
     3fc:	0003ae04 	andeq	sl, r3, r4, lsl #28
     400:	03d60800 	bicseq	r0, r6, #0, 16
     404:	08240000 	stmdaeq	r4!, {}	; <UNPREDICTABLE>
     408:	00047a0f 	andeq	r7, r4, pc, lsl #20
     40c:	04630300 	strbteq	r0, [r3], #-768	; 0xfffffd00
     410:	10080000 	andne	r0, r8, r0
     414:	000003f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     418:	049d0300 	ldreq	r0, [sp], #768	; 0x300
     41c:	11080000 	mrsne	r0, (UNDEF: 8)
     420:	0000035d 	andeq	r0, r0, sp, asr r3
     424:	04a30304 	strteq	r0, [r3], #772	; 0x304
     428:	11080000 	mrsne	r0, (UNDEF: 8)
     42c:	0000035d 	andeq	r0, r0, sp, asr r3
     430:	02ee0308 	rsceq	r0, lr, #8, 6	; 0x20000000
     434:	12080000 	andne	r0, r8, #0
     438:	0000035d 	andeq	r0, r0, sp, asr r3
     43c:	038e030c 	orreq	r0, lr, #12, 6	; 0x30000000
     440:	12080000 	andne	r0, r8, #0
     444:	0000035d 	andeq	r0, r0, sp, asr r3
     448:	03f70310 	mvnseq	r0, #16, 6	; 0x40000000
     44c:	13080000 	movwne	r0, #32768	; 0x8000
     450:	0000048b 	andeq	r0, r0, fp, lsl #9
     454:	05d10314 	ldrbeq	r0, [r1, #788]	; 0x314
     458:	14080000 	strne	r0, [r8], #-0
     45c:	0000048b 	andeq	r0, r0, fp, lsl #9
     460:	01dc0318 	bicseq	r0, ip, r8, lsl r3
     464:	15080000 	strne	r0, [r8, #-0]
     468:	0000048b 	andeq	r0, r0, fp, lsl #9
     46c:	03fc031c 	mvnseq	r0, #28, 6	; 0x70000000
     470:	16080000 	strne	r0, [r8], -r0
     474:	000004a6 	andeq	r0, r0, r6, lsr #9
     478:	85120020 	ldrhi	r0, [r2, #-32]	; 0xffffffe0
     47c:	13000004 	movwne	r0, #4
     480:	00000485 	andeq	r0, r0, r5, lsl #9
     484:	01041100 	mrseq	r1, (UNDEF: 20)
     488:	11000004 	tstne	r0, r4
     48c:	00047a04 	andeq	r7, r4, r4, lsl #20
     490:	04a61200 	strteq	r1, [r6], #512	; 0x200
     494:	85130000 	ldrhi	r0, [r3, #-0]
     498:	13000004 	movwne	r0, #4
     49c:	0000035d 	andeq	r0, r0, sp, asr r3
     4a0:	00035d13 	andeq	r5, r3, r3, lsl sp
     4a4:	04110000 	ldreq	r0, [r1], #-0
     4a8:	00000491 	muleq	r0, r1, r4
     4ac:	0002e00a 	andeq	lr, r2, sl
     4b0:	01170800 	tsteq	r7, r0, lsl #16
     4b4:	0a000004 	beq	4cc <startup-0x1ffffb34>
     4b8:	000002df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
     4bc:	04851708 	streq	r1, [r5], #1800	; 0x708
     4c0:	66140000 	ldrvs	r0, [r4], -r0
     4c4:	01000001 	tsteq	r0, r1
     4c8:	00004225 	andeq	r4, r0, r5, lsr #4
     4cc:	0c030500 	cfstr32eq	mvfx0, [r3], {-0}
     4d0:	0e200016 	miaeq	acc0, r6, r0
     4d4:	00000042 	andeq	r0, r0, r2, asr #32
     4d8:	000004e9 	andeq	r0, r0, r9, ror #9
     4dc:	0003640f 	andeq	r6, r3, pc, lsl #8
     4e0:	640f0700 	strvs	r0, [pc], #-1792	; 4e8 <startup-0x1ffffb18>
     4e4:	03000003 	movweq	r0, #3
     4e8:	04451400 	strbeq	r1, [r5], #-1024	; 0xfffffc00
     4ec:	26010000 	strcs	r0, [r1], -r0
     4f0:	000004d3 	ldrdeq	r0, [r0], -r3
     4f4:	16100305 	ldrne	r0, [r0], -r5, lsl #6
     4f8:	aa142000 	bge	508500 <startup-0x1faf7b00>
     4fc:	01000001 	tsteq	r0, r1
     500:	00004228 	andeq	r4, r0, r8, lsr #4
     504:	0d030500 	cfstr32eq	mvfx0, [r3, #-0]
     508:	0e200016 	miaeq	acc0, r6, r0
     50c:	00000042 	andeq	r0, r0, r2, asr #32
     510:	0000051b 	andeq	r0, r0, fp, lsl r5
     514:	0003640f 	andeq	r6, r3, pc, lsl #8
     518:	14000800 	strne	r0, [r0], #-2048	; 0xfffff800
     51c:	00000324 	andeq	r0, r0, r4, lsr #6
     520:	050b2a01 	streq	r2, [fp, #-2561]	; 0xfffff5ff
     524:	03050000 	movweq	r0, #20480	; 0x5000
     528:	20001690 	mulcs	r0, r0, r6
     52c:	0000420e 	andeq	r4, r0, lr, lsl #4
     530:	00053c00 	andeq	r3, r5, r0, lsl #24
     534:	03640f00 	cmneq	r4, #0, 30
     538:	00110000 	andseq	r0, r1, r0
     53c:	0001b414 	andeq	fp, r1, r4, lsl r4
     540:	2c2b0100 	stfcss	f0, [fp], #-0
     544:	05000005 	streq	r0, [r0, #-5]
     548:	00169c03 	andseq	r9, r6, r3, lsl #24
     54c:	00420e20 	subeq	r0, r2, r0, lsr #28
     550:	055d0000 	ldrbeq	r0, [sp, #-0]
     554:	640f0000 	strvs	r0, [pc], #-0	; 55c <startup-0x1ffffaa4>
     558:	0a000003 	beq	56c <startup-0x1ffffa94>
     55c:	01981400 	orrseq	r1, r8, r0, lsl #8
     560:	2d010000 	stccs	0, cr0, [r1, #-0]
     564:	0000054d 	andeq	r0, r0, sp, asr #10
     568:	16b00305 	ldrtne	r0, [r0], r5, lsl #6
     56c:	73142000 	tstvc	r4, #0
     570:	01000001 	tsteq	r0, r1
     574:	00050b2e 	andeq	r0, r5, lr, lsr #22
     578:	bc030500 	cfstr32lt	mvfx0, [r3], {-0}
     57c:	0e200016 	miaeq	acc0, r6, r0
     580:	00000042 	andeq	r0, r0, r2, asr #32
     584:	0000058f 	andeq	r0, r0, pc, lsl #11
     588:	0003640f 	andeq	r6, r3, pc, lsl #8
     58c:	14000900 	strne	r0, [r0], #-2304	; 0xfffff700
     590:	00000000 	andeq	r0, r0, r0
     594:	057f2f01 	ldrbeq	r2, [pc, #-3841]!	; fffff69b <enemy_bits+0xdfffdf77>
     598:	03050000 	movweq	r0, #20480	; 0x5000
     59c:	200016c8 	andcs	r1, r0, r8, asr #13
     5a0:	00040c15 	andeq	r0, r4, r5, lsl ip
     5a4:	c0ee0100 	rscgt	r0, lr, r0, lsl #2
     5a8:	a8200005 	stmdage	r0!, {r0, r2}
     5ac:	01000000 	mrseq	r0, (UNDEF: 0)
     5b0:	0005d49c 	muleq	r5, ip, r4
     5b4:	02361600 	eorseq	r1, r6, #0, 12
     5b8:	fb010000 	blx	405c2 <startup-0x1ffbfa3e>
     5bc:	0000035d 	andeq	r0, r0, sp, asr r3
     5c0:	000005c6 	andeq	r0, r0, r6, asr #11
     5c4:	68180017 	ldmdavs	r8, {r0, r1, r2, r4}
     5c8:	01000003 	tsteq	r0, r3
     5cc:	00035dfe 	strdeq	r5, [r3], -lr
     5d0:	00001700 	andeq	r1, r0, r0, lsl #14
     5d4:	00044019 	andeq	r4, r4, r9, lsl r0
     5d8:	04d10100 	ldrbeq	r0, [r1], #256	; 0x100
     5dc:	bc200005 	stclt	0, cr0, [r0], #-20	; 0xffffffec
     5e0:	01000000 	mrseq	r0, (UNDEF: 0)
     5e4:	0006949c 	muleq	r6, ip, r4
     5e8:	012a1a00 			; <UNDEFINED> instruction: 0x012a1a00
     5ec:	d1010000 	mrsle	r0, (UNDEF: 1)
     5f0:	000004b7 			; <UNDEFINED> instruction: 0x000004b7
     5f4:	1a549102 	bne	1524a04 <startup-0x1eadb5fc>
     5f8:	000003a0 	andeq	r0, r0, r0, lsr #7
     5fc:	04b7d101 	ldrteq	sp, [r7], #257	; 0x101
     600:	91020000 	mrsls	r0, (UNDEF: 2)
     604:	044e1a50 	strbeq	r1, [lr], #-2640	; 0xfffff5b0
     608:	d1010000 	mrsle	r0, (UNDEF: 1)
     60c:	000004b7 			; <UNDEFINED> instruction: 0x000004b7
     610:	104c9102 	subne	r9, ip, r2, lsl #2
     614:	000004b6 			; <UNDEFINED> instruction: 0x000004b6
     618:	035dd901 	cmpeq	sp, #16384	; 0x4000
     61c:	91020000 	mrsls	r0, (UNDEF: 2)
     620:	04bf106c 	ldrteq	r1, [pc], #108	; 628 <startup-0x1ffff9d8>
     624:	da010000 	ble	4062c <startup-0x1ffbf9d4>
     628:	0000035d 	andeq	r0, r0, sp, asr r3
     62c:	10689102 	rsbne	r9, r8, r2, lsl #2
     630:	00000200 	andeq	r0, r0, r0, lsl #4
     634:	035de001 	cmpeq	sp, #1
     638:	91020000 	mrsls	r0, (UNDEF: 2)
     63c:	02071064 	andeq	r1, r7, #100	; 0x64
     640:	e1010000 	mrs	r0, (UNDEF: 1)
     644:	0000035d 	andeq	r0, r0, sp, asr r3
     648:	10609102 	rsbne	r9, r0, r2, lsl #2
     64c:	0000006c 	andeq	r0, r0, ip, rrx
     650:	035de601 	cmpeq	sp, #1048576	; 0x100000
     654:	91020000 	mrsls	r0, (UNDEF: 2)
     658:	0074105c 	rsbseq	r1, r4, ip, asr r0
     65c:	e7010000 	str	r0, [r1, -r0]
     660:	0000035d 	andeq	r0, r0, sp, asr r3
     664:	1b589102 	blne	1624a74 <startup-0x1e9db58c>
     668:	20000510 	andcs	r0, r0, r0, lsl r5
     66c:	00000034 	andeq	r0, r0, r4, lsr r0
     670:	0100781c 	tsteq	r0, ip, lsl r8
     674:	00035dd2 	ldrdeq	r5, [r3], -r2
     678:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     67c:	0005161b 	andeq	r1, r5, fp, lsl r6
     680:	00002220 	andeq	r2, r0, r0, lsr #4
     684:	00791c00 	rsbseq	r1, r9, r0, lsl #24
     688:	035dd301 	cmpeq	sp, #67108864	; 0x4000000
     68c:	91020000 	mrsls	r0, (UNDEF: 2)
     690:	00000070 	andeq	r0, r0, r0, ror r0
     694:	00047c15 	andeq	r7, r4, r5, lsl ip
     698:	94cb0100 	strbls	r0, [fp], #256	; 0x100
     69c:	70200004 	eorvc	r0, r0, r4
     6a0:	01000000 	mrseq	r0, (UNDEF: 0)
     6a4:	0006b89c 	muleq	r6, ip, r8
     6a8:	03c01a00 	biceq	r1, r0, #0, 20
     6ac:	cb010000 	blgt	406b4 <startup-0x1ffbf94c>
     6b0:	000004b7 			; <UNDEFINED> instruction: 0x000004b7
     6b4:	00749102 	rsbseq	r9, r4, r2, lsl #2
     6b8:	0001e115 	andeq	lr, r1, r5, lsl r1
     6bc:	18ba0100 	ldmne	sl!, {r8}
     6c0:	7c200004 	stcvc	0, cr0, [r0], #-16
     6c4:	01000000 	mrseq	r0, (UNDEF: 0)
     6c8:	0007069c 	muleq	r7, ip, r6
     6cc:	02d01a00 	sbcseq	r1, r0, #0, 20
     6d0:	ba010000 	blt	406d8 <startup-0x1ffbf928>
     6d4:	000004b7 			; <UNDEFINED> instruction: 0x000004b7
     6d8:	105c9102 	subsne	r9, ip, r2, lsl #2
     6dc:	00000333 	andeq	r0, r0, r3, lsr r3
     6e0:	035dbb01 	cmpeq	sp, #1024	; 0x400
     6e4:	91020000 	mrsls	r0, (UNDEF: 2)
     6e8:	0350106c 	cmpeq	r0, #108	; 0x6c
     6ec:	bc010000 	stclt	0, cr0, [r1], {-0}
     6f0:	0000035d 	andeq	r0, r0, sp, asr r3
     6f4:	10689102 	rsbne	r9, r8, r2, lsl #2
     6f8:	00000492 	muleq	r0, r2, r4
     6fc:	035dbf01 	cmpeq	sp, #1, 30
     700:	91020000 	mrsls	r0, (UNDEF: 2)
     704:	31150064 	tstcc	r5, r4, rrx
     708:	01000000 	mrseq	r0, (UNDEF: 0)
     70c:	0003d0b1 	strheq	sp, [r3], -r1
     710:	00004820 	andeq	r4, r0, r0, lsr #16
     714:	339c0100 	orrscc	r0, ip, #0, 2
     718:	1b000007 	blne	73c <startup-0x1ffff8c4>
     71c:	200003de 	ldrdcs	r0, [r0], -lr
     720:	00000026 	andeq	r0, r0, r6, lsr #32
     724:	00021618 	andeq	r1, r2, r8, lsl r6
     728:	5d8c0100 	stfpls	f0, [ip]
     72c:	17000003 	strne	r0, [r0, -r3]
     730:	15000000 	strne	r0, [r0, #-0]
     734:	0000014d 	andeq	r0, r0, sp, asr #2
     738:	00103a01 	andseq	r3, r0, r1, lsl #20
     73c:	03c02000 	biceq	r2, r0, #0
     740:	9c010000 	stcls	0, cr0, [r1], {-0}
     744:	00000820 	andeq	r0, r0, r0, lsr #16
     748:	0003a516 	andeq	sl, r3, r6, lsl r5
     74c:	5d3e0100 	ldfpls	f0, [lr, #-0]
     750:	59000003 	stmdbpl	r0, {r0, r1}
     754:	17000007 	strne	r0, [r0, -r7]
     758:	01861600 	orreq	r1, r6, r0, lsl #12
     75c:	42010000 	andmi	r0, r1, #0
     760:	0000035d 	andeq	r0, r0, sp, asr r3
     764:	0000076a 	andeq	r0, r0, sl, ror #14
     768:	c9160017 	ldmdbgt	r6, {r0, r1, r2, r4}
     76c:	01000001 	tsteq	r0, r1
     770:	00035d43 	andeq	r5, r3, r3, asr #26
     774:	00077b00 	andeq	r7, r7, r0, lsl #22
     778:	10001700 	andne	r1, r0, r0, lsl #14
     77c:	0000011c 	andeq	r0, r0, ip, lsl r1
     780:	03e54801 	mvneq	r4, #65536	; 0x10000
     784:	91020000 	mrsls	r0, (UNDEF: 2)
     788:	012a1060 			; <UNDEFINED> instruction: 0x012a1060
     78c:	4f010000 	svcmi	0x00010000
     790:	000004ac 	andeq	r0, r0, ip, lsr #9
     794:	7fbc9103 	svcvc	0x00bc9103
     798:	0002d010 	andeq	sp, r2, r0, lsl r0
     79c:	b7580100 	ldrblt	r0, [r8, -r0, lsl #2]
     7a0:	02000004 	andeq	r0, r0, #4
     7a4:	a9107491 	ldmdbge	r0, {r0, r4, r7, sl, ip, sp, lr}
     7a8:	01000002 	tsteq	r0, r2
     7ac:	0003e55a 	andeq	lr, r3, sl, asr r5
     7b0:	b4910300 	ldrlt	r0, [r1], #768	; 0x300
     7b4:	0421107f 	strteq	r1, [r1], #-127	; 0xffffff81
     7b8:	5f010000 	svcpl	0x00010000
     7bc:	000003f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     7c0:	10709102 	rsbsne	r9, r0, r2, lsl #2
     7c4:	000003a0 	andeq	r0, r0, r0, lsr #7
     7c8:	04ac6201 	strteq	r6, [ip], #513	; 0x201
     7cc:	91030000 	mrsls	r0, (UNDEF: 3)
     7d0:	f3107f90 	vmaxnm.f16	d7, d16, d0
     7d4:	01000001 	tsteq	r0, r1
     7d8:	0004b76b 	andeq	fp, r4, fp, ror #14
     7dc:	6c910200 	lfmvs	f0, 4, [r1], {0}
     7e0:	00031110 	andeq	r1, r3, r0, lsl r1
     7e4:	e56d0100 	strb	r0, [sp, #-256]!	; 0xffffff00
     7e8:	03000003 	movweq	r0, #3
     7ec:	107f8891 			; <UNDEFINED> instruction: 0x107f8891
     7f0:	0000044e 	andeq	r0, r0, lr, asr #8
     7f4:	04ac7401 	strteq	r7, [ip], #1025	; 0x401
     7f8:	91030000 	mrsls	r0, (UNDEF: 3)
     7fc:	c0107ee4 	andsgt	r7, r0, r4, ror #29
     800:	01000003 	tsteq	r0, r3
     804:	0004b77d 	andeq	fp, r4, sp, ror r7
     808:	68910200 	ldmvs	r1, {r9}
     80c:	0000001d 	andeq	r0, r0, sp, lsl r0
     810:	02161800 	andseq	r1, r6, #0, 16
     814:	8c010000 	stchi	0, cr0, [r1], {-0}
     818:	0000035d 	andeq	r0, r0, sp, asr r3
     81c:	00000017 	andeq	r0, r0, r7, lsl r0
     820:	0004681e 	andeq	r6, r4, lr, lsl r8
     824:	00310100 	eorseq	r0, r1, r0, lsl #2
     828:	0c200000 	stceq	0, cr0, [r0], #-0
     82c:	01000000 	mrseq	r0, (UNDEF: 0)
     830:	05ac009c 	streq	r0, [ip, #156]!	; 0x9c
     834:	00040000 	andeq	r0, r4, r0
     838:	00000194 	muleq	r0, r4, r1
     83c:	00840104 	addeq	r0, r4, r4, lsl #2
     840:	310c0000 	mrscc	r0, (UNDEF: 12)
     844:	68000005 	stmdavs	r0, {r0, r2}
     848:	48200006 	stmdami	r0!, {r1, r2}
     84c:	8b000007 	blhi	870 <startup-0x1ffff790>
     850:	02000001 	andeq	r0, r0, #1
     854:	420c0202 	andmi	r0, ip, #536870912	; 0x20000000
     858:	03000000 	movweq	r0, #0
     85c:	0000000d 	andeq	r0, r0, sp
     860:	00420d02 	subeq	r0, r2, r2, lsl #26
     864:	03000000 	movweq	r0, #0
     868:	000003ce 	andeq	r0, r0, lr, asr #7
     86c:	00420e02 	subeq	r0, r2, r2, lsl #28
     870:	00010000 	andeq	r0, r1, r0
     874:	b5080104 	strlt	r0, [r8, #-260]	; 0xfffffefc
     878:	05000002 	streq	r0, [r0, #-2]
     87c:	620a0204 	andvs	r0, sl, #4, 4	; 0x40000000
     880:	06000000 	streq	r0, [r0], -r0
     884:	00726469 	rsbseq	r6, r2, r9, ror #8
     888:	00620b02 	rsbeq	r0, r2, r2, lsl #22
     88c:	21070000 	mrscs	r0, (UNDEF: 7)
     890:	00000000 	andeq	r0, r0, r0
     894:	7c070404 	cfstrsvc	mvf0, [r7], {4}
     898:	02000003 	andeq	r0, r0, #3
     89c:	8a130202 	bhi	4c10ac <startup-0x1fb3ef54>
     8a0:	03000000 	movweq	r0, #0
     8a4:	000004a9 	andeq	r0, r0, r9, lsr #9
     8a8:	00421402 	subeq	r1, r2, r2, lsl #8
     8ac:	03000000 	movweq	r0, #0
     8b0:	0000007c 	andeq	r0, r0, ip, ror r0
     8b4:	00421502 	subeq	r1, r2, r2, lsl #10
     8b8:	00010000 	andeq	r0, r1, r0
     8bc:	11020405 	tstne	r2, r5, lsl #8
     8c0:	000000a3 	andeq	r0, r0, r3, lsr #1
     8c4:	72646f06 	rsbvc	r6, r4, #6, 30
     8c8:	62120200 	andsvs	r0, r2, #0, 4
     8cc:	07000000 	streq	r0, [r0, -r0]
     8d0:	00000069 	andeq	r0, r0, r9, rrx
     8d4:	031e0800 	tsteq	lr, #0, 16
     8d8:	02180000 	andseq	r0, r8, #0
     8dc:	0000ec04 	andeq	lr, r0, r4, lsl #24
     8e0:	04540300 	ldrbeq	r0, [r4], #-768	; 0xfffffd00
     8e4:	05020000 	streq	r0, [r2, #-0]
     8e8:	00000062 	andeq	r0, r0, r2, rrx
     8ec:	017f0300 	cmneq	pc, r0, lsl #6
     8f0:	06020000 	streq	r0, [r2], -r0
     8f4:	00000062 	andeq	r0, r0, r2, rrx
     8f8:	020e0304 	andeq	r0, lr, #4, 6	; 0x10000000
     8fc:	07020000 	streq	r0, [r2, -r0]
     900:	00000062 	andeq	r0, r0, r2, rrx
     904:	04350308 	ldrteq	r0, [r5], #-776	; 0xfffffcf8
     908:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
     90c:	00000062 	andeq	r0, r0, r2, rrx
     910:	0049090c 	subeq	r0, r9, ip, lsl #18
     914:	09100000 	ldmdbeq	r0, {}	; <UNPREDICTABLE>
     918:	0000008a 	andeq	r0, r0, sl, lsl #1
     91c:	890a0014 	stmdbhi	sl, {r2, r4}
     920:	02000003 	andeq	r0, r0, #3
     924:	0000a318 	andeq	sl, r0, r8, lsl r3
     928:	061a0a00 	ldreq	r0, [sl], -r0, lsl #20
     92c:	18030000 	stmdane	r3, {}	; <UNPREDICTABLE>
     930:	00000042 	andeq	r0, r0, r2, asr #32
     934:	00051b08 	andeq	r1, r5, r8, lsl #22
     938:	1a030200 	bne	c1140 <startup-0x1ff3eec0>
     93c:	00000123 	andeq	r0, r0, r3, lsr #2
     940:	0300780b 	movweq	r7, #2059	; 0x80b
     944:	0000f71b 	andeq	pc, r0, fp, lsl r7	; <UNPREDICTABLE>
     948:	790b0000 	stmdbvc	fp, {}	; <UNPREDICTABLE>
     94c:	f71c0300 			; <UNDEFINED> instruction: 0xf71c0300
     950:	01000000 	mrseq	r0, (UNDEF: 0)
     954:	05220a00 	streq	r0, [r2, #-2560]!	; 0xfffff600
     958:	1d030000 	stcne	0, cr0, [r3, #-0]
     95c:	00000102 	andeq	r0, r0, r2, lsl #2
     960:	0006100c 	andeq	r1, r6, ip
     964:	03020c00 	movweq	r0, #11264	; 0x2c00
     968:	00016b1f 	andeq	r6, r1, pc, lsl fp
     96c:	06ab0300 	strteq	r0, [fp], r0, lsl #6
     970:	20030000 	andcs	r0, r3, r0
     974:	0000016b 	andeq	r0, r0, fp, ror #2
     978:	04d20300 	ldrbeq	r0, [r2], #768	; 0x300
     97c:	21030000 	mrscs	r0, (UNDEF: 3)
     980:	0000016b 	andeq	r0, r0, fp, ror #2
     984:	04d90304 	ldrbeq	r0, [r9], #772	; 0x304
     988:	22030000 	andcs	r0, r3, #0
     98c:	0000016b 	andeq	r0, r0, fp, ror #2
     990:	78700b08 	ldmdavc	r0!, {r3, r8, r9, fp}^
     994:	72230300 	eorvc	r0, r3, #0, 6
     998:	0c000001 	stceq	0, cr0, [r0], {1}
     99c:	05040d00 	streq	r0, [r4, #-3328]	; 0xfffff300
     9a0:	00746e69 	rsbseq	r6, r4, r9, ror #28
     9a4:	0001230e 	andeq	r2, r1, lr, lsl #6
     9a8:	00018200 	andeq	r8, r1, r0, lsl #4
     9ac:	01820f00 	orreq	r0, r2, r0, lsl #30
     9b0:	00ff0000 	rscseq	r0, pc, r0
     9b4:	31070404 	tstcc	r7, r4, lsl #8
     9b8:	0a000001 	beq	9c4 <startup-0x1ffff63c>
     9bc:	000004c8 	andeq	r0, r0, r8, asr #9
     9c0:	01942403 	orrseq	r2, r4, r3, lsl #8
     9c4:	04100000 	ldreq	r0, [r0], #-0
     9c8:	0000012e 	andeq	r0, r0, lr, lsr #2
     9cc:	00069908 	andeq	r9, r6, r8, lsl #18
     9d0:	26032400 	strcs	r2, [r3], -r0, lsl #8
     9d4:	00000213 	andeq	r0, r0, r3, lsl r2
     9d8:	6f65670b 	svcvs	0x0065670b
     9dc:	89270300 	stmdbhi	r7!, {r8, r9}
     9e0:	00000001 	andeq	r0, r0, r1
     9e4:	00049d03 	andeq	r9, r4, r3, lsl #26
     9e8:	6b280300 	blvs	a015f0 <startup-0x1f5fea10>
     9ec:	04000001 	streq	r0, [r0], #-1
     9f0:	0004a303 	andeq	sl, r4, r3, lsl #6
     9f4:	6b280300 	blvs	a015fc <startup-0x1f5fea04>
     9f8:	08000001 	stmdaeq	r0, {r0}
     9fc:	0002ee03 	andeq	lr, r2, r3, lsl #28
     a00:	6b290300 	blvs	a41608 <startup-0x1f5be9f8>
     a04:	0c000001 	stceq	0, cr0, [r0], {1}
     a08:	00038e03 	andeq	r8, r3, r3, lsl #28
     a0c:	6b290300 	blvs	a41614 <startup-0x1f5be9ec>
     a10:	10000001 	andne	r0, r0, r1
     a14:	0003f703 	andeq	pc, r3, r3, lsl #14
     a18:	242a0300 	strtcs	r0, [sl], #-768	; 0xfffffd00
     a1c:	14000002 	strne	r0, [r0], #-2
     a20:	0005d103 	andeq	sp, r5, r3, lsl #2
     a24:	242b0300 	strtcs	r0, [fp], #-768	; 0xfffffd00
     a28:	18000002 	stmdane	r0, {r1}
     a2c:	0001dc03 	andeq	sp, r1, r3, lsl #24
     a30:	242c0300 	strtcs	r0, [ip], #-768	; 0xfffffd00
     a34:	1c000002 	stcne	0, cr0, [r0], {2}
     a38:	0003fc03 	andeq	pc, r3, r3, lsl #24
     a3c:	3f2d0300 	svccc	0x002d0300
     a40:	20000002 	andcs	r0, r0, r2
     a44:	021e1100 	andseq	r1, lr, #0, 2
     a48:	1e120000 	cdpne	0, 1, cr0, cr2, cr0, {0}
     a4c:	00000002 	andeq	r0, r0, r2
     a50:	019a0410 	orrseq	r0, sl, r0, lsl r4
     a54:	04100000 	ldreq	r0, [r0], #-0
     a58:	00000213 	andeq	r0, r0, r3, lsl r2
     a5c:	00023f11 	andeq	r3, r2, r1, lsl pc
     a60:	021e1200 	andseq	r1, lr, #0, 4
     a64:	6b120000 	blvs	480a6c <startup-0x1fb7f594>
     a68:	12000001 	andne	r0, r0, #1
     a6c:	0000016b 	andeq	r0, r0, fp, ror #2
     a70:	2a041000 	bcs	104a78 <startup-0x1fefb588>
     a74:	0a000002 	beq	a84 <startup-0x1ffff57c>
     a78:	000006d7 	ldrdeq	r0, [r0], -r7
     a7c:	021e2e03 	andseq	r2, lr, #3, 28	; 0x30
     a80:	22130000 	andscs	r0, r3, #0
     a84:	01000006 	tsteq	r0, r6
     a88:	0d90011c 	ldfeqs	f0, [r0, #112]	; 0x70
     a8c:	00202000 	eoreq	r2, r0, r0
     a90:	9c010000 	stcls	0, cr0, [r1], {-0}
     a94:	00066214 	andeq	r6, r6, r4, lsl r2
     a98:	01170100 	tsteq	r7, r0, lsl #2
     a9c:	20000d70 	andcs	r0, r0, r0, ror sp
     aa0:	00000020 	andeq	r0, r0, r0, lsr #32
     aa4:	02a29c01 	adceq	r9, r2, #256	; 0x100
     aa8:	aa150000 	bge	540ab0 <startup-0x1fabf550>
     aac:	01000009 	tsteq	r0, r9
     ab0:	02450117 	subeq	r0, r5, #-1073741819	; 0xc0000005
     ab4:	91020000 	mrsls	r0, (UNDEF: 2)
     ab8:	00781674 	rsbseq	r1, r8, r4, ror r6
     abc:	6b011701 	blvs	466c8 <startup-0x1ffb9938>
     ac0:	02000001 	andeq	r0, r0, #1
     ac4:	79167091 	ldmdbvc	r6, {r0, r4, r7, ip, sp, lr}
     ac8:	01170100 	tsteq	r7, r0, lsl #2
     acc:	0000016b 	andeq	r0, r0, fp, ror #2
     ad0:	006c9102 	rsbeq	r9, ip, r2, lsl #2
     ad4:	0006b517 	andeq	fp, r6, r7, lsl r5
     ad8:	01070100 	mrseq	r0, (UNDEF: 23)
     adc:	20000cf0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
     ae0:	00000080 	andeq	r0, r0, r0, lsl #1
     ae4:	02c89c01 	sbceq	r9, r8, #256	; 0x100
     ae8:	aa150000 	bge	540af0 <startup-0x1fabf510>
     aec:	01000009 	tsteq	r0, r9
     af0:	02450107 	subeq	r0, r5, #-1073741823	; 0xc0000001
     af4:	91020000 	mrsls	r0, (UNDEF: 2)
     af8:	8c170074 	ldchi	0, cr0, [r7], {116}	; 0x74
     afc:	01000006 	tsteq	r0, r6
     b00:	0c8c0101 	stfeqs	f0, [ip], {1}
     b04:	00642000 	rsbeq	r2, r4, r0
     b08:	9c010000 	stcls	0, cr0, [r1], {-0}
     b0c:	00000305 	andeq	r0, r0, r5, lsl #6
     b10:	0009aa15 	andeq	sl, r9, r5, lsl sl
     b14:	01010100 	mrseq	r0, (UNDEF: 17)
     b18:	00000245 	andeq	r0, r0, r5, asr #4
     b1c:	186c9102 	stmdane	ip!, {r1, r8, ip, pc}^
     b20:	20000c94 	mulcs	r0, r4, ip
     b24:	00000054 	andeq	r0, r0, r4, asr r0
     b28:	01006919 	tsteq	r0, r9, lsl r9
     b2c:	016b0102 	cmneq	fp, r2, lsl #2
     b30:	91020000 	mrsls	r0, (UNDEF: 2)
     b34:	1a000074 	bne	d0c <startup-0x1ffff2f4>
     b38:	000004e0 	andeq	r0, r0, r0, ror #9
     b3c:	0c28fb01 			; <UNDEFINED> instruction: 0x0c28fb01
     b40:	00642000 	rsbeq	r2, r4, r0
     b44:	9c010000 	stcls	0, cr0, [r1], {-0}
     b48:	0000033f 	andeq	r0, r0, pc, lsr r3
     b4c:	0009aa1b 	andeq	sl, r9, fp, lsl sl
     b50:	45fb0100 	ldrbmi	r0, [fp, #256]!	; 0x100
     b54:	02000002 	andeq	r0, r0, #2
     b58:	30186c91 	mulscc	r8, r1, ip
     b5c:	5420000c 	strtpl	r0, [r0], #-12
     b60:	1c000000 	stcne	0, cr0, [r0], {-0}
     b64:	fc010069 	stc2	0, cr0, [r1], {105}	; 0x69
     b68:	0000016b 	andeq	r0, r0, fp, ror #2
     b6c:	00749102 	rsbseq	r9, r4, r2, lsl #2
     b70:	05151a00 	ldreq	r1, [r5, #-2560]	; 0xfffff600
     b74:	c3010000 	movwgt	r0, #4096	; 0x1000
     b78:	20000a82 	andcs	r0, r0, r2, lsl #21
     b7c:	000001a6 	andeq	r0, r0, r6, lsr #3
     b80:	03c19c01 	biceq	r9, r1, #256	; 0x100
     b84:	781d0000 	ldmdavc	sp, {}	; <UNPREDICTABLE>
     b88:	f7c30100 			; <UNDEFINED> instruction: 0xf7c30100
     b8c:	02000000 	andeq	r0, r0, #0
     b90:	791d6791 	ldmdbvc	sp, {r0, r4, r7, r8, r9, sl, sp, lr}
     b94:	f7c30100 			; <UNDEFINED> instruction: 0xf7c30100
     b98:	02000000 	andeq	r0, r0, #0
     b9c:	731d6691 	tstvc	sp, #152043520	; 0x9100000
     ba0:	01007465 	tsteq	r0, r5, ror #8
     ba4:	0000f7c3 	andeq	pc, r0, r3, asr #15
     ba8:	65910200 	ldrvs	r0, [r1, #512]	; 0x200
     bac:	0006861e 	andeq	r8, r6, lr, lsl r6
     bb0:	f7cf0100 			; <UNDEFINED> instruction: 0xf7cf0100
     bb4:	02000000 	andeq	r0, r0, #0
     bb8:	4a1e6c91 	bmi	79be04 <startup-0x1f8641fc>
     bbc:	01000006 	tsteq	r0, r6
     bc0:	0000f7d1 	ldrdeq	pc, [r0], -r1
     bc4:	6f910200 	svcvs	0x00910200
     bc8:	0005281e 	andeq	r2, r5, lr, lsl r8
     bcc:	f7e30100 			; <UNDEFINED> instruction: 0xf7e30100
     bd0:	02000000 	andeq	r0, r0, #0
     bd4:	581e6e91 	ldmdapl	lr, {r0, r4, r7, r9, sl, fp, sp, lr}
     bd8:	01000007 	tsteq	r0, r7
     bdc:	0000f7e4 	andeq	pc, r0, r4, ror #15
     be0:	6d910200 	lfmvs	f0, 4, [r1]
     be4:	0005bb1e 	andeq	fp, r5, lr, lsl fp
     be8:	f7f00100 			; <UNDEFINED> instruction: 0xf7f00100
     bec:	02000000 	andeq	r0, r0, #0
     bf0:	1a006b91 	bne	1ba3c <startup-0x1ffe45c4>
     bf4:	000006df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
     bf8:	0a1cb801 	beq	72ec04 <startup-0x1f8d13fc>
     bfc:	00662000 	rsbeq	r2, r6, r0
     c00:	9c010000 	stcls	0, cr0, [r1], {-0}
     c04:	00000407 	andeq	r0, r0, r7, lsl #8
     c08:	000a2218 	andeq	r2, sl, r8, lsl r2
     c0c:	00005820 	andeq	r5, r0, r0, lsr #16
     c10:	05101e00 	ldreq	r1, [r0, #-3584]	; 0xfffff200
     c14:	b9010000 	stmdblt	r1, {}	; <UNPREDICTABLE>
     c18:	000000f7 	strdeq	r0, [r0], -r7
     c1c:	18779102 	ldmdane	r7!, {r1, r8, ip, pc}^
     c20:	20000a46 	andcs	r0, r0, r6, asr #20
     c24:	00000022 	andeq	r0, r0, r2, lsr #32
     c28:	6464611c 	strbtvs	r6, [r4], #-284	; 0xfffffee4
     c2c:	f7bd0100 			; <UNDEFINED> instruction: 0xf7bd0100
     c30:	02000000 	andeq	r0, r0, #0
     c34:	00007691 	muleq	r0, r1, r6
     c38:	05e81f00 	strbeq	r1, [r8, #3840]!	; 0xf00
     c3c:	a3010000 	movwge	r0, #4096	; 0x1000
     c40:	200009c0 	andcs	r0, r0, r0, asr #19
     c44:	0000005c 	andeq	r0, r0, ip, asr r0
     c48:	fe209c01 	cdp2	12, 2, cr9, cr0, cr1, {0}
     c4c:	01000004 	tsteq	r0, r4
     c50:	0000f79e 	muleq	r0, lr, r7
     c54:	00099600 	andeq	r9, r9, r0, lsl #12
     c58:	00002a20 	andeq	r2, r0, r0, lsr #20
     c5c:	409c0100 	addsmi	r0, ip, r0, lsl #2
     c60:	1b000004 	blne	c78 <startup-0x1ffff388>
     c64:	00000758 	andeq	r0, r0, r8, asr r7
     c68:	00f79e01 	rscseq	r9, r7, r1, lsl #28
     c6c:	91020000 	mrsls	r0, (UNDEF: 2)
     c70:	4f1a0077 	svcmi	0x001a0077
     c74:	01000006 	tsteq	r0, r6
     c78:	00095096 	muleq	r9, r6, r0
     c7c:	00004620 	andeq	r4, r0, r0, lsr #12
     c80:	729c0100 	addsvc	r0, ip, #0, 2
     c84:	1b000004 	blne	c9c <startup-0x1ffff364>
     c88:	0000050b 	andeq	r0, r0, fp, lsl #10
     c8c:	00f79601 	rscseq	r9, r7, r1, lsl #12
     c90:	91020000 	mrsls	r0, (UNDEF: 2)
     c94:	07581b77 			; <UNDEFINED> instruction: 0x07581b77
     c98:	96010000 	strls	r0, [r1], -r0
     c9c:	000000f7 	strdeq	r0, [r0], -r7
     ca0:	00769102 	rsbseq	r9, r6, r2, lsl #2
     ca4:	0006c11a 	andeq	ip, r6, sl, lsl r1
     ca8:	108f0100 	addne	r0, pc, r0, lsl #2
     cac:	40200009 	eormi	r0, r0, r9
     cb0:	01000000 	mrseq	r0, (UNDEF: 0)
     cb4:	0004a49c 	muleq	r4, ip, r4
     cb8:	06cf1b00 	strbeq	r1, [pc], r0, lsl #22
     cbc:	8f010000 	svchi	0x00010000
     cc0:	000000f7 	strdeq	r0, [r0], -r7
     cc4:	1b779102 	blne	1de50d4 <startup-0x1e21af2c>
     cc8:	00000758 	andeq	r0, r0, r8, asr r7
     ccc:	00f78f01 	rscseq	r8, r7, r1, lsl #30
     cd0:	91020000 	mrsls	r0, (UNDEF: 2)
     cd4:	ad1a0076 	ldcge	0, cr0, [sl, #-472]	; 0xfffffe28
     cd8:	01000005 	tsteq	r0, r5
     cdc:	00089073 	andeq	r9, r8, r3, ror r0
     ce0:	00008020 	andeq	r8, r0, r0, lsr #32
     ce4:	d69c0100 	ldrle	r0, [ip], r0, lsl #2
     ce8:	1b000004 	blne	d00 <startup-0x1ffff300>
     cec:	00000711 	andeq	r0, r0, r1, lsl r7
     cf0:	00f77301 	rscseq	r7, r7, r1, lsl #6
     cf4:	91020000 	mrsls	r0, (UNDEF: 2)
     cf8:	07581b77 			; <UNDEFINED> instruction: 0x07581b77
     cfc:	73010000 	movwvc	r0, #4096	; 0x1000
     d00:	000000f7 	strdeq	r0, [r0], -r7
     d04:	00769102 	rsbseq	r9, r6, r2, lsl #2
     d08:	00069e20 	andeq	r9, r6, r0, lsr #28
     d0c:	f7480100 			; <UNDEFINED> instruction: 0xf7480100
     d10:	00000000 	andeq	r0, r0, r0
     d14:	90200008 	eorls	r0, r0, r8
     d18:	01000000 	mrseq	r0, (UNDEF: 0)
     d1c:	00050b9c 	muleq	r5, ip, fp
     d20:	07581b00 	ldrbeq	r1, [r8, -r0, lsl #22]
     d24:	48010000 	stmdami	r1, {}	; <UNPREDICTABLE>
     d28:	000000f7 	strdeq	r0, [r0], -r7
     d2c:	1c6f9102 	stfnep	f1, [pc], #-8	; d2c <startup-0x1ffff2d4>
     d30:	01005652 	tsteq	r0, r2, asr r6
     d34:	0000f758 	andeq	pc, r0, r8, asr r7	; <UNPREDICTABLE>
     d38:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
     d3c:	06731a00 	ldrbteq	r1, [r3], -r0, lsl #20
     d40:	26010000 	strcs	r0, [r1], -r0
     d44:	2000078a 	andcs	r0, r0, sl, lsl #15
     d48:	00000076 	andeq	r0, r0, r6, ror r0
     d4c:	052f9c01 	streq	r9, [pc, #-3073]!	; 153 <startup-0x1ffffead>
     d50:	361e0000 	ldrcc	r0, [lr], -r0
     d54:	01000006 	tsteq	r0, r6
     d58:	0000f727 	andeq	pc, r0, r7, lsr #14
     d5c:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
     d60:	04ec1a00 	strbteq	r1, [ip], #2560	; 0xa00
     d64:	13010000 	movwne	r0, #4096	; 0x1000
     d68:	20000730 	andcs	r0, r0, r0, lsr r7
     d6c:	0000005a 	andeq	r0, r0, sl, asr r0
     d70:	05539c01 	ldrbeq	r9, [r3, #-3073]	; 0xfffff3ff
     d74:	581b0000 	ldmdapl	fp, {}	; <UNPREDICTABLE>
     d78:	01000007 	tsteq	r0, r7
     d7c:	0000f713 	andeq	pc, r0, r3, lsl r7	; <UNPREDICTABLE>
     d80:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
     d84:	05c02100 	strbeq	r2, [r0, #256]	; 0x100
     d88:	0b010000 	bleq	40d90 <startup-0x1ffbf270>
     d8c:	200006c8 	andcs	r0, r0, r8, asr #13
     d90:	00000068 	andeq	r0, r0, r8, rrx
     d94:	05839c01 	streq	r9, [r3, #3073]	; 0xc01
     d98:	781d0000 	ldmdavc	sp, {}	; <UNPREDICTABLE>
     d9c:	f70b0100 			; <UNDEFINED> instruction: 0xf70b0100
     da0:	02000000 	andeq	r0, r0, #0
     da4:	d71e6f91 			; <UNDEFINED> instruction: 0xd71e6f91
     da8:	01000005 	tsteq	r0, r5
     dac:	0000f70d 	andeq	pc, r0, sp, lsl #14
     db0:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
     db4:	05fb2200 	ldrbeq	r2, [fp, #512]!	; 0x200
     db8:	03010000 	movweq	r0, #4096	; 0x1000
     dbc:	20000668 	andcs	r0, r0, r8, ror #12
     dc0:	00000060 	andeq	r0, r0, r0, rrx
     dc4:	781d9c01 	ldmdavc	sp, {r0, sl, fp, ip, pc}
     dc8:	f7030100 			; <UNDEFINED> instruction: 0xf7030100
     dcc:	02000000 	andeq	r0, r0, #0
     dd0:	d71e6f91 			; <UNDEFINED> instruction: 0xd71e6f91
     dd4:	01000005 	tsteq	r0, r5
     dd8:	0000f705 	andeq	pc, r0, r5, lsl #14
     ddc:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
     de0:	035d0000 	cmpeq	sp, #0
     de4:	00040000 	andeq	r0, r4, r0
     de8:	000003a5 	andeq	r0, r0, r5, lsr #7
     dec:	00840104 	addeq	r0, r4, r4, lsl #2
     df0:	ab0c0000 	blge	300df8 <startup-0x1fcff208>
     df4:	b0000007 	andlt	r0, r0, r7
     df8:	ac20000d 	stcge	0, cr0, [r0], #-52	; 0xffffffcc
     dfc:	76000003 	strvc	r0, [r0], -r3
     e00:	02000003 	andeq	r0, r0, #3
     e04:	420c0202 	andmi	r0, ip, #536870912	; 0x20000000
     e08:	03000000 	movweq	r0, #0
     e0c:	0000000d 	andeq	r0, r0, sp
     e10:	00420d02 	subeq	r0, r2, r2, lsl #26
     e14:	03000000 	movweq	r0, #0
     e18:	000003ce 	andeq	r0, r0, lr, asr #7
     e1c:	00420e02 	subeq	r0, r2, r2, lsl #28
     e20:	00010000 	andeq	r0, r1, r0
     e24:	b5080104 	strlt	r0, [r8, #-260]	; 0xfffffefc
     e28:	05000002 	streq	r0, [r0, #-2]
     e2c:	620a0204 	andvs	r0, sl, #4, 4	; 0x40000000
     e30:	06000000 	streq	r0, [r0], -r0
     e34:	00726469 	rsbseq	r6, r2, r9, ror #8
     e38:	00620b02 	rsbeq	r0, r2, r2, lsl #22
     e3c:	21070000 	mrscs	r0, (UNDEF: 7)
     e40:	00000000 	andeq	r0, r0, r0
     e44:	7c070404 	cfstrsvc	mvf0, [r7], {4}
     e48:	02000003 	andeq	r0, r0, #3
     e4c:	8a130202 	bhi	4c165c <startup-0x1fb3e9a4>
     e50:	03000000 	movweq	r0, #0
     e54:	000004a9 	andeq	r0, r0, r9, lsr #9
     e58:	00421402 	subeq	r1, r2, r2, lsl #8
     e5c:	03000000 	movweq	r0, #0
     e60:	0000007c 	andeq	r0, r0, ip, ror r0
     e64:	00421502 	subeq	r1, r2, r2, lsl #10
     e68:	00010000 	andeq	r0, r1, r0
     e6c:	11020405 	tstne	r2, r5, lsl #8
     e70:	000000a3 	andeq	r0, r0, r3, lsr #1
     e74:	72646f06 	rsbvc	r6, r4, #6, 30
     e78:	62120200 	andsvs	r0, r2, #0, 4
     e7c:	07000000 	streq	r0, [r0, -r0]
     e80:	00000069 	andeq	r0, r0, r9, rrx
     e84:	031e0800 	tsteq	lr, #0, 16
     e88:	02180000 	andseq	r0, r8, #0
     e8c:	0000ec04 	andeq	lr, r0, r4, lsl #24
     e90:	04540300 	ldrbeq	r0, [r4], #-768	; 0xfffffd00
     e94:	05020000 	streq	r0, [r2, #-0]
     e98:	00000062 	andeq	r0, r0, r2, rrx
     e9c:	017f0300 	cmneq	pc, r0, lsl #6
     ea0:	06020000 	streq	r0, [r2], -r0
     ea4:	00000062 	andeq	r0, r0, r2, rrx
     ea8:	020e0304 	andeq	r0, lr, #4, 6	; 0x10000000
     eac:	07020000 	streq	r0, [r2, -r0]
     eb0:	00000062 	andeq	r0, r0, r2, rrx
     eb4:	04350308 	ldrteq	r0, [r5], #-776	; 0xfffffcf8
     eb8:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
     ebc:	00000062 	andeq	r0, r0, r2, rrx
     ec0:	0049090c 	subeq	r0, r9, ip, lsl #18
     ec4:	09100000 	ldmdbeq	r0, {}	; <UNPREDICTABLE>
     ec8:	0000008a 	andeq	r0, r0, sl, lsl #1
     ecc:	890a0014 	stmdbhi	sl, {r2, r4}
     ed0:	02000003 	andeq	r0, r0, #3
     ed4:	0000a318 	andeq	sl, r0, r8, lsl r3
     ed8:	03a50b00 			; <UNDEFINED> instruction: 0x03a50b00
     edc:	b5010000 	strlt	r0, [r1, #-0]
     ee0:	20001112 	andcs	r1, r0, r2, lsl r1
     ee4:	0000004a 	andeq	r0, r0, sl, asr #32
     ee8:	011b9c01 	tsteq	fp, r1, lsl #24
     eec:	970c0000 	strls	r0, [ip, -r0]
     ef0:	01000007 	tsteq	r0, r7
     ef4:	00011bb6 			; <UNDEFINED> instruction: 0x00011bb6
     ef8:	50910200 	addspl	r0, r1, r0, lsl #4
     efc:	01320d00 	teqeq	r2, r0, lsl #26
     f00:	012b0000 			; <UNDEFINED> instruction: 0x012b0000
     f04:	2b0e0000 	blcs	380f0c <startup-0x1fc7f0f4>
     f08:	1e000001 	cdpne	0, 0, cr0, cr0, cr1, {0}
     f0c:	07040400 	streq	r0, [r4, -r0, lsl #8]
     f10:	00000131 	andeq	r0, r0, r1, lsr r1
     f14:	be080104 	adflte	f0, f0, f4
     f18:	0b000002 	bleq	f28 <startup-0x1ffff0d8>
     f1c:	000001c9 	andeq	r0, r0, r9, asr #3
     f20:	10eaae01 	rscne	sl, sl, r1, lsl #28
     f24:	00282000 	eoreq	r2, r8, r0
     f28:	9c010000 	stcls	0, cr0, [r1], {-0}
     f2c:	0000015b 	andeq	r0, r0, fp, asr r1
     f30:	0100730f 	tsteq	r0, pc, lsl #6
     f34:	00015bae 	andeq	r5, r1, lr, lsr #23
     f38:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     f3c:	32041000 	andcc	r1, r4, #0
     f40:	0b000001 	bleq	f4c <startup-0x1ffff0b4>
     f44:	00000186 	andeq	r0, r0, r6, lsl #3
     f48:	10829a01 	addne	r9, r2, r1, lsl #20
     f4c:	00682000 	rsbeq	r2, r8, r0
     f50:	9c010000 	stcls	0, cr0, [r1], {-0}
     f54:	000001a1 	andeq	r0, r0, r1, lsr #3
     f58:	776f720f 	strbvc	r7, [pc, -pc, lsl #4]!
     f5c:	629a0100 	addsvs	r0, sl, #0, 2
     f60:	02000000 	andeq	r0, r0, #0
     f64:	fe116c91 	mrc2	12, 0, r6, cr1, cr1, {4}
     f68:	01000006 	tsteq	r0, r6
     f6c:	0000629a 	muleq	r0, sl, r2
     f70:	68910200 	ldmvs	r1, {r9}
     f74:	00078f0c 	andeq	r8, r7, ip, lsl #30
     f78:	42a50100 	adcmi	r0, r5, #0, 2
     f7c:	02000000 	andeq	r0, r0, #0
     f80:	0b007791 	bleq	1edcc <startup-0x1ffe1234>
     f84:	00000861 	andeq	r0, r0, r1, ror #16
     f88:	103e8a01 	eorsne	r8, lr, r1, lsl #20
     f8c:	00442000 	subeq	r2, r4, r0
     f90:	9c010000 	stcls	0, cr0, [r1], {-0}
     f94:	000001c5 	andeq	r0, r0, r5, asr #3
     f98:	0006f411 	andeq	pc, r6, r1, lsl r4	; <UNPREDICTABLE>
     f9c:	428a0100 	addmi	r0, sl, #0, 2
     fa0:	02000000 	andeq	r0, r0, #0
     fa4:	0b007791 	bleq	1edf0 <startup-0x1ffe1210>
     fa8:	0000079d 	muleq	r0, sp, r7
     fac:	0fe87a01 	svceq	0x00e87a01
     fb0:	00562000 	subseq	r2, r6, r0
     fb4:	9c010000 	stcls	0, cr0, [r1], {-0}
     fb8:	00000204 	andeq	r0, r0, r4, lsl #4
     fbc:	0006cf11 	andeq	ip, r6, r1, lsl pc
     fc0:	427a0100 	rsbsmi	r0, sl, #0, 2
     fc4:	02000000 	andeq	r0, r0, #0
     fc8:	29117791 	ldmdbcs	r1, {r0, r4, r7, r8, r9, sl, ip, sp, lr}
     fcc:	01000007 	tsteq	r0, r7
     fd0:	0000627a 	andeq	r6, r0, sl, ror r2
     fd4:	70910200 	addsvc	r0, r1, r0, lsl #4
     fd8:	0073750f 	rsbseq	r7, r3, pc, lsl #10
     fdc:	02047a01 	andeq	r7, r4, #4096	; 0x1000
     fe0:	91020000 	mrsls	r0, (UNDEF: 2)
     fe4:	02040074 	andeq	r0, r4, #116	; 0x74
     fe8:	00037607 	andeq	r7, r3, r7, lsl #12
     fec:	074d1200 	strbeq	r1, [sp, -r0, lsl #4]
     ff0:	68010000 	stmdavs	r1, {}	; <UNPREDICTABLE>
     ff4:	00000042 	andeq	r0, r0, r2, asr #32
     ff8:	20000fb8 			; <UNDEFINED> instruction: 0x20000fb8
     ffc:	00000030 	andeq	r0, r0, r0, lsr r0
    1000:	02339c01 	eorseq	r9, r3, #256	; 0x100
    1004:	0a0c0000 	beq	30100c <startup-0x1fcfeff4>
    1008:	01000007 	tsteq	r0, r7
    100c:	00004269 	andeq	r4, r0, r9, ror #4
    1010:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    1014:	084a0b00 	stmdaeq	sl, {r8, r9, fp}^
    1018:	5a010000 	bpl	41020 <startup-0x1ffbefe0>
    101c:	20000f88 	andcs	r0, r0, r8, lsl #31
    1020:	00000030 	andeq	r0, r0, r0, lsr r0
    1024:	02579c01 	subseq	r9, r7, #256	; 0x100
    1028:	05110000 	ldreq	r0, [r1, #-0]
    102c:	01000007 	tsteq	r0, r7
    1030:	0000425a 	andeq	r4, r0, sl, asr r2
    1034:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    1038:	07171200 	ldreq	r1, [r7, -r0, lsl #4]
    103c:	48010000 	stmdami	r1, {}	; <UNPREDICTABLE>
    1040:	00000042 	andeq	r0, r0, r2, asr #32
    1044:	20000f40 	andcs	r0, r0, r0, asr #30
    1048:	00000048 	andeq	r0, r0, r8, asr #32
    104c:	027f9c01 	rsbseq	r9, pc, #256	; 0x100
    1050:	0a0c0000 	beq	301058 <startup-0x1fcfefa8>
    1054:	01000007 	tsteq	r0, r7
    1058:	00004249 	andeq	r4, r0, r9, asr #4
    105c:	6f910200 	svcvs	0x00910200
    1060:	083a1200 	ldmdaeq	sl!, {r9, ip}
    1064:	37010000 	strcc	r0, [r1, -r0]
    1068:	00000042 	andeq	r0, r0, r2, asr #32
    106c:	20000ef8 	strdcs	r0, [r0], -r8
    1070:	00000048 	andeq	r0, r0, r8, asr #32
    1074:	02a79c01 	adceq	r9, r7, #256	; 0x100
    1078:	0a0c0000 	beq	301080 <startup-0x1fcfef80>
    107c:	01000007 	tsteq	r0, r7
    1080:	00004238 	andeq	r4, r0, r8, lsr r2
    1084:	6f910200 	svcvs	0x00910200
    1088:	073c0b00 	ldreq	r0, [ip, -r0, lsl #22]!
    108c:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    1090:	20000ece 	andcs	r0, r0, lr, asr #29
    1094:	0000002a 	andeq	r0, r0, sl, lsr #32
    1098:	02cb9c01 	sbceq	r9, fp, #256	; 0x100
    109c:	0b110000 	bleq	4410a4 <startup-0x1fbbef5c>
    10a0:	01000005 	tsteq	r0, r5
    10a4:	0000422e 	andeq	r4, r0, lr, lsr #4
    10a8:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    10ac:	077f0b00 	ldrbeq	r0, [pc, -r0, lsl #22]!
    10b0:	25010000 	strcs	r0, [r1, #-0]
    10b4:	20000ea4 	andcs	r0, r0, r4, lsr #29
    10b8:	0000002a 	andeq	r0, r0, sl, lsr #32
    10bc:	02ef9c01 	rsceq	r9, pc, #256	; 0x100
    10c0:	cf110000 	svcgt	0x00110000
    10c4:	01000006 	tsteq	r0, r6
    10c8:	00004225 	andeq	r4, r0, r5, lsr #4
    10cc:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    10d0:	08251300 	stmdaeq	r5!, {r8, r9, ip}
    10d4:	1c010000 	stcne	0, cr0, [r1], {-0}
    10d8:	20000e44 	andcs	r0, r0, r4, asr #28
    10dc:	00000060 	andeq	r0, r0, r0, rrx
    10e0:	031f9c01 	tsteq	pc, #256	; 0x100
    10e4:	780f0000 	stmdavc	pc, {}	; <UNPREDICTABLE>
    10e8:	421c0100 	andsmi	r0, ip, #0, 2
    10ec:	02000000 	andeq	r0, r0, #0
    10f0:	760c6f91 			; <UNDEFINED> instruction: 0x760c6f91
    10f4:	01000007 	tsteq	r0, r7
    10f8:	0000421f 	andeq	r4, r0, pc, lsl r2
    10fc:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    1100:	07631300 	strbeq	r1, [r3, -r0, lsl #6]!
    1104:	14010000 	strne	r0, [r1], #-0
    1108:	20000df0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
    110c:	00000054 	andeq	r0, r0, r4, asr r0
    1110:	034f9c01 	movteq	r9, #64513	; 0xfc01
    1114:	780f0000 	stmdavc	pc, {}	; <UNPREDICTABLE>
    1118:	42140100 	andsmi	r0, r4, #0, 2
    111c:	02000000 	andeq	r0, r0, #0
    1120:	760c6f91 			; <UNDEFINED> instruction: 0x760c6f91
    1124:	01000007 	tsteq	r0, r7
    1128:	00004217 	andeq	r4, r0, r7, lsl r2
    112c:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    1130:	02361400 	eorseq	r1, r6, #0, 8
    1134:	03010000 	movweq	r0, #4096	; 0x1000
    1138:	20000db0 			; <UNDEFINED> instruction: 0x20000db0
    113c:	00000040 	andeq	r0, r0, r0, asr #32
    1140:	cf009c01 	svcgt	0x00009c01
    1144:	04000001 	streq	r0, [r0], #-1
    1148:	0004d400 	andeq	sp, r4, r0, lsl #8
    114c:	84010400 	strhi	r0, [r1], #-1024	; 0xfffffc00
    1150:	0c000000 	stceq	0, cr0, [r0], {-0}
    1154:	0000087e 	andeq	r0, r0, lr, ror r8
    1158:	2000115c 	andcs	r1, r0, ip, asr r1
    115c:	00000178 	andeq	r0, r0, r8, ror r1
    1160:	000004a7 	andeq	r0, r0, r7, lsr #9
    1164:	0c020202 	sfmeq	f0, 4, [r2], {2}
    1168:	00000042 	andeq	r0, r0, r2, asr #32
    116c:	00000d03 	andeq	r0, r0, r3, lsl #26
    1170:	420d0200 	andmi	r0, sp, #0, 4
    1174:	00000000 	andeq	r0, r0, r0
    1178:	0003ce03 	andeq	ip, r3, r3, lsl #28
    117c:	420e0200 	andmi	r0, lr, #0, 4
    1180:	01000000 	mrseq	r0, (UNDEF: 0)
    1184:	08010400 	stmdaeq	r1, {sl}
    1188:	000002b5 			; <UNDEFINED> instruction: 0x000002b5
    118c:	0a020405 	beq	821a8 <startup-0x1ff7de58>
    1190:	00000062 	andeq	r0, r0, r2, rrx
    1194:	72646906 	rsbvc	r6, r4, #98304	; 0x18000
    1198:	620b0200 	andvs	r0, fp, #0, 4
    119c:	07000000 	streq	r0, [r0, -r0]
    11a0:	00000021 	andeq	r0, r0, r1, lsr #32
    11a4:	07040400 	streq	r0, [r4, -r0, lsl #8]
    11a8:	0000037c 	andeq	r0, r0, ip, ror r3
    11ac:	13020202 	movwne	r0, #8706	; 0x2202
    11b0:	0000008a 	andeq	r0, r0, sl, lsl #1
    11b4:	0004a903 	andeq	sl, r4, r3, lsl #18
    11b8:	42140200 	andsmi	r0, r4, #0, 4
    11bc:	00000000 	andeq	r0, r0, r0
    11c0:	00007c03 	andeq	r7, r0, r3, lsl #24
    11c4:	42150200 	andsmi	r0, r5, #0, 4
    11c8:	01000000 	mrseq	r0, (UNDEF: 0)
    11cc:	02040500 	andeq	r0, r4, #0, 10
    11d0:	0000a311 	andeq	sl, r0, r1, lsl r3
    11d4:	646f0600 	strbtvs	r0, [pc], #-1536	; 11dc <startup-0x1fffee24>
    11d8:	12020072 	andne	r0, r2, #114	; 0x72
    11dc:	00000062 	andeq	r0, r0, r2, rrx
    11e0:	00006907 	andeq	r6, r0, r7, lsl #18
    11e4:	1e080000 	cdpne	0, 0, cr0, cr8, cr0, {0}
    11e8:	18000003 	stmdane	r0, {r0, r1}
    11ec:	00ec0402 	rsceq	r0, ip, r2, lsl #8
    11f0:	54030000 	strpl	r0, [r3], #-0
    11f4:	02000004 	andeq	r0, r0, #4
    11f8:	00006205 	andeq	r6, r0, r5, lsl #4
    11fc:	7f030000 	svcvc	0x00030000
    1200:	02000001 	andeq	r0, r0, #1
    1204:	00006206 	andeq	r6, r0, r6, lsl #4
    1208:	0e030400 	cfcpyseq	mvf0, mvf3
    120c:	02000002 	andeq	r0, r0, #2
    1210:	00006207 	andeq	r6, r0, r7, lsl #4
    1214:	35030800 	strcc	r0, [r3, #-2048]	; 0xfffff800
    1218:	02000004 	andeq	r0, r0, #4
    121c:	00006208 	andeq	r6, r0, r8, lsl #4
    1220:	49090c00 	stmdbmi	r9, {sl, fp}
    1224:	10000000 	andne	r0, r0, r0
    1228:	00008a09 	andeq	r8, r0, r9, lsl #20
    122c:	0a001400 	beq	6234 <startup-0x1fff9dcc>
    1230:	00000389 	andeq	r0, r0, r9, lsl #7
    1234:	00a31802 	adceq	r1, r3, r2, lsl #16
    1238:	420b0000 	andmi	r0, fp, #0
    123c:	0d000000 	stceq	0, cr0, [r0, #-0]
    1240:	0c000001 	stceq	0, cr0, [r0], {1}
    1244:	0000010d 	andeq	r0, r0, sp, lsl #2
    1248:	010d0c03 	tsteq	sp, r3, lsl #24
    124c:	00030000 	andeq	r0, r3, r0
    1250:	31070404 	tstcc	r7, r4, lsl #8
    1254:	0d000001 	stceq	0, cr0, [r0, #-4]
    1258:	0079656b 	rsbseq	r6, r9, fp, ror #10
    125c:	00f70603 	rscseq	r0, r7, r3, lsl #12
    1260:	03050000 	movweq	r0, #20480	; 0x5000
    1264:	200016d4 	ldrdcs	r1, [r0], -r4
    1268:	0008f20e 	andeq	pc, r8, lr, lsl #4
    126c:	4b280100 	blmi	a01674 <startup-0x1f5fe98c>
    1270:	80000001 	andhi	r0, r0, r1
    1274:	54200012 	strtpl	r0, [r0], #-18	; 0xffffffee
    1278:	01000000 	mrseq	r0, (UNDEF: 0)
    127c:	00014b9c 	muleq	r1, ip, fp
    1280:	00630d00 	rsbeq	r0, r3, r0, lsl #26
    1284:	00422a01 	subeq	r2, r2, r1, lsl #20
    1288:	91020000 	mrsls	r0, (UNDEF: 2)
    128c:	040f0077 	streq	r0, [pc], #-119	; 1294 <startup-0x1fffed6c>
    1290:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    1294:	08721000 	ldmdaeq	r2!, {ip}^
    1298:	1e010000 	cdpne	0, 0, cr0, cr1, cr0, {0}
    129c:	20001228 	andcs	r1, r0, r8, lsr #4
    12a0:	00000058 	andeq	r0, r0, r8, asr r0
    12a4:	01769c01 	cmneq	r6, r1, lsl #24
    12a8:	72110000 	andsvc	r0, r1, #0
    12ac:	0100776f 	tsteq	r0, pc, ror #14
    12b0:	0000421e 	andeq	r4, r0, lr, lsl r2
    12b4:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    12b8:	02161200 	andseq	r1, r6, #0, 4
    12bc:	0d010000 	stceq	0, cr0, [r1, #-0]
    12c0:	00000042 	andeq	r0, r0, r2, asr #32
    12c4:	200011bc 			; <UNDEFINED> instruction: 0x200011bc
    12c8:	0000006c 	andeq	r0, r0, ip, rrx
    12cc:	01c19c01 	biceq	r9, r1, r1, lsl #24
    12d0:	72130000 	andsvc	r0, r3, #0
    12d4:	0100776f 	tsteq	r0, pc, ror #14
    12d8:	0000420e 	andeq	r4, r0, lr, lsl #4
    12dc:	06fe1400 	ldrbteq	r1, [lr], r0, lsl #8
    12e0:	0e010000 	cdpeq	0, 0, cr0, cr1, cr0, {0}
    12e4:	00000042 	andeq	r0, r0, r2, asr #32
    12e8:	15769102 	ldrbne	r9, [r6, #-258]!	; 0xfffffefe
    12ec:	200011c2 	andcs	r1, r0, r2, asr #3
    12f0:	00000052 	andeq	r0, r0, r2, asr r0
    12f4:	776f720d 	strbvc	r7, [pc, -sp, lsl #4]!
    12f8:	42100100 	andsmi	r0, r0, #0, 2
    12fc:	02000000 	andeq	r0, r0, #0
    1300:	00007791 	muleq	r0, r1, r7
    1304:	00036816 	andeq	r6, r3, r6, lsl r8
    1308:	5c030100 	stfpls	f0, [r3], {-0}
    130c:	60200011 	eorvs	r0, r0, r1, lsl r0
    1310:	01000000 	mrseq	r0, (UNDEF: 0)
    1314:	03a4009c 			; <UNDEFINED> instruction: 0x03a4009c
    1318:	00040000 	andeq	r0, r4, r0
    131c:	0000061d 	andeq	r0, r0, sp, lsl r6
    1320:	00840104 	addeq	r0, r4, r4, lsl #2
    1324:	300c0000 	andcc	r0, ip, r0
    1328:	d4000009 	strle	r0, [r0], #-9
    132c:	76200012 			; <UNDEFINED> instruction: 0x76200012
    1330:	ac000002 	stcge	0, cr0, [r0], {2}
    1334:	02000005 	andeq	r0, r0, #5
    1338:	02b50801 	adcseq	r0, r5, #65536	; 0x10000
    133c:	04020000 	streq	r0, [r2], #-0
    1340:	00037c07 	andeq	r7, r3, r7, lsl #24
    1344:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
    1348:	00746e69 	rsbseq	r6, r4, r9, ror #28
    134c:	31070402 	tstcc	r7, r2, lsl #8
    1350:	04000001 	streq	r0, [r0], #-1
    1354:	00000021 	andeq	r0, r0, r1, lsr #32
    1358:	0000004d 	andeq	r0, r0, sp, asr #32
    135c:	00003605 	andeq	r3, r0, r5, lsl #12
    1360:	06001f00 	streq	r1, [r0], -r0, lsl #30
    1364:	000002ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    1368:	003d0302 	eorseq	r0, sp, r2, lsl #6
    136c:	03050000 	movweq	r0, #20480	; 0x5000
    1370:	200016e4 	andcs	r1, r0, r4, ror #13
    1374:	00015c06 	andeq	r5, r1, r6, lsl #24
    1378:	3d030300 	stccc	3, cr0, [r3, #-0]
    137c:	05000000 	streq	r0, [r0, #-0]
    1380:	00170403 	andseq	r0, r7, r3, lsl #8
    1384:	03e10620 	mvneq	r0, #32, 12	; 0x2000000
    1388:	03040000 	movweq	r0, #16384	; 0x4000
    138c:	0000003d 	andeq	r0, r0, sp, lsr r0
    1390:	17240305 	strne	r0, [r4, -r5, lsl #6]!
    1394:	2e072000 	cdpcs	0, 0, cr2, cr7, cr0, {0}
    1398:	08000002 	stmdaeq	r0, {r1}
    139c:	00b10905 	adcseq	r0, r1, r5, lsl #18
    13a0:	c3080000 	movwgt	r0, #32768	; 0x8000
    13a4:	05000001 	streq	r0, [r0, #-1]
    13a8:	0000210a 	andeq	r2, r0, sl, lsl #2
    13ac:	0a080000 	beq	2013b4 <startup-0x1fdfec4c>
    13b0:	05000003 	streq	r0, [r0, #-3]
    13b4:	0000210b 	andeq	r2, r0, fp, lsl #2
    13b8:	0b080100 	bleq	2017c0 <startup-0x1fdfe840>
    13bc:	05000005 	streq	r0, [r0, #-5]
    13c0:	0000b10c 	andeq	fp, r0, ip, lsl #2
    13c4:	09000400 	stmdbeq	r0, {sl}
    13c8:	00002104 	andeq	r2, r0, r4, lsl #2
    13cc:	02270a00 	eoreq	r0, r7, #0, 20
    13d0:	0d050000 	stceq	0, cr0, [r5, #-0]
    13d4:	00000080 	andeq	r0, r0, r0, lsl #1
    13d8:	0002260a 	andeq	r2, r2, sl, lsl #12
    13dc:	cd0d0500 	cfstr32gt	mvfx0, [sp, #-0]
    13e0:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    13e4:	00008004 	andeq	r8, r0, r4
    13e8:	03d60700 	bicseq	r0, r6, #0, 14
    13ec:	05240000 	streq	r0, [r4, #-0]!
    13f0:	00014c0f 	andeq	r4, r1, pc, lsl #24
    13f4:	04630800 	strbteq	r0, [r3], #-2048	; 0xfffff800
    13f8:	10050000 	andne	r0, r5, r0
    13fc:	000000c2 	andeq	r0, r0, r2, asr #1
    1400:	049d0800 	ldreq	r0, [sp], #2048	; 0x800
    1404:	11050000 	mrsne	r0, (UNDEF: 5)
    1408:	0000002f 	andeq	r0, r0, pc, lsr #32
    140c:	04a30804 	strteq	r0, [r3], #2052	; 0x804
    1410:	11050000 	mrsne	r0, (UNDEF: 5)
    1414:	0000002f 	andeq	r0, r0, pc, lsr #32
    1418:	02ee0808 	rsceq	r0, lr, #8, 16	; 0x80000
    141c:	12050000 	andne	r0, r5, #0
    1420:	0000002f 	andeq	r0, r0, pc, lsr #32
    1424:	038e080c 	orreq	r0, lr, #12, 16	; 0xc0000
    1428:	12050000 	andne	r0, r5, #0
    142c:	0000002f 	andeq	r0, r0, pc, lsr #32
    1430:	03f70810 	mvnseq	r0, #16, 16	; 0x100000
    1434:	13050000 	movwne	r0, #20480	; 0x5000
    1438:	0000015d 	andeq	r0, r0, sp, asr r1
    143c:	05d10814 	ldrbeq	r0, [r1, #2068]	; 0x814
    1440:	14050000 	strne	r0, [r5], #-0
    1444:	0000015d 	andeq	r0, r0, sp, asr r1
    1448:	01dc0818 	bicseq	r0, ip, r8, lsl r8
    144c:	15050000 	strne	r0, [r5, #-0]
    1450:	0000015d 	andeq	r0, r0, sp, asr r1
    1454:	03fc081c 	mvnseq	r0, #28, 16	; 0x1c0000
    1458:	16050000 	strne	r0, [r5], -r0
    145c:	00000178 	andeq	r0, r0, r8, ror r1
    1460:	570b0020 	strpl	r0, [fp, -r0, lsr #32]
    1464:	0c000001 	stceq	0, cr0, [r0], {1}
    1468:	00000157 	andeq	r0, r0, r7, asr r1
    146c:	d3040900 	movwle	r0, #18688	; 0x4900
    1470:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    1474:	00014c04 	andeq	r4, r1, r4, lsl #24
    1478:	01780b00 	cmneq	r8, r0, lsl #22
    147c:	570c0000 	strpl	r0, [ip, -r0]
    1480:	0c000001 	stceq	0, cr0, [r0], {1}
    1484:	0000002f 	andeq	r0, r0, pc, lsr #32
    1488:	00002f0c 	andeq	r2, r0, ip, lsl #30
    148c:	04090000 	streq	r0, [r9], #-0
    1490:	00000163 	andeq	r0, r0, r3, ror #2
    1494:	0002df0a 	andeq	sp, r2, sl, lsl #30
    1498:	57170500 	ldrpl	r0, [r7, -r0, lsl #10]
    149c:	0d000001 	stceq	0, cr0, [r0, #-4]
    14a0:	0000099c 	muleq	r0, ip, r9
    14a4:	151c4b01 	ldrne	r4, [ip, #-2817]	; 0xfffff4ff
    14a8:	002e2000 	eoreq	r2, lr, r0
    14ac:	9c010000 	stcls	0, cr0, [r1], {-0}
    14b0:	000001ad 	andeq	r0, r0, sp, lsr #3
    14b4:	6a626f0e 	bvs	189d0f4 <startup-0x1e762f0c>
    14b8:	7e4b0100 	dvfvce	f0, f3, f0
    14bc:	02000001 	andeq	r0, r0, #1
    14c0:	0f007491 	svceq	0x00007491
    14c4:	000008fd 	strdeq	r0, [r0], -sp
    14c8:	15084701 	strne	r4, [r8, #-1793]	; 0xfffff8ff
    14cc:	00142000 	andseq	r2, r4, r0
    14d0:	9c010000 	stcls	0, cr0, [r1], {-0}
    14d4:	000001e7 	andeq	r0, r0, r7, ror #3
    14d8:	0100700e 	tsteq	r0, lr
    14dc:	00017e47 	andeq	r7, r1, r7, asr #28
    14e0:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    14e4:	0100780e 	tsteq	r0, lr, lsl #16
    14e8:	00002f47 	andeq	r2, r0, r7, asr #30
    14ec:	70910200 	addsvc	r0, r1, r0, lsl #4
    14f0:	0100790e 	tsteq	r0, lr, lsl #18
    14f4:	00002f47 	andeq	r2, r0, r7, asr #30
    14f8:	6c910200 	lfmvs	f0, 4, [r1], {0}
    14fc:	09200f00 	stmdbeq	r0!, {r8, r9, sl, fp}
    1500:	43010000 	movwmi	r0, #4096	; 0x1000
    1504:	200014f8 	strdcs	r1, [r0], -r8
    1508:	00000010 	andeq	r0, r0, r0, lsl r0
    150c:	02099c01 	andeq	r9, r9, #256	; 0x100
    1510:	700e0000 	andvc	r0, lr, r0
    1514:	7e430100 	dvfvcs	f0, f3, f0
    1518:	02000001 	andeq	r0, r0, #1
    151c:	0f007491 	svceq	0x00007491
    1520:	00000984 	andeq	r0, r0, r4, lsl #19
    1524:	14d83e01 	ldrbne	r3, [r8], #3585	; 0xe01
    1528:	00202000 	eoreq	r2, r0, r0
    152c:	9c010000 	stcls	0, cr0, [r1], {-0}
    1530:	00000243 	andeq	r0, r0, r3, asr #4
    1534:	0100700e 	tsteq	r0, lr
    1538:	00017e3e 	andeq	r7, r1, lr, lsr lr
    153c:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    1540:	0100780e 	tsteq	r0, lr, lsl #16
    1544:	00002f3e 	andeq	r2, r0, lr, lsr pc
    1548:	70910200 	addsvc	r0, r1, r0, lsl #4
    154c:	0100790e 	tsteq	r0, lr, lsl #18
    1550:	00002f3e 	andeq	r2, r0, lr, lsr pc
    1554:	6c910200 	lfmvs	f0, 4, [r1], {0}
    1558:	090d0d00 	stmdbeq	sp, {r8, sl, fp}
    155c:	26010000 	strcs	r0, [r1], -r0
    1560:	2000141e 	andcs	r1, r0, lr, lsl r4
    1564:	000000ba 	strheq	r0, [r0], -sl
    1568:	02659c01 	rsbeq	r9, r5, #256	; 0x100
    156c:	700e0000 	andvc	r0, lr, r0
    1570:	7e260100 	sufvcs	f0, f6, f0
    1574:	02000001 	andeq	r0, r0, #1
    1578:	0d007491 	cfstrseq	mvf7, [r0, #-580]	; 0xfffffdbc
    157c:	000009eb 	andeq	r0, r0, fp, ror #19
    1580:	13fc2201 	mvnsne	r2, #268435456	; 0x10000000
    1584:	00222000 	eoreq	r2, r2, r0
    1588:	9c010000 	stcls	0, cr0, [r1], {-0}
    158c:	00000287 	andeq	r0, r0, r7, lsl #5
    1590:	0100700e 	tsteq	r0, lr
    1594:	00017e22 	andeq	r7, r1, r2, lsr #28
    1598:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    159c:	09d80d00 	ldmibeq	r8, {r8, sl, fp}^
    15a0:	1e010000 	cdpne	0, 0, cr0, cr1, cr0, {0}
    15a4:	200013da 	ldrdcs	r1, [r0], -sl
    15a8:	00000022 	andeq	r0, r0, r2, lsr #32
    15ac:	02a99c01 	adceq	r9, r9, #256	; 0x100
    15b0:	700e0000 	andvc	r0, lr, r0
    15b4:	7e1e0100 	mufvce	f0, f6, f0
    15b8:	02000001 	andeq	r0, r0, #1
    15bc:	0d007491 	cfstrseq	mvf7, [r0, #-580]	; 0xfffffdbc
    15c0:	000009b1 			; <UNDEFINED> instruction: 0x000009b1
    15c4:	13000901 	movwne	r0, #2305	; 0x901
    15c8:	00da2000 	sbcseq	r2, sl, r0
    15cc:	9c010000 	stcls	0, cr0, [r1], {-0}
    15d0:	00000359 	andeq	r0, r0, r9, asr r3
    15d4:	0100730e 	tsteq	r0, lr, lsl #6
    15d8:	00035909 	andeq	r5, r3, r9, lsl #18
    15dc:	5c910200 	lfmpl	f0, 4, [r1], {0}
    15e0:	0100780e 	tsteq	r0, lr, lsl #16
    15e4:	00002f09 	andeq	r2, r0, r9, lsl #30
    15e8:	58910200 	ldmpl	r1, {r9}
    15ec:	0100790e 	tsteq	r0, lr, lsl #18
    15f0:	00002f09 	andeq	r2, r0, r9, lsl #30
    15f4:	54910200 	ldrpl	r0, [r1], #512	; 0x200
    15f8:	7465730e 	strbtvc	r7, [r5], #-782	; 0xfffffcf2
    15fc:	2f090100 	svccs	0x00090100
    1600:	02000000 	andeq	r0, r0, #0
    1604:	bd065091 	stclt	0, cr5, [r6, #-580]	; 0xfffffdbc
    1608:	01000009 	tsteq	r0, r9
    160c:	00002f0a 	andeq	r2, r0, sl, lsl #30
    1610:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    1614:	00133410 	andseq	r3, r3, r0, lsl r4
    1618:	00009e20 	andeq	r9, r0, r0, lsr #28
    161c:	00691100 	rsbeq	r1, r9, r0, lsl #2
    1620:	002f1201 	eoreq	r1, pc, r1, lsl #4
    1624:	91020000 	mrsls	r0, (UNDEF: 2)
    1628:	133a1070 	teqne	sl, #112	; 0x70
    162c:	00862000 	addeq	r2, r6, r0
    1630:	6a110000 	bvs	441638 <startup-0x1fbbe9c8>
    1634:	2f130100 	svccs	0x00130100
    1638:	02000000 	andeq	r0, r0, #0
    163c:	40106c91 	mulsmi	r0, r1, ip
    1640:	72200013 	eorvc	r0, r0, #19
    1644:	06000000 	streq	r0, [r0], -r0
    1648:	00000705 	andeq	r0, r0, r5, lsl #14
    164c:	00211401 	eoreq	r1, r1, r1, lsl #8
    1650:	91020000 	mrsls	r0, (UNDEF: 2)
    1654:	13581067 	cmpne	r8, #103	; 0x67
    1658:	005a2000 	subseq	r2, sl, r0
    165c:	6b110000 	blvs	441664 <startup-0x1fbbe99c>
    1660:	2f150100 	svccs	0x00150100
    1664:	02000000 	andeq	r0, r0, #0
    1668:	00006891 	muleq	r0, r1, r8
    166c:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    1670:	0000b704 	andeq	fp, r0, r4, lsl #14
    1674:	09cc1200 	stmibeq	ip, {r9, ip}^
    1678:	03010000 	movweq	r0, #4096	; 0x1000
    167c:	200012d4 	ldrdcs	r1, [r0], -r4
    1680:	0000002c 	andeq	r0, r0, ip, lsr #32
    1684:	730e9c01 	movwvc	r9, #60417	; 0xec01
    1688:	59030100 	stmdbpl	r3, {r8}
    168c:	02000003 	andeq	r0, r0, #3
    1690:	0b137491 	bleq	4de8dc <startup-0x1fb21724>
    1694:	01000005 	tsteq	r0, r5
    1698:	0000b103 	andeq	fp, r0, r3, lsl #2
    169c:	70910200 	addsvc	r0, r1, r0, lsl #4
    16a0:	0001c313 	andeq	ip, r1, r3, lsl r3
    16a4:	2f030100 	svccs	0x00030100
    16a8:	02000000 	andeq	r0, r0, #0
    16ac:	0a136c91 	beq	4dc8f8 <startup-0x1fb23708>
    16b0:	01000003 	tsteq	r0, r3
    16b4:	00002f03 	andeq	r2, r0, r3, lsl #30
    16b8:	68910200 	ldmvs	r1, {r9}
    16bc:	00aa0000 	adceq	r0, sl, r0
    16c0:	00040000 	andeq	r0, r4, r0
    16c4:	0000072c 	andeq	r0, r0, ip, lsr #14
    16c8:	00840104 	addeq	r0, r4, r4, lsl #2
    16cc:	2f0c0000 	svccs	0x000c0000
    16d0:	4c00000a 	stcmi	0, cr0, [r0], {10}
    16d4:	be200015 	mialt	acc0, r5, r0
    16d8:	bd000000 	stclt	0, cr0, [r0, #-0]
    16dc:	02000006 	andeq	r0, r0, #6
    16e0:	00000a17 	andeq	r0, r0, r7, lsl sl
    16e4:	15ec1a01 	strbne	r1, [ip, #2561]!	; 0xa01
    16e8:	001e2000 	andseq	r2, lr, r0
    16ec:	9c010000 	stcls	0, cr0, [r1], {-0}
    16f0:	00000044 	andeq	r0, r0, r4, asr #32
    16f4:	00736d03 	rsbseq	r6, r3, r3, lsl #26
    16f8:	00441a01 	subeq	r1, r4, r1, lsl #20
    16fc:	91020000 	mrsls	r0, (UNDEF: 2)
    1700:	04040074 	streq	r0, [r4], #-116	; 0xffffff8c
    1704:	00037c07 	andeq	r7, r3, r7, lsl #24
    1708:	09ff0200 	ldmibeq	pc!, {r9}^	; <UNPREDICTABLE>
    170c:	14010000 	strne	r0, [r1], #-0
    1710:	200015c2 	andcs	r1, r0, r2, asr #11
    1714:	0000002a 	andeq	r0, r0, sl, lsr #32
    1718:	00849c01 	addeq	r9, r4, r1, lsl #24
    171c:	75030000 	strvc	r0, [r3, #-0]
    1720:	14010073 	strne	r0, [r1], #-115	; 0xffffff8d
    1724:	00000044 	andeq	r0, r0, r4, asr #32
    1728:	056c9102 	strbeq	r9, [ip, #-258]!	; 0xfffffefe
    172c:	200015ca 	andcs	r1, r0, sl, asr #11
    1730:	0000001a 	andeq	r0, r0, sl, lsl r0
    1734:	01006906 	tsteq	r0, r6, lsl #18
    1738:	00008415 	andeq	r8, r0, r5, lsl r4
    173c:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    1740:	04070000 	streq	r0, [r7], #-0
    1744:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    1748:	0a0b0800 	beq	2c3750 <startup-0x1fd3c8b0>
    174c:	0f010000 	svceq	0x00010000
    1750:	200015b0 			; <UNDEFINED> instruction: 0x200015b0
    1754:	00000012 	andeq	r0, r0, r2, lsl r0
    1758:	23099c01 	movwcs	r9, #39937	; 0x9c01
    175c:	0100000a 	tsteq	r0, sl
    1760:	00154c03 	andseq	r4, r5, r3, lsl #24
    1764:	00006420 	andeq	r6, r0, r0, lsr #8
    1768:	009c0100 	addseq	r0, ip, r0, lsl #2

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	1117550e 	tstne	r7, lr, lsl #10
   c:	00171001 	andseq	r1, r7, r1
  10:	01130200 	tsteq	r3, r0, lsl #4
  14:	0b3a0b0b 	bleq	e82c48 <startup-0x1f17d3b8>
  18:	13010b3b 	movwne	r0, #6971	; 0x1b3b
  1c:	0d030000 	stceq	0, cr0, [r3, #-0]
  20:	3a0e0300 	bcc	380c28 <startup-0x1fc7f3d8>
  24:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  28:	000b3813 	andeq	r3, fp, r3, lsl r8
  2c:	00240400 	eoreq	r0, r4, r0, lsl #8
  30:	0b3e0b0b 	bleq	f82c64 <startup-0x1f07d39c>
  34:	00000e03 	andeq	r0, r0, r3, lsl #28
  38:	0b011705 	bleq	45c54 <startup-0x1ffba3ac>
  3c:	3b0b3a0b 	blcc	2ce870 <startup-0x1fd31790>
  40:	0013010b 	andseq	r0, r3, fp, lsl #2
  44:	000d0600 	andeq	r0, sp, r0, lsl #12
  48:	0b3a0803 	bleq	e8205c <startup-0x1f17dfa4>
  4c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
  50:	0d070000 	stceq	0, cr0, [r7, #-0]
  54:	00134900 	andseq	r4, r3, r0, lsl #18
  58:	01130800 	tsteq	r3, r0, lsl #16
  5c:	0b0b0e03 	bleq	2c3870 <startup-0x1fd3c790>
  60:	0b3b0b3a 	bleq	ec2d50 <startup-0x1f13d2b0>
  64:	00001301 	andeq	r1, r0, r1, lsl #6
  68:	49000d09 	stmdbmi	r0, {r0, r3, r8, sl, fp}
  6c:	000b3813 	andeq	r3, fp, r3, lsl r8
  70:	00160a00 	andseq	r0, r6, r0, lsl #20
  74:	0b3a0e03 	bleq	e83888 <startup-0x1f17c778>
  78:	13490b3b 	movtne	r0, #39739	; 0x9b3b
  7c:	0d0b0000 	stceq	0, cr0, [fp, #-0]
  80:	3a0e0300 	bcc	380c88 <startup-0x1fc7f378>
  84:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  88:	0c000013 	stceq	0, cr0, [r0], {19}
  8c:	0803000d 	stmdaeq	r3, {r0, r2, r3}
  90:	0b3b0b3a 	bleq	ec2d80 <startup-0x1f13d280>
  94:	0b381349 	bleq	e04dc0 <startup-0x1f1fb240>
  98:	240d0000 	strcs	r0, [sp], #-0
  9c:	3e0b0b00 	vmlacc.f64	d0, d11, d0
  a0:	0008030b 	andeq	r0, r8, fp, lsl #6
  a4:	01010e00 	tsteq	r1, r0, lsl #28
  a8:	13011349 	movwne	r1, #4937	; 0x1349
  ac:	210f0000 	mrscs	r0, CPSR
  b0:	2f134900 	svccs	0x00134900
  b4:	1000000b 	andne	r0, r0, fp
  b8:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
  bc:	0b3b0b3a 	bleq	ec2dac <startup-0x1f13d254>
  c0:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
  c4:	0f110000 	svceq	0x00110000
  c8:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
  cc:	12000013 	andne	r0, r0, #19
  d0:	19270115 	stmdbne	r7!, {r0, r2, r4, r8}
  d4:	00001301 	andeq	r1, r0, r1, lsl #6
  d8:	49000513 	stmdbmi	r0, {r0, r1, r4, r8, sl}
  dc:	14000013 	strne	r0, [r0], #-19	; 0xffffffed
  e0:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
  e4:	0b3b0b3a 	bleq	ec2dd4 <startup-0x1f13d22c>
  e8:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
  ec:	00001802 	andeq	r1, r0, r2, lsl #16
  f0:	3f012e15 	svccc	0x00012e15
  f4:	3a0e0319 	bcc	380d60 <startup-0x1fc7f2a0>
  f8:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
  fc:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 100:	96184006 	ldrls	r4, [r8], -r6
 104:	13011942 	movwne	r1, #6466	; 0x1942
 108:	2e160000 	cdpcs	0, 1, cr0, cr6, cr0, {0}
 10c:	03193f01 	tsteq	r9, #1, 30
 110:	3b0b3a0e 	blcc	2ce950 <startup-0x1fd316b0>
 114:	3c13490b 			; <UNDEFINED> instruction: 0x3c13490b
 118:	00130119 	andseq	r0, r3, r9, lsl r1
 11c:	00181700 	andseq	r1, r8, r0, lsl #14
 120:	2e180000 	cdpcs	0, 1, cr0, cr8, cr0, {0}
 124:	03193f01 	tsteq	r9, #1, 30
 128:	3b0b3a0e 	blcc	2ce968 <startup-0x1fd31698>
 12c:	3c13490b 			; <UNDEFINED> instruction: 0x3c13490b
 130:	19000019 	stmdbne	r0, {r0, r3, r4}
 134:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 138:	0b3a0e03 	bleq	e8394c <startup-0x1f17c6b4>
 13c:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 140:	06120111 			; <UNDEFINED> instruction: 0x06120111
 144:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
 148:	00130119 	andseq	r0, r3, r9, lsl r1
 14c:	00051a00 	andeq	r1, r5, r0, lsl #20
 150:	0b3a0e03 	bleq	e83964 <startup-0x1f17c69c>
 154:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 158:	00001802 	andeq	r1, r0, r2, lsl #16
 15c:	11010b1b 	tstne	r1, fp, lsl fp
 160:	00061201 	andeq	r1, r6, r1, lsl #4
 164:	00341c00 	eorseq	r1, r4, r0, lsl #24
 168:	0b3a0803 	bleq	e8217c <startup-0x1f17de84>
 16c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 170:	00001802 	andeq	r1, r0, r2, lsl #16
 174:	55010b1d 	strpl	r0, [r1, #-2845]	; 0xfffff4e3
 178:	1e000017 	mcrne	0, 0, r0, cr0, cr7, {0}
 17c:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
 180:	0b3a0e03 	bleq	e83994 <startup-0x1f17c66c>
 184:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 188:	06120111 			; <UNDEFINED> instruction: 0x06120111
 18c:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
 190:	00000019 	andeq	r0, r0, r9, lsl r0
 194:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
 198:	030b130e 	movweq	r1, #45838	; 0xb30e
 19c:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
 1a0:	00171006 	andseq	r1, r7, r6
 1a4:	01130200 	tsteq	r3, r0, lsl #4
 1a8:	0b3a0b0b 	bleq	e82ddc <startup-0x1f17d224>
 1ac:	13010b3b 	movwne	r0, #6971	; 0x1b3b
 1b0:	0d030000 	stceq	0, cr0, [r3, #-0]
 1b4:	3a0e0300 	bcc	380dbc <startup-0x1fc7f244>
 1b8:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 1bc:	000b3813 	andeq	r3, fp, r3, lsl r8
 1c0:	00240400 	eoreq	r0, r4, r0, lsl #8
 1c4:	0b3e0b0b 	bleq	f82df8 <startup-0x1f07d208>
 1c8:	00000e03 	andeq	r0, r0, r3, lsl #28
 1cc:	0b011705 	bleq	45de8 <startup-0x1ffba218>
 1d0:	3b0b3a0b 	blcc	2cea04 <startup-0x1fd315fc>
 1d4:	0013010b 	andseq	r0, r3, fp, lsl #2
 1d8:	000d0600 	andeq	r0, sp, r0, lsl #12
 1dc:	0b3a0803 	bleq	e821f0 <startup-0x1f17de10>
 1e0:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 1e4:	0d070000 	stceq	0, cr0, [r7, #-0]
 1e8:	00134900 	andseq	r4, r3, r0, lsl #18
 1ec:	01130800 	tsteq	r3, r0, lsl #16
 1f0:	0b0b0e03 	bleq	2c3a04 <startup-0x1fd3c5fc>
 1f4:	0b3b0b3a 	bleq	ec2ee4 <startup-0x1f13d11c>
 1f8:	00001301 	andeq	r1, r0, r1, lsl #6
 1fc:	49000d09 	stmdbmi	r0, {r0, r3, r8, sl, fp}
 200:	000b3813 	andeq	r3, fp, r3, lsl r8
 204:	00160a00 	andseq	r0, r6, r0, lsl #20
 208:	0b3a0e03 	bleq	e83a1c <startup-0x1f17c5e4>
 20c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 210:	0d0b0000 	stceq	0, cr0, [fp, #-0]
 214:	3a080300 	bcc	200e1c <startup-0x1fdff1e4>
 218:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 21c:	000b3813 	andeq	r3, fp, r3, lsl r8
 220:	01130c00 	tsteq	r3, r0, lsl #24
 224:	050b0e03 	streq	r0, [fp, #-3587]	; 0xfffff1fd
 228:	0b3b0b3a 	bleq	ec2f18 <startup-0x1f13d0e8>
 22c:	00001301 	andeq	r1, r0, r1, lsl #6
 230:	0b00240d 	bleq	926c <startup-0x1fff6d94>
 234:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
 238:	0e000008 	cdpeq	0, 0, cr0, cr0, cr8, {0}
 23c:	13490101 	movtne	r0, #37121	; 0x9101
 240:	00001301 	andeq	r1, r0, r1, lsl #6
 244:	4900210f 	stmdbmi	r0, {r0, r1, r2, r3, r8, sp}
 248:	000b2f13 	andeq	r2, fp, r3, lsl pc
 24c:	000f1000 	andeq	r1, pc, r0
 250:	13490b0b 	movtne	r0, #39691	; 0x9b0b
 254:	15110000 	ldrne	r0, [r1, #-0]
 258:	01192701 	tsteq	r9, r1, lsl #14
 25c:	12000013 	andne	r0, r0, #19
 260:	13490005 	movtne	r0, #36869	; 0x9005
 264:	2e130000 	cdpcs	0, 1, cr0, cr3, cr0, {0}
 268:	03193f00 	tsteq	r9, #0, 30
 26c:	3b0b3a0e 	blcc	2ceaac <startup-0x1fd31554>
 270:	11192705 	tstne	r9, r5, lsl #14
 274:	40061201 	andmi	r1, r6, r1, lsl #4
 278:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
 27c:	2e140000 	cdpcs	0, 1, cr0, cr4, cr0, {0}
 280:	03193f01 	tsteq	r9, #1, 30
 284:	3b0b3a0e 	blcc	2ceac4 <startup-0x1fd3153c>
 288:	11192705 	tstne	r9, r5, lsl #14
 28c:	40061201 	andmi	r1, r6, r1, lsl #4
 290:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
 294:	00001301 	andeq	r1, r0, r1, lsl #6
 298:	03000515 	movweq	r0, #1301	; 0x515
 29c:	3b0b3a0e 	blcc	2ceadc <startup-0x1fd31524>
 2a0:	02134905 	andseq	r4, r3, #81920	; 0x14000
 2a4:	16000018 			; <UNDEFINED> instruction: 0x16000018
 2a8:	08030005 	stmdaeq	r3, {r0, r2}
 2ac:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 2b0:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 2b4:	2e170000 	cdpcs	0, 1, cr0, cr7, cr0, {0}
 2b8:	03193f01 	tsteq	r9, #1, 30
 2bc:	3b0b3a0e 	blcc	2ceafc <startup-0x1fd31504>
 2c0:	11192705 	tstne	r9, r5, lsl #14
 2c4:	40061201 	andmi	r1, r6, r1, lsl #4
 2c8:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
 2cc:	00001301 	andeq	r1, r0, r1, lsl #6
 2d0:	11010b18 	tstne	r1, r8, lsl fp
 2d4:	00061201 	andeq	r1, r6, r1, lsl #4
 2d8:	00341900 	eorseq	r1, r4, r0, lsl #18
 2dc:	0b3a0803 	bleq	e822f0 <startup-0x1f17dd10>
 2e0:	1349053b 	movtne	r0, #38203	; 0x953b
 2e4:	00001802 	andeq	r1, r0, r2, lsl #16
 2e8:	3f012e1a 	svccc	0x00012e1a
 2ec:	3a0e0319 	bcc	380f58 <startup-0x1fc7f0a8>
 2f0:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 2f4:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 2f8:	96184006 	ldrls	r4, [r8], -r6
 2fc:	13011942 	movwne	r1, #6466	; 0x1942
 300:	051b0000 	ldreq	r0, [fp, #-0]
 304:	3a0e0300 	bcc	380f0c <startup-0x1fc7f0f4>
 308:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 30c:	00180213 	andseq	r0, r8, r3, lsl r2
 310:	00341c00 	eorseq	r1, r4, r0, lsl #24
 314:	0b3a0803 	bleq	e82328 <startup-0x1f17dcd8>
 318:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 31c:	00001802 	andeq	r1, r0, r2, lsl #16
 320:	0300051d 	movweq	r0, #1309	; 0x51d
 324:	3b0b3a08 	blcc	2ceb4c <startup-0x1fd314b4>
 328:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 32c:	1e000018 	mcrne	0, 0, r0, cr0, cr8, {0}
 330:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 334:	0b3b0b3a 	bleq	ec3024 <startup-0x1f13cfdc>
 338:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 33c:	2e1f0000 	cdpcs	0, 1, cr0, cr15, cr0, {0}
 340:	03193f00 	tsteq	r9, #0, 30
 344:	3b0b3a0e 	blcc	2ceb84 <startup-0x1fd3147c>
 348:	1119270b 	tstne	r9, fp, lsl #14
 34c:	40061201 	andmi	r1, r6, r1, lsl #4
 350:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
 354:	2e200000 	cdpcs	0, 2, cr0, cr0, cr0, {0}
 358:	03193f01 	tsteq	r9, #1, 30
 35c:	3b0b3a0e 	blcc	2ceb9c <startup-0x1fd31464>
 360:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
 364:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
 368:	96184006 	ldrls	r4, [r8], -r6
 36c:	13011942 	movwne	r1, #6466	; 0x1942
 370:	2e210000 	cdpcs	0, 2, cr0, cr1, cr0, {0}
 374:	03193f01 	tsteq	r9, #1, 30
 378:	3b0b3a0e 	blcc	2cebb8 <startup-0x1fd31448>
 37c:	1119270b 	tstne	r9, fp, lsl #14
 380:	40061201 	andmi	r1, r6, r1, lsl #4
 384:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
 388:	00001301 	andeq	r1, r0, r1, lsl #6
 38c:	3f012e22 	svccc	0x00012e22
 390:	3a0e0319 	bcc	380ffc <startup-0x1fc7f004>
 394:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 398:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 39c:	97184006 	ldrls	r4, [r8, -r6]
 3a0:	00001942 	andeq	r1, r0, r2, asr #18
 3a4:	01110100 	tsteq	r1, r0, lsl #2
 3a8:	0b130e25 	bleq	4c3c44 <startup-0x1fb3c3bc>
 3ac:	01110e03 	tsteq	r1, r3, lsl #28
 3b0:	17100612 			; <UNDEFINED> instruction: 0x17100612
 3b4:	13020000 	movwne	r0, #8192	; 0x2000
 3b8:	3a0b0b01 	bcc	2c2fc4 <startup-0x1fd3d03c>
 3bc:	010b3b0b 	tsteq	fp, fp, lsl #22
 3c0:	03000013 	movweq	r0, #19
 3c4:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 3c8:	0b3b0b3a 	bleq	ec30b8 <startup-0x1f13cf48>
 3cc:	0b381349 	bleq	e050f8 <startup-0x1f1faf08>
 3d0:	24040000 	strcs	r0, [r4], #-0
 3d4:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 3d8:	000e030b 	andeq	r0, lr, fp, lsl #6
 3dc:	01170500 	tsteq	r7, r0, lsl #10
 3e0:	0b3a0b0b 	bleq	e83014 <startup-0x1f17cfec>
 3e4:	13010b3b 	movwne	r0, #6971	; 0x1b3b
 3e8:	0d060000 	stceq	0, cr0, [r6, #-0]
 3ec:	3a080300 	bcc	200ff4 <startup-0x1fdff00c>
 3f0:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 3f4:	07000013 	smladeq	r0, r3, r0, r0
 3f8:	1349000d 	movtne	r0, #36877	; 0x900d
 3fc:	13080000 	movwne	r0, #32768	; 0x8000
 400:	0b0e0301 	bleq	38100c <startup-0x1fc7eff4>
 404:	3b0b3a0b 	blcc	2cec38 <startup-0x1fd313c8>
 408:	0013010b 	andseq	r0, r3, fp, lsl #2
 40c:	000d0900 	andeq	r0, sp, r0, lsl #18
 410:	0b381349 	bleq	e0513c <startup-0x1f1faec4>
 414:	160a0000 	strne	r0, [sl], -r0
 418:	3a0e0300 	bcc	381020 <startup-0x1fc7efe0>
 41c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 420:	0b000013 	bleq	474 <startup-0x1ffffb8c>
 424:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 428:	0b3a0e03 	bleq	e83c3c <startup-0x1f17c3c4>
 42c:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 430:	06120111 			; <UNDEFINED> instruction: 0x06120111
 434:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
 438:	00130119 	andseq	r0, r3, r9, lsl r1
 43c:	00340c00 	eorseq	r0, r4, r0, lsl #24
 440:	0b3a0e03 	bleq	e83c54 <startup-0x1f17c3ac>
 444:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 448:	00001802 	andeq	r1, r0, r2, lsl #16
 44c:	4901010d 	stmdbmi	r1, {r0, r2, r3, r8}
 450:	00130113 	andseq	r0, r3, r3, lsl r1
 454:	00210e00 	eoreq	r0, r1, r0, lsl #28
 458:	0b2f1349 	bleq	bc5184 <startup-0x1f43ae7c>
 45c:	050f0000 	streq	r0, [pc, #-0]	; 464 <startup-0x1ffffb9c>
 460:	3a080300 	bcc	201068 <startup-0x1fdfef98>
 464:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 468:	00180213 	andseq	r0, r8, r3, lsl r2
 46c:	000f1000 	andeq	r1, pc, r0
 470:	13490b0b 	movtne	r0, #39691	; 0x9b0b
 474:	05110000 	ldreq	r0, [r1, #-0]
 478:	3a0e0300 	bcc	381080 <startup-0x1fc7ef80>
 47c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 480:	00180213 	andseq	r0, r8, r3, lsl r2
 484:	012e1200 			; <UNDEFINED> instruction: 0x012e1200
 488:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 48c:	0b3b0b3a 	bleq	ec317c <startup-0x1f13ce84>
 490:	13491927 	movtne	r1, #39207	; 0x9927
 494:	06120111 			; <UNDEFINED> instruction: 0x06120111
 498:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
 49c:	00130119 	andseq	r0, r3, r9, lsl r1
 4a0:	012e1300 			; <UNDEFINED> instruction: 0x012e1300
 4a4:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 4a8:	0b3b0b3a 	bleq	ec3198 <startup-0x1f13ce68>
 4ac:	01111927 	tsteq	r1, r7, lsr #18
 4b0:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 4b4:	01194297 			; <UNDEFINED> instruction: 0x01194297
 4b8:	14000013 	strne	r0, [r0], #-19	; 0xffffffed
 4bc:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
 4c0:	0b3a0e03 	bleq	e83cd4 <startup-0x1f17c32c>
 4c4:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 4c8:	06120111 			; <UNDEFINED> instruction: 0x06120111
 4cc:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
 4d0:	00000019 	andeq	r0, r0, r9, lsl r0
 4d4:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
 4d8:	030b130e 	movweq	r1, #45838	; 0xb30e
 4dc:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
 4e0:	00171006 	andseq	r1, r7, r6
 4e4:	01130200 	tsteq	r3, r0, lsl #4
 4e8:	0b3a0b0b 	bleq	e8311c <startup-0x1f17cee4>
 4ec:	13010b3b 	movwne	r0, #6971	; 0x1b3b
 4f0:	0d030000 	stceq	0, cr0, [r3, #-0]
 4f4:	3a0e0300 	bcc	3810fc <startup-0x1fc7ef04>
 4f8:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 4fc:	000b3813 	andeq	r3, fp, r3, lsl r8
 500:	00240400 	eoreq	r0, r4, r0, lsl #8
 504:	0b3e0b0b 	bleq	f83138 <startup-0x1f07cec8>
 508:	00000e03 	andeq	r0, r0, r3, lsl #28
 50c:	0b011705 	bleq	46128 <startup-0x1ffb9ed8>
 510:	3b0b3a0b 	blcc	2ced44 <startup-0x1fd312bc>
 514:	0013010b 	andseq	r0, r3, fp, lsl #2
 518:	000d0600 	andeq	r0, sp, r0, lsl #12
 51c:	0b3a0803 	bleq	e82530 <startup-0x1f17dad0>
 520:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 524:	0d070000 	stceq	0, cr0, [r7, #-0]
 528:	00134900 	andseq	r4, r3, r0, lsl #18
 52c:	01130800 	tsteq	r3, r0, lsl #16
 530:	0b0b0e03 	bleq	2c3d44 <startup-0x1fd3c2bc>
 534:	0b3b0b3a 	bleq	ec3224 <startup-0x1f13cddc>
 538:	00001301 	andeq	r1, r0, r1, lsl #6
 53c:	49000d09 	stmdbmi	r0, {r0, r3, r8, sl, fp}
 540:	000b3813 	andeq	r3, fp, r3, lsl r8
 544:	00160a00 	andseq	r0, r6, r0, lsl #20
 548:	0b3a0e03 	bleq	e83d5c <startup-0x1f17c2a4>
 54c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 550:	010b0000 	mrseq	r0, (UNDEF: 11)
 554:	01134901 	tsteq	r3, r1, lsl #18
 558:	0c000013 	stceq	0, cr0, [r0], {19}
 55c:	13490021 	movtne	r0, #36897	; 0x9021
 560:	00000b2f 	andeq	r0, r0, pc, lsr #22
 564:	0300340d 	movweq	r3, #1037	; 0x40d
 568:	3b0b3a08 	blcc	2ced90 <startup-0x1fd31270>
 56c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 570:	0e000018 	mcreq	0, 0, r0, cr0, cr8, {0}
 574:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 578:	0b3a0e03 	bleq	e83d8c <startup-0x1f17c274>
 57c:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 580:	01111349 	tsteq	r1, r9, asr #6
 584:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 588:	01194297 			; <UNDEFINED> instruction: 0x01194297
 58c:	0f000013 	svceq	0x00000013
 590:	0b0b0024 	bleq	2c0628 <startup-0x1fd3f9d8>
 594:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
 598:	2e100000 	cdpcs	0, 1, cr0, cr0, cr0, {0}
 59c:	03193f01 	tsteq	r9, #1, 30
 5a0:	3b0b3a0e 	blcc	2cede0 <startup-0x1fd31220>
 5a4:	1119270b 	tstne	r9, fp, lsl #14
 5a8:	40061201 	andmi	r1, r6, r1, lsl #4
 5ac:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
 5b0:	00001301 	andeq	r1, r0, r1, lsl #6
 5b4:	03000511 	movweq	r0, #1297	; 0x511
 5b8:	3b0b3a08 	blcc	2cede0 <startup-0x1fd31220>
 5bc:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 5c0:	12000018 	andne	r0, r0, #24
 5c4:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 5c8:	0b3a0e03 	bleq	e83ddc <startup-0x1f17c224>
 5cc:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 5d0:	01111349 	tsteq	r1, r9, asr #6
 5d4:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 5d8:	01194296 			; <UNDEFINED> instruction: 0x01194296
 5dc:	13000013 	movwne	r0, #19
 5e0:	08030034 	stmdaeq	r3, {r2, r4, r5}
 5e4:	0b3b0b3a 	bleq	ec32d4 <startup-0x1f13cd2c>
 5e8:	00001349 	andeq	r1, r0, r9, asr #6
 5ec:	03003414 	movweq	r3, #1044	; 0x414
 5f0:	3b0b3a0e 	blcc	2cee30 <startup-0x1fd311d0>
 5f4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 5f8:	15000018 	strne	r0, [r0, #-24]	; 0xffffffe8
 5fc:	0111010b 	tsteq	r1, fp, lsl #2
 600:	00000612 	andeq	r0, r0, r2, lsl r6
 604:	3f002e16 	svccc	0x00002e16
 608:	3a0e0319 	bcc	381274 <startup-0x1fc7ed8c>
 60c:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 610:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 614:	97184006 	ldrls	r4, [r8, -r6]
 618:	00001942 	andeq	r1, r0, r2, asr #18
 61c:	01110100 	tsteq	r1, r0, lsl #2
 620:	0b130e25 	bleq	4c3ebc <startup-0x1fb3c144>
 624:	01110e03 	tsteq	r1, r3, lsl #28
 628:	17100612 			; <UNDEFINED> instruction: 0x17100612
 62c:	24020000 	strcs	r0, [r2], #-0
 630:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 634:	000e030b 	andeq	r0, lr, fp, lsl #6
 638:	00240300 	eoreq	r0, r4, r0, lsl #6
 63c:	0b3e0b0b 	bleq	f83270 <startup-0x1f07cd90>
 640:	00000803 	andeq	r0, r0, r3, lsl #16
 644:	49010104 	stmdbmi	r1, {r2, r8}
 648:	00130113 	andseq	r0, r3, r3, lsl r1
 64c:	00210500 	eoreq	r0, r1, r0, lsl #10
 650:	0b2f1349 	bleq	bc537c <startup-0x1f43ac84>
 654:	34060000 	strcc	r0, [r6], #-0
 658:	3a0e0300 	bcc	381260 <startup-0x1fc7eda0>
 65c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 660:	00180213 	andseq	r0, r8, r3, lsl r2
 664:	01130700 	tsteq	r3, r0, lsl #14
 668:	0b0b0e03 	bleq	2c3e7c <startup-0x1fd3c184>
 66c:	0b3b0b3a 	bleq	ec335c <startup-0x1f13cca4>
 670:	00001301 	andeq	r1, r0, r1, lsl #6
 674:	03000d08 	movweq	r0, #3336	; 0xd08
 678:	3b0b3a0e 	blcc	2ceeb8 <startup-0x1fd31148>
 67c:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 680:	0900000b 	stmdbeq	r0, {r0, r1, r3}
 684:	0b0b000f 	bleq	2c06c8 <startup-0x1fd3f938>
 688:	00001349 	andeq	r1, r0, r9, asr #6
 68c:	0300160a 	movweq	r1, #1546	; 0x60a
 690:	3b0b3a0e 	blcc	2ceed0 <startup-0x1fd31130>
 694:	0013490b 	andseq	r4, r3, fp, lsl #18
 698:	01150b00 	tsteq	r5, r0, lsl #22
 69c:	13011927 	movwne	r1, #6439	; 0x1927
 6a0:	050c0000 	streq	r0, [ip, #-0]
 6a4:	00134900 	andseq	r4, r3, r0, lsl #18
 6a8:	012e0d00 			; <UNDEFINED> instruction: 0x012e0d00
 6ac:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 6b0:	0b3b0b3a 	bleq	ec33a0 <startup-0x1f13cc60>
 6b4:	01111927 	tsteq	r1, r7, lsr #18
 6b8:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 6bc:	01194296 			; <UNDEFINED> instruction: 0x01194296
 6c0:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
 6c4:	08030005 	stmdaeq	r3, {r0, r2}
 6c8:	0b3b0b3a 	bleq	ec33b8 <startup-0x1f13cc48>
 6cc:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 6d0:	2e0f0000 	cdpcs	0, 0, cr0, cr15, cr0, {0}
 6d4:	03193f01 	tsteq	r9, #1, 30
 6d8:	3b0b3a0e 	blcc	2cef18 <startup-0x1fd310e8>
 6dc:	1119270b 	tstne	r9, fp, lsl #14
 6e0:	40061201 	andmi	r1, r6, r1, lsl #4
 6e4:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
 6e8:	00001301 	andeq	r1, r0, r1, lsl #6
 6ec:	11010b10 	tstne	r1, r0, lsl fp
 6f0:	00061201 	andeq	r1, r6, r1, lsl #4
 6f4:	00341100 	eorseq	r1, r4, r0, lsl #2
 6f8:	0b3a0803 	bleq	e8270c <startup-0x1f17d8f4>
 6fc:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 700:	00001802 	andeq	r1, r0, r2, lsl #16
 704:	3f012e12 	svccc	0x00012e12
 708:	3a0e0319 	bcc	381374 <startup-0x1fc7ec8c>
 70c:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 710:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 714:	97184006 	ldrls	r4, [r8, -r6]
 718:	00001942 	andeq	r1, r0, r2, asr #18
 71c:	03000513 	movweq	r0, #1299	; 0x513
 720:	3b0b3a0e 	blcc	2cef60 <startup-0x1fd310a0>
 724:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 728:	00000018 	andeq	r0, r0, r8, lsl r0
 72c:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
 730:	030b130e 	movweq	r1, #45838	; 0xb30e
 734:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
 738:	00171006 	andseq	r1, r7, r6
 73c:	012e0200 			; <UNDEFINED> instruction: 0x012e0200
 740:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 744:	0b3b0b3a 	bleq	ec3434 <startup-0x1f13cbcc>
 748:	01111927 	tsteq	r1, r7, lsr #18
 74c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 750:	01194296 			; <UNDEFINED> instruction: 0x01194296
 754:	03000013 	movweq	r0, #19
 758:	08030005 	stmdaeq	r3, {r0, r2}
 75c:	0b3b0b3a 	bleq	ec344c <startup-0x1f13cbb4>
 760:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 764:	24040000 	strcs	r0, [r4], #-0
 768:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 76c:	000e030b 	andeq	r0, lr, fp, lsl #6
 770:	010b0500 	tsteq	fp, r0, lsl #10
 774:	06120111 			; <UNDEFINED> instruction: 0x06120111
 778:	34060000 	strcc	r0, [r6], #-0
 77c:	3a080300 	bcc	201384 <startup-0x1fdfec7c>
 780:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 784:	00180213 	andseq	r0, r8, r3, lsl r2
 788:	00240700 	eoreq	r0, r4, r0, lsl #14
 78c:	0b3e0b0b 	bleq	f833c0 <startup-0x1f07cc40>
 790:	00000803 	andeq	r0, r0, r3, lsl #16
 794:	3f002e08 	svccc	0x00002e08
 798:	3a0e0319 	bcc	381404 <startup-0x1fc7ebfc>
 79c:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 7a0:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 7a4:	96184006 	ldrls	r4, [r8], -r6
 7a8:	00001942 	andeq	r1, r0, r2, asr #18
 7ac:	3f002e09 	svccc	0x00002e09
 7b0:	3a0e0319 	bcc	38141c <startup-0x1fc7ebe4>
 7b4:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 7b8:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 7bc:	97184006 	ldrls	r4, [r8, -r6]
 7c0:	00001942 	andeq	r1, r0, r2, asr #18
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	00000658 	andeq	r0, r0, r8, asr r6
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
	...
  28:	0000001c 	andeq	r0, r0, ip, lsl r0
  2c:	08320002 	ldmdaeq	r2!, {r1}
  30:	00040000 	andeq	r0, r4, r0
  34:	00000000 	andeq	r0, r0, r0
  38:	20000668 	andcs	r0, r0, r8, ror #12
  3c:	00000748 	andeq	r0, r0, r8, asr #14
	...
  48:	0000001c 	andeq	r0, r0, ip, lsl r0
  4c:	0de20002 	stcleq	0, cr0, [r2, #8]!
  50:	00040000 	andeq	r0, r4, r0
  54:	00000000 	andeq	r0, r0, r0
  58:	20000db0 			; <UNDEFINED> instruction: 0x20000db0
  5c:	000003ac 	andeq	r0, r0, ip, lsr #7
	...
  68:	0000001c 	andeq	r0, r0, ip, lsl r0
  6c:	11430002 	cmpne	r3, r2
  70:	00040000 	andeq	r0, r4, r0
  74:	00000000 	andeq	r0, r0, r0
  78:	2000115c 	andcs	r1, r0, ip, asr r1
  7c:	00000178 	andeq	r0, r0, r8, ror r1
	...
  88:	0000001c 	andeq	r0, r0, ip, lsl r0
  8c:	13160002 	tstne	r6, #2
  90:	00040000 	andeq	r0, r4, r0
  94:	00000000 	andeq	r0, r0, r0
  98:	200012d4 	ldrdcs	r1, [r0], -r4
  9c:	00000276 	andeq	r0, r0, r6, ror r2
	...
  a8:	0000001c 	andeq	r0, r0, ip, lsl r0
  ac:	16be0002 	ldrtne	r0, [lr], r2
  b0:	00040000 	andeq	r0, r4, r0
  b4:	00000000 	andeq	r0, r0, r0
  b8:	2000154c 	andcs	r1, r0, ip, asr #10
  bc:	000000be 	strheq	r0, [r0], -lr
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000218 	andcs	r0, r0, r8, lsl r2
   4:	200002fc 	strdcs	r0, [r0], -ip
   8:	200002fe 	strdcs	r0, [r0], -lr
   c:	20000300 	andcs	r0, r0, r0, lsl #6
	...
  18:	20000010 	andcs	r0, r0, r0, lsl r0
  1c:	20000668 	andcs	r0, r0, r8, ror #12
  20:	20000000 	andcs	r0, r0, r0
  24:	2000000c 	andcs	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	00000187 	andeq	r0, r0, r7, lsl #3
   4:	00be0002 	adcseq	r0, lr, r2
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	43010000 	movwmi	r0, #4096	; 0x1000
  1c:	63532f3a 	cmpvs	r3, #58, 30	; 0xe8
  20:	6c6f6f68 	stclvs	15, cr6, [pc], #-416	; fffffe88 <enemy_bits+0xdfffe764>
  24:	5441442f 	strbpl	r4, [r1], #-1071	; 0xfffffbd1
  28:	2f373130 	svccs	0x00373130
  2c:	2d706f4d 	ldclcs	15, cr6, [r0, #-308]!	; 0xfffffecc
  30:	30544144 	subscc	r4, r4, r4, asr #2
  34:	4c2f3731 	stcmi	7, cr3, [pc], #-196	; ffffff78 <enemy_bits+0xdfffe854>
  38:	20736261 	rsbscs	r6, r3, r1, ror #4
  3c:	20646e61 	rsbcs	r6, r4, r1, ror #28
  40:	65637845 	strbvs	r7, [r3, #-2117]!	; 0xfffff7bb
  44:	73696372 	cmnvc	r9, #-939524095	; 0xc8000001
  48:	732f7365 			; <UNDEFINED> instruction: 0x732f7365
  4c:	706f6f70 	rsbvc	r6, pc, r0, ror pc	; <UNPREDICTABLE>
  50:	625f7379 	subsvs	r7, pc, #-469762047	; 0xe4000001
  54:	72617a69 	rsbvc	r7, r1, #430080	; 0x69000
  58:	615f6572 	cmpvs	pc, r2, ror r5	; <UNPREDICTABLE>
  5c:	6e657664 	cdpvs	6, 6, cr7, cr5, cr4, {3}
  60:	65727574 	ldrbvs	r7, [r2, #-1396]!	; 0xfffffa8c
  64:	74730000 	ldrbtvc	r0, [r3], #-0
  68:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
  6c:	00632e70 	rsbeq	r2, r3, r0, ror lr
  70:	67000001 	strvs	r0, [r0, -r1]
  74:	2e6f6970 			; <UNDEFINED> instruction: 0x2e6f6970
  78:	00010068 	andeq	r0, r1, r8, rrx
  7c:	73797300 	cmnvc	r9, #0, 6
  80:	2e676663 	cdpcs	6, 6, cr6, cr7, cr3, {3}
  84:	00010068 	andeq	r0, r1, r8, rrx
  88:	74786500 	ldrbtvc	r6, [r8], #-1280	; 0xfffffb00
  8c:	00682e69 	rsbeq	r2, r8, r9, ror #28
  90:	73000001 	movwvc	r0, #1
  94:	706f6f70 	rsbvc	r6, pc, r0, ror pc	; <UNPREDICTABLE>
  98:	62782e79 	rsbsvs	r2, r8, #1936	; 0x790
  9c:	0001006d 	andeq	r0, r1, sp, rrx
  a0:	69786500 	ldmdbvs	r8!, {r8, sl, sp, lr}^
  a4:	62782e74 	rsbsvs	r2, r8, #116, 28	; 0x740
  a8:	0001006d 	andeq	r0, r1, sp, rrx
  ac:	656e6500 	strbvs	r6, [lr, #-1280]!	; 0xfffffb00
  b0:	782e796d 	stmdavc	lr!, {r0, r2, r3, r5, r6, r8, fp, ip, sp, lr}
  b4:	01006d62 	tsteq	r0, r2, ror #26
  b8:	70730000 	rsbsvc	r0, r3, r0
  bc:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
  c0:	00682e73 	rsbeq	r2, r8, r3, ror lr
  c4:	00000001 	andeq	r0, r0, r1
  c8:	00020500 	andeq	r0, r2, r0, lsl #10
  cc:	03200000 	nopeq	{0}	; <UNPREDICTABLE>
  d0:	5e130130 	mrcpl	1, 0, r0, cr3, cr0, {1}
  d4:	01000302 	tsteq	r0, r2, lsl #6
  d8:	02050001 	andeq	r0, r5, #1
  dc:	20000010 	andcs	r0, r0, r0, lsl r0
  e0:	3d013903 	vstrcc.16	s6, [r1, #-6]	; <UNPREDICTABLE>
  e4:	4b2f2f30 	blmi	bcbdac <startup-0x1f434254>
  e8:	4b4b4b4c 	blmi	12d2e20 <startup-0x1ed2d1e0>
  ec:	0376bf4d 	cmneq	r6, #308	; 0x134
  f0:	01270209 			; <UNDEFINED> instruction: 0x01270209
  f4:	8459bf5a 	ldrbhi	fp, [r9], #-3930	; 0xfffff0a6
  f8:	28020903 	stmdacs	r2, {r0, r1, r8, fp}
  fc:	76bf5a01 	ldrtvc	r5, [pc], r1, lsl #20
 100:	c8080903 	stmdagt	r8, {r0, r1, r8, fp}
 104:	9291bd4c 	addsls	fp, r1, #76, 26	; 0x1300
 108:	593e4d4b 	ldmdbpl	lr!, {r0, r1, r3, r6, r8, sl, fp, lr}
 10c:	bbadc967 	bllt	feb726b0 <enemy_bits+0xdeb70f8c>
 110:	67aeadbb 			; <UNDEFINED> instruction: 0x67aeadbb
 114:	4b4b6767 	blmi	12d9eb8 <startup-0x1ed26148>
 118:	4a70033d 	bmi	1c00e14 <startup-0x1e3ff1ec>
 11c:	24201103 	strtcs	r1, [r0], #-259	; 0xfffffefd
 120:	d8d7302f 	ldmle	r7, {r0, r1, r2, r3, r5, ip, sp}^
 124:	4b4b4b92 	blmi	12d2f74 <startup-0x1ed2d08c>
 128:	4c1e4e4b 	ldcmi	14, cr4, [lr], {75}	; 0x4b
 12c:	2f142602 	svccs	0x00142602
 130:	a03e6759 	eorsge	r6, lr, r9, asr r7
 134:	85834ba0 	strhi	r4, [r3, #2976]	; 0xba0
 138:	4e4b6785 	cdpmi	7, 4, cr6, cr11, cr5, {4}
 13c:	084b92ad 	stmdaeq	fp, {r0, r2, r3, r5, r7, r9, ip, pc}^
 140:	4b084b4b 	blmi	212e74 <startup-0x1fded18c>
 144:	003d6768 	eorseq	r6, sp, r8, ror #14
 148:	3d030402 	cfstrscc	mvf0, [r3, #-8]
 14c:	03040200 	movweq	r0, #16896	; 0x4200
 150:	04020081 	streq	r0, [r2], #-129	; 0xffffff7f
 154:	003c0601 	eorseq	r0, ip, r1, lsl #12
 158:	06020402 	streq	r0, [r2], -r2, lsl #8
 15c:	0402003b 	streq	r0, [r2], #-59	; 0xffffffc5
 160:	063c0601 	ldrteq	r0, [ip], -r1, lsl #12
 164:	4b302f43 	blmi	c0be78 <startup-0x1f3f4188>
 168:	832f2f4d 			; <UNDEFINED> instruction: 0x832f2f4d
 16c:	2f2f4c4b 	svccs	0x002f4c4b
 170:	4b4b4b83 	blmi	12d2f84 <startup-0x1ed2d07c>
 174:	2e090368 	cdpcs	3, 0, cr0, cr9, cr8, {3}
 178:	2f2f6867 	svccs	0x002f6867
 17c:	3d3f3230 	lfmcc	f3, 4, [pc, #-192]!	; c4 <startup-0x1fffff3c>
 180:	3f3d6967 	svccc	0x003d6967
 184:	18027575 	stmdane	r2, {r0, r2, r4, r5, r6, r8, sl, ip, sp, lr}
 188:	e7010100 	str	r0, [r1, -r0, lsl #2]
 18c:	02000001 	andeq	r0, r0, #1
 190:	0000b000 	andeq	fp, r0, r0
 194:	fb010200 	blx	4099e <startup-0x1ffbf662>
 198:	01000d0e 	tsteq	r0, lr, lsl #26
 19c:	00010101 	andeq	r0, r1, r1, lsl #2
 1a0:	00010000 	andeq	r0, r1, r0
 1a4:	3a430100 	bcc	10c05ac <startup-0x1ef3fa54>
 1a8:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
 1ac:	6c2f7372 	stcvs	3, cr7, [pc], #-456	; ffffffec <enemy_bits+0xdfffe8c8>
 1b0:	69746861 	ldmdbvs	r4!, {r0, r5, r6, fp, sp, lr}^
 1b4:	6f442f67 	svcvs	0x00442f67
 1b8:	6f6c6e77 	svcvs	0x006c6e77
 1bc:	2f736461 	svccs	0x00736461
 1c0:	2d706f4d 	ldclcs	15, cr6, [r0, #-308]!	; 0xfffffecc
 1c4:	30544144 	subscc	r4, r4, r4, asr #2
 1c8:	6d2d3731 	stcvs	7, cr3, [sp, #-196]!	; 0xffffff3c
 1cc:	65747361 	ldrbvs	r7, [r4, #-865]!	; 0xfffffc9f
 1d0:	6f4d2f72 	svcvs	0x004d2f72
 1d4:	41442d70 	hvcmi	17104	; 0x42d0
 1d8:	37313054 			; <UNDEFINED> instruction: 0x37313054
 1dc:	73616d2d 	cmnvc	r1, #2880	; 0xb40
 1e0:	2f726574 	svccs	0x00726574
 1e4:	7362614c 	cmnvc	r2, #76, 2
 1e8:	646e6120 	strbtvs	r6, [lr], #-288	; 0xfffffee0
 1ec:	65786520 	ldrbvs	r6, [r8, #-1312]!	; 0xfffffae0
 1f0:	73696372 	cmnvc	r9, #-939524095	; 0xc8000001
 1f4:	732f7365 			; <UNDEFINED> instruction: 0x732f7365
 1f8:	706f6f70 	rsbvc	r6, pc, r0, ror pc	; <UNPREDICTABLE>
 1fc:	625f7379 	subsvs	r7, pc, #-469762047	; 0xe4000001
 200:	72617a69 	rsbvc	r7, r1, #430080	; 0x69000
 204:	615f6572 	cmpvs	pc, r2, ror r5	; <UNPREDICTABLE>
 208:	6e657664 	cdpvs	6, 6, cr7, cr5, cr4, {3}
 20c:	65727574 	ldrbvs	r7, [r2, #-1396]!	; 0xfffffa8c
 210:	72670000 	rsbvc	r0, r7, #0
 214:	69687061 	stmdbvs	r8!, {r0, r5, r6, ip, sp, lr}^
 218:	73696463 	cmnvc	r9, #1660944384	; 0x63000000
 21c:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 220:	0100632e 	tsteq	r0, lr, lsr #6
 224:	70670000 	rsbvc	r0, r7, r0
 228:	682e6f69 	stmdavs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}
 22c:	00000100 	andeq	r0, r0, r0, lsl #2
 230:	70617267 	rsbvc	r7, r1, r7, ror #4
 234:	64636968 	strbtvs	r6, [r3], #-2408	; 0xfffff698
 238:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 23c:	682e7961 	stmdavs	lr!, {r0, r5, r6, r8, fp, ip, sp, lr}
 240:	00000100 	andeq	r0, r0, r0, lsl #2
 244:	02050000 	andeq	r0, r5, #0
 248:	20000668 	andcs	r0, r0, r8, ror #12
 24c:	59836714 	stmibpl	r3, {r2, r4, r8, r9, sl, sp, lr}
 250:	76598391 			; <UNDEFINED> instruction: 0x76598391
 254:	d7598367 	ldrble	r8, [r9, -r7, ror #6]
 258:	67685983 	strbvs	r5, [r8, -r3, lsl #19]!
 25c:	03741003 	cmneq	r4, #3
 260:	10032070 	andne	r2, r3, r0, ror r0
 264:	2072034a 	rsbscs	r0, r2, sl, asr #6
 268:	3d3d223d 	lfmcc	f2, 4, [sp, #-244]!	; 0xffffff0c
 26c:	223d3d22 	eorscs	r3, sp, #2176	; 0x880
 270:	3f4c223d 	svccc	0x004c223d
 274:	3d3d3f3e 	ldccc	15, cr3, [sp, #-248]!	; 0xffffff08
 278:	4b303d32 	blmi	c0f748 <startup-0x1f3f08b8>
 27c:	0367313d 	cmneq	r7, #1073741839	; 0x4000000f
 280:	0a034a77 	beq	d2c64 <startup-0x1ff2d39c>
 284:	3d3e2520 	cfldr32cc	mvfx2, [lr, #-128]!	; 0xffffff80
 288:	3e3f68a0 	cdpcc	8, 3, cr6, cr15, cr0, {5}
 28c:	3d30593e 			; <UNDEFINED> instruction: 0x3d30593e
 290:	3e3f5a31 			; <UNDEFINED> instruction: 0x3e3f5a31
 294:	59303d59 	ldmdbpl	r0!, {r0, r3, r4, r6, r8, sl, fp, ip, sp}
 298:	2e0b033d 	mcrcs	3, 0, r0, cr11, cr13, {1}
 29c:	4b92ae3d 	blmi	fe4abb98 <enemy_bits+0xde4aa474>
 2a0:	2f3d3059 	svccs	0x003d3059
 2a4:	303d593f 	eorscc	r5, sp, pc, lsr r9
 2a8:	3d323d59 	ldccc	13, cr3, [r2, #-356]!	; 0xfffffe9c
 2ac:	91763d3f 	cmnls	r6, pc, lsr sp
 2b0:	833d593d 	teqhi	sp, #999424	; 0xf4000
 2b4:	593d914c 	ldmdbpl	sp!, {r2, r3, r6, r8, ip, pc}
 2b8:	4c833d3d 	stcmi	13, cr3, [r3], {61}	; 0x3d
 2bc:	4c675967 			; <UNDEFINED> instruction: 0x4c675967
 2c0:	3e3e3e2f 	cdpcc	14, 3, cr3, cr14, cr15, {1}
 2c4:	4b3e3e3d 	blmi	f8fbc0 <startup-0x1f070440>
 2c8:	4c4b4b4b 	mcrrmi	11, 4, r4, fp, cr11
 2cc:	4b3d3e3d 	blmi	f4fbc8 <startup-0x1f0b0438>
 2d0:	02004c9f 	andeq	r4, r0, #40704	; 0x9f00
 2d4:	004b0304 	subeq	r0, fp, r4, lsl #6
 2d8:	49030402 	stmdbmi	r3, {r1, sl}
 2dc:	01040200 	mrseq	r0, R12_usr
 2e0:	02005806 	andeq	r5, r0, #393216	; 0x60000
 2e4:	46060204 	strmi	r0, [r6], -r4, lsl #4
 2e8:	01040200 	mrseq	r0, R12_usr
 2ec:	52065806 	andpl	r5, r6, #393216	; 0x60000
 2f0:	0200e64c 	andeq	lr, r0, #76, 12	; 0x4c00000
 2f4:	58060104 	stmdapl	r6, {r2, r8}
 2f8:	02005b06 	andeq	r5, r0, #6144	; 0x1800
 2fc:	58060104 	stmdapl	r6, {r2, r8}
 300:	02005b06 	andeq	r5, r0, #6144	; 0x1800
 304:	4a060104 	bmi	18071c <startup-0x1fe7f8e4>
 308:	4bae5c06 	blmi	feb97328 <enemy_bits+0xdeb95c04>
 30c:	20080d03 	andcs	r0, r8, r3, lsl #26
 310:	4b4b7a4b 	blmi	12dec44 <startup-0x1ed213bc>
 314:	c9694b76 	stmdbgt	r9!, {r1, r2, r4, r5, r6, r8, r9, fp, lr}^
 318:	4bc99fd7 	blmi	ff26827c <enemy_bits+0xdf266b58>
 31c:	039fa0ae 	orrseq	sl, pc, #174	; 0xae
 320:	31313c4e 	teqcc	r1, lr, asr #24
 324:	5a202d03 	bpl	80b738 <startup-0x1f7f48c8>
 328:	0402004b 	streq	r0, [r2], #-75	; 0xffffffb5
 32c:	02003d03 	andeq	r3, r0, #3, 26	; 0xc0
 330:	c7080304 	strgt	r0, [r8, -r4, lsl #6]
 334:	01040200 	mrseq	r0, R12_usr
 338:	69063c06 	stmdbvs	r6, {r1, r2, sl, fp, ip, sp}
 33c:	02004b4c 	andeq	r4, r0, #76, 22	; 0x13000
 340:	003d0304 	eorseq	r0, sp, r4, lsl #6
 344:	08030402 	stmdaeq	r3, {r1, sl}
 348:	040200c7 	streq	r0, [r2], #-199	; 0xffffff39
 34c:	063c0601 	ldrteq	r0, [ip], -r1, lsl #12
 350:	4b4b4c69 	blmi	12d34fc <startup-0x1ed2cb04>
 354:	02007775 	andeq	r7, r0, #30670848	; 0x1d40000
 358:	4a060104 	bmi	180770 <startup-0x1fe7f890>
 35c:	005a8306 	subseq	r8, sl, r6, lsl #6
 360:	06010402 	streq	r0, [r1], -r2, lsl #8
 364:	5b83064a 	blpl	fe0c1c94 <enemy_bits+0xde0c0570>
 368:	3d674c4b 	stclcc	12, cr4, [r7, #-300]!	; 0xfffffed4
 36c:	3d304c3d 	ldccc	12, cr4, [r0, #-244]!	; 0xffffff0c
 370:	0008023d 	andeq	r0, r8, sp, lsr r2
 374:	012d0101 			; <UNDEFINED> instruction: 0x012d0101
 378:	00020000 	andeq	r0, r2, r0
 37c:	0000009a 	muleq	r0, sl, r0
 380:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
 384:	0101000d 	tsteq	r1, sp
 388:	00000101 	andeq	r0, r0, r1, lsl #2
 38c:	00000100 	andeq	r0, r0, r0, lsl #2
 390:	2f3a4301 	svccs	0x003a4301
 394:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
 398:	616c2f73 	smcvs	49907	; 0xc2f3
 39c:	67697468 	strbvs	r7, [r9, -r8, ror #8]!
 3a0:	776f442f 	strbvc	r4, [pc, -pc, lsr #8]!
 3a4:	616f6c6e 	cmnvs	pc, lr, ror #24
 3a8:	4d2f7364 	stcmi	3, cr7, [pc, #-400]!	; 220 <startup-0x1ffffde0>
 3ac:	442d706f 	strtmi	r7, [sp], #-111	; 0xffffff91
 3b0:	31305441 	teqcc	r0, r1, asr #8
 3b4:	616d2d37 	cmnvs	sp, r7, lsr sp
 3b8:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
 3bc:	706f4d2f 	rsbvc	r4, pc, pc, lsr #26
 3c0:	5441442d 	strbpl	r4, [r1], #-1069	; 0xfffffbd3
 3c4:	2d373130 	ldfcss	f3, [r7, #-192]!	; 0xffffff40
 3c8:	7473616d 	ldrbtvc	r6, [r3], #-365	; 0xfffffe93
 3cc:	4c2f7265 	sfmmi	f7, 4, [pc], #-404	; 240 <startup-0x1ffffdc0>
 3d0:	20736261 	rsbscs	r6, r3, r1, ror #4
 3d4:	20646e61 	rsbcs	r6, r4, r1, ror #28
 3d8:	72657865 	rsbvc	r7, r5, #6619136	; 0x650000
 3dc:	65736963 	ldrbvs	r6, [r3, #-2403]!	; 0xfffff69d
 3e0:	70732f73 	rsbsvc	r2, r3, r3, ror pc
 3e4:	79706f6f 	ldmdbvc	r0!, {r0, r1, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 3e8:	69625f73 	stmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 3ec:	7272617a 	rsbsvc	r6, r2, #-2147483618	; 0x8000001e
 3f0:	64615f65 	strbtvs	r5, [r1], #-3941	; 0xfffff09b
 3f4:	746e6576 	strbtvc	r6, [lr], #-1398	; 0xfffffa8a
 3f8:	00657275 	rsbeq	r7, r5, r5, ror r2
 3fc:	63736100 	cmnvs	r3, #0, 2
 400:	69646969 	stmdbvs	r4!, {r0, r3, r5, r6, r8, fp, sp, lr}^
 404:	616c7073 	smcvs	50947	; 0xc703
 408:	00632e79 	rsbeq	r2, r3, r9, ror lr
 40c:	67000001 	strvs	r0, [r0, -r1]
 410:	2e6f6970 			; <UNDEFINED> instruction: 0x2e6f6970
 414:	00010068 	andeq	r0, r1, r8, rrx
 418:	05000000 	streq	r0, [r0, #-0]
 41c:	000db002 	andeq	fp, sp, r2
 420:	42301420 	eorsmi	r1, r0, #32, 8	; 0x20000000
 424:	595a5a5a 	ldmdbpl	sl, {r1, r3, r4, r6, r9, fp, ip, lr}^
 428:	59836876 	stmibpl	r3, {r1, r2, r4, r5, r6, fp, sp, lr}
 42c:	68688391 	stmdavs	r8!, {r0, r4, r7, r8, r9, pc}^
 430:	84d75983 	ldrbhi	r5, [r7], #2435	; 0x983
 434:	3f3d6876 	svccc	0x003d6876
 438:	3d684c59 	stclcc	12, cr4, [r8, #-356]!	; 0xfffffe9c
 43c:	3f4c593f 	svccc	0x004c593f
 440:	5b3e3d69 	blpl	f8f9ec <startup-0x1f070614>
 444:	3f842f68 	svccc	0x00842f68
 448:	5b3f3d69 	blpl	fcf9f4 <startup-0x1f03060c>
 44c:	68842f68 	stmvs	r4, {r3, r5, r6, r8, r9, sl, fp, sp}
 450:	3d314d3f 	ldccc	13, cr4, [r1, #-252]!	; 0xffffff04
 454:	313f4068 	teqcc	pc, r8, rrx
 458:	762f3e4d 	strtvc	r3, [pc], -sp, asr #28
 45c:	040200ae 	streq	r0, [r2], #-174	; 0xffffff52
 460:	06200601 	strteq	r0, [r0], -r1, lsl #12
 464:	4b5b3f67 	blmi	16d0208 <startup-0x1e92fdf8>
 468:	4c4c1e4e 	mcrrmi	14, 4, r1, ip, cr14
 46c:	003f3d68 	eorseq	r3, pc, r8, ror #26
 470:	06010402 	streq	r0, [r1], -r2, lsl #8
 474:	3f670620 	svccc	0x00670620
 478:	5a4c3d5b 	bpl	130f9ec <startup-0x1ecf0614>
 47c:	01040200 	mrseq	r0, R12_usr
 480:	40063c06 	andmi	r3, r6, r6, lsl #24
 484:	01040200 	mrseq	r0, R12_usr
 488:	41063c06 	tstmi	r6, r6, lsl #24
 48c:	03783d67 	cmneq	r8, #6592	; 0x19c0
 490:	0332c872 	teqeq	r2, #7471104	; 0x720000
 494:	4c3e200b 	ldcmi	0, cr2, [lr], #-44	; 0xffffffd4
 498:	4c4d7321 	mcrrmi	3, 2, r7, sp, cr1
 49c:	4b4bbb3d 	blmi	12ef198 <startup-0x1ed10e68>
 4a0:	06024b4b 	streq	r4, [r2], -fp, asr #22
 4a4:	01010100 	mrseq	r0, (UNDEF: 17)
 4a8:	02000001 	andeq	r0, r0, #1
 4ac:	0000a000 	andeq	sl, r0, r0
 4b0:	fb010200 	blx	40cba <startup-0x1ffbf346>
 4b4:	01000d0e 	tsteq	r0, lr, lsl #26
 4b8:	00010101 	andeq	r0, r1, r1, lsl #2
 4bc:	00010000 	andeq	r0, r1, r0
 4c0:	3a430100 	bcc	10c08c8 <startup-0x1ef3f738>
 4c4:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
 4c8:	6c2f7372 	stcvs	3, cr7, [pc], #-456	; 308 <startup-0x1ffffcf8>
 4cc:	69746861 	ldmdbvs	r4!, {r0, r5, r6, fp, sp, lr}^
 4d0:	6f442f67 	svcvs	0x00442f67
 4d4:	6f6c6e77 	svcvs	0x006c6e77
 4d8:	2f736461 	svccs	0x00736461
 4dc:	2d706f4d 	ldclcs	15, cr6, [r0, #-308]!	; 0xfffffecc
 4e0:	30544144 	subscc	r4, r4, r4, asr #2
 4e4:	6d2d3731 	stcvs	7, cr3, [sp, #-196]!	; 0xffffff3c
 4e8:	65747361 	ldrbvs	r7, [r4, #-865]!	; 0xfffffc9f
 4ec:	6f4d2f72 	svcvs	0x004d2f72
 4f0:	41442d70 	hvcmi	17104	; 0x42d0
 4f4:	37313054 			; <UNDEFINED> instruction: 0x37313054
 4f8:	73616d2d 	cmnvc	r1, #2880	; 0xb40
 4fc:	2f726574 	svccs	0x00726574
 500:	7362614c 	cmnvc	r2, #76, 2
 504:	646e6120 	strbtvs	r6, [lr], #-288	; 0xfffffee0
 508:	65786520 	ldrbvs	r6, [r8, #-1312]!	; 0xfffffae0
 50c:	73696372 	cmnvc	r9, #-939524095	; 0xc8000001
 510:	732f7365 			; <UNDEFINED> instruction: 0x732f7365
 514:	706f6f70 	rsbvc	r6, pc, r0, ror pc	; <UNPREDICTABLE>
 518:	625f7379 	subsvs	r7, pc, #-469762047	; 0xe4000001
 51c:	72617a69 	rsbvc	r7, r1, #430080	; 0x69000
 520:	615f6572 	cmpvs	pc, r2, ror r5	; <UNPREDICTABLE>
 524:	6e657664 	cdpvs	6, 6, cr7, cr5, cr4, {3}
 528:	65727574 	ldrbvs	r7, [r2, #-1396]!	; 0xfffffa8c
 52c:	656b0000 	strbvs	r0, [fp, #-0]!
 530:	64617079 	strbtvs	r7, [r1], #-121	; 0xffffff87
 534:	0100632e 	tsteq	r0, lr, lsr #6
 538:	70670000 	rsbvc	r0, r7, r0
 53c:	682e6f69 	stmdavs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}
 540:	00000100 	andeq	r0, r0, r0, lsl #2
 544:	7079656b 	rsbsvc	r6, r9, fp, ror #10
 548:	682e6461 	stmdavs	lr!, {r0, r5, r6, sl, sp, lr}
 54c:	00000100 	andeq	r0, r0, r0, lsl #2
 550:	02050000 	andeq	r0, r5, #0
 554:	2000115c 	andcs	r1, r0, ip, asr r1
 558:	75672f14 	strbvc	r2, [r7, #-3860]!	; 0xfffff0ec
 55c:	75674b67 	strbvc	r4, [r7, #-2919]!	; 0xfffff499
 560:	4c3f5a59 			; <UNDEFINED> instruction: 0x4c3f5a59
 564:	3d4b5959 	vstrcc.16	s11, [fp, #-178]	; 0xffffff4e	; <UNPREDICTABLE>
 568:	02040200 	andeq	r0, r4, #0, 4
 56c:	00ac7a03 	adceq	r7, ip, r3, lsl #20
 570:	06010402 	streq	r0, [r1], -r2, lsl #8
 574:	0a030658 	beq	c1edc <startup-0x1ff3e124>
 578:	68213d4a 	stmdavs	r1!, {r1, r3, r6, r8, sl, fp, ip, sp}
 57c:	4b4b9167 	blmi	12e4b20 <startup-0x1ed1b4e0>
 580:	924c4b4b 	subls	r4, ip, #76800	; 0x12c00
 584:	02004b3f 	andeq	r4, r0, #64512	; 0xfc00
 588:	58060104 	stmdapl	r6, {r2, r8}
 58c:	02002f06 	andeq	r2, r0, #6, 30
 590:	58060104 	stmdapl	r6, {r2, r8}
 594:	02002f06 	andeq	r2, r0, #6, 30
 598:	58060104 	stmdapl	r6, {r2, r8}
 59c:	02002f06 	andeq	r2, r0, #6, 30
 5a0:	58060104 	stmdapl	r6, {r2, r8}
 5a4:	02212f06 	eoreq	r2, r1, #6, 30
 5a8:	01010006 	tsteq	r1, r6
 5ac:	0000010d 	andeq	r0, r0, sp, lsl #2
 5b0:	009e0002 	addseq	r0, lr, r2
 5b4:	01020000 	mrseq	r0, (UNDEF: 2)
 5b8:	000d0efb 	strdeq	r0, [sp], -fp
 5bc:	01010101 	tsteq	r1, r1, lsl #2
 5c0:	01000000 	mrseq	r0, (UNDEF: 0)
 5c4:	43010000 	movwmi	r0, #4096	; 0x1000
 5c8:	63532f3a 	cmpvs	r3, #58, 30	; 0xe8
 5cc:	6c6f6f68 	stclvs	15, cr6, [pc], #-416	; 434 <startup-0x1ffffbcc>
 5d0:	5441442f 	strbpl	r4, [r1], #-1071	; 0xfffffbd1
 5d4:	2f373130 	svccs	0x00373130
 5d8:	2d706f4d 	ldclcs	15, cr6, [r0, #-308]!	; 0xfffffecc
 5dc:	30544144 	subscc	r4, r4, r4, asr #2
 5e0:	4c2f3731 	stcmi	7, cr3, [pc], #-196	; 524 <startup-0x1ffffadc>
 5e4:	20736261 	rsbscs	r6, r3, r1, ror #4
 5e8:	20646e61 	rsbcs	r6, r4, r1, ror #28
 5ec:	65637845 	strbvs	r7, [r3, #-2117]!	; 0xfffff7bb
 5f0:	73696372 	cmnvc	r9, #-939524095	; 0xc8000001
 5f4:	732f7365 			; <UNDEFINED> instruction: 0x732f7365
 5f8:	706f6f70 	rsbvc	r6, pc, r0, ror pc	; <UNPREDICTABLE>
 5fc:	625f7379 	subsvs	r7, pc, #-469762047	; 0xe4000001
 600:	72617a69 	rsbvc	r7, r1, #430080	; 0x69000
 604:	615f6572 	cmpvs	pc, r2, ror r5	; <UNPREDICTABLE>
 608:	6e657664 	cdpvs	6, 6, cr7, cr5, cr4, {3}
 60c:	65727574 	ldrbvs	r7, [r2, #-1396]!	; 0xfffffa8c
 610:	70730000 	rsbsvc	r0, r3, r0
 614:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
 618:	00632e73 	rsbeq	r2, r3, r3, ror lr
 61c:	73000001 	movwvc	r0, #1
 620:	706f6f70 	rsbvc	r6, pc, r0, ror pc	; <UNPREDICTABLE>
 624:	62782e79 	rsbsvs	r2, r8, #1936	; 0x790
 628:	0001006d 	andeq	r0, r1, sp, rrx
 62c:	69786500 	ldmdbvs	r8!, {r8, sl, sp, lr}^
 630:	62782e74 	rsbsvs	r2, r8, #116, 28	; 0x740
 634:	0001006d 	andeq	r0, r1, sp, rrx
 638:	656e6500 	strbvs	r6, [lr, #-1280]!	; 0xfffffb00
 63c:	782e796d 	stmdavc	lr!, {r0, r2, r3, r5, r6, r8, fp, ip, sp, lr}
 640:	01006d62 	tsteq	r0, r2, ror #26
 644:	70730000 	rsbsvc	r0, r3, r0
 648:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
 64c:	00682e73 	rsbeq	r2, r8, r3, ror lr
 650:	00000001 	andeq	r0, r0, r1
 654:	d4020500 	strle	r0, [r2], #-1280	; 0xfffffb00
 658:	14200012 	strtne	r0, [r0], #-18	; 0xffffffee
 65c:	3d4b4b75 	vstrcc	d20, [fp, #-468]	; 0xfffffe2c
 660:	6875774c 	ldmdavs	r5!, {r2, r3, r6, r8, r9, sl, ip, sp, lr}^
 664:	bb3d3d69 	bllt	f4fc10 <startup-0x1f0b03f0>
 668:	0200913d 	andeq	r9, r0, #1073741839	; 0x4000000f
 66c:	9c080204 	sfmls	f0, 4, [r8], {4}
 670:	01040200 	mrseq	r0, R12_usr
 674:	02003c06 	andeq	r3, r0, #1536	; 0x600
 678:	3a060204 	bcc	180e90 <startup-0x1fe7f170>
 67c:	01040200 	mrseq	r0, R12_usr
 680:	02003c06 	andeq	r3, r0, #1536	; 0x600
 684:	49060204 	stmdbmi	r6, {r2, r9}
 688:	01040200 	mrseq	r0, R12_usr
 68c:	03063c06 	movweq	r3, #27654	; 0x6c06
 690:	4b4c660a 	blmi	1319ec0 <startup-0x1ece6140>
 694:	914b4c91 			; <UNDEFINED> instruction: 0x914b4c91
 698:	75594b4c 	ldrbvc	r4, [r9, #-2892]	; 0xfffff4b4
 69c:	5a3d4b76 	bpl	f5347c <startup-0x1f0acb84>
 6a0:	4b5b8383 	blmi	16e14b4 <startup-0x1e91eb4c>
 6a4:	83835a3d 	orrhi	r5, r3, #249856	; 0x3d000
 6a8:	3d674c5a 	stclcc	12, cr4, [r7, #-360]!	; 0xfffffe98
 6ac:	214b4c3d 	cmpcs	fp, sp, lsr ip
 6b0:	3e21673e 	mcrcc	7, 1, r6, cr1, cr14, {1}
 6b4:	5959594b 	ldmdbpl	r9, {r0, r1, r3, r6, r8, fp, ip, lr}^
 6b8:	01000402 	tsteq	r0, r2, lsl #8
 6bc:	0000c001 	andeq	ip, r0, r1
 6c0:	89000200 	stmdbhi	r0, {r9}
 6c4:	02000000 	andeq	r0, r0, #0
 6c8:	0d0efb01 	vstreq	d15, [lr, #-4]
 6cc:	01010100 	mrseq	r0, (UNDEF: 17)
 6d0:	00000001 	andeq	r0, r0, r1
 6d4:	01000001 	tsteq	r0, r1
 6d8:	552f3a43 	strpl	r3, [pc, #-2627]!	; fffffc9d <enemy_bits+0xdfffe579>
 6dc:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
 6e0:	68616c2f 	stmdavs	r1!, {r0, r1, r2, r3, r5, sl, fp, sp, lr}^
 6e4:	2f676974 	svccs	0x00676974
 6e8:	6e776f44 	cdpvs	15, 7, cr6, cr7, cr4, {2}
 6ec:	64616f6c 	strbtvs	r6, [r1], #-3948	; 0xfffff094
 6f0:	6f4d2f73 	svcvs	0x004d2f73
 6f4:	41442d70 	hvcmi	17104	; 0x42d0
 6f8:	37313054 			; <UNDEFINED> instruction: 0x37313054
 6fc:	73616d2d 	cmnvc	r1, #2880	; 0xb40
 700:	2f726574 	svccs	0x00726574
 704:	2d706f4d 	ldclcs	15, cr6, [r0, #-308]!	; 0xfffffecc
 708:	30544144 	subscc	r4, r4, r4, asr #2
 70c:	6d2d3731 	stcvs	7, cr3, [sp, #-196]!	; 0xffffff3c
 710:	65747361 	ldrbvs	r7, [r4, #-865]!	; 0xfffffc9f
 714:	614c2f72 	hvcvs	49906	; 0xc2f2
 718:	61207362 			; <UNDEFINED> instruction: 0x61207362
 71c:	6520646e 	strvs	r6, [r0, #-1134]!	; 0xfffffb92
 720:	63726578 	cmnvs	r2, #120, 10	; 0x1e000000
 724:	73657369 	cmnvc	r5, #-1543503871	; 0xa4000001
 728:	6f70732f 	svcvs	0x0070732f
 72c:	7379706f 	cmnvc	r9, #111	; 0x6f
 730:	7a69625f 	bvc	1a590b4 <startup-0x1e5a6f4c>
 734:	65727261 	ldrbvs	r7, [r2, #-609]!	; 0xfffffd9f
 738:	7664615f 			; <UNDEFINED> instruction: 0x7664615f
 73c:	75746e65 	ldrbvc	r6, [r4, #-3685]!	; 0xfffff19b
 740:	00006572 	andeq	r6, r0, r2, ror r5
 744:	616c6564 	cmnvs	ip, r4, ror #10
 748:	00632e79 	rsbeq	r2, r3, r9, ror lr
 74c:	00000001 	andeq	r0, r0, r1
 750:	4c020500 	cfstr32mi	mvfx0, [r2], {-0}
 754:	14200015 	strtne	r0, [r0], #-21	; 0xffffffeb
 758:	6767672f 	strbvs	r6, [r7, -pc, lsr #14]!
 75c:	673e683d 			; <UNDEFINED> instruction: 0x673e683d
 760:	2f2f2fbc 	svccs	0x002f2fbc
 764:	02004b3e 	andeq	r4, r0, #63488	; 0xf800
 768:	003d0304 	eorseq	r0, sp, r4, lsl #6
 76c:	2d030402 	cfstrscs	mvf0, [r3, #-8]
 770:	01040200 	mrseq	r0, R12_usr
 774:	5b063c06 	blpl	18f794 <startup-0x1fe7086c>
 778:	23754c4c 	cmncs	r5, #76, 24	; 0x4c00
 77c:	01000302 	tsteq	r0, r2, lsl #6
 780:	Address 0x00000780 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	73736f6c 	cmnvc	r3, #108, 30	; 0x1b0
   4:	73656d5f 	cmnvc	r5, #6080	; 0x17c0
   8:	65676173 	strbvs	r6, [r7, #-371]!	; 0xfffffe8d
   c:	72646900 	rsbvc	r6, r4, #0, 18
  10:	00776f4c 	rsbseq	r6, r7, ip, asr #30
  14:	52636d70 	rsbpl	r6, r3, #112, 26	; 0x1c00
  18:	72657365 	rsbvc	r7, r5, #-1811939327	; 0x94000001
  1c:	00646576 	rsbeq	r6, r4, r6, ror r5
  20:	69747865 	ldmdbvs	r4!, {r0, r2, r5, r6, fp, ip, sp, lr}^
  24:	4c327263 	lfmmi	f7, 4, [r2], #-396	; 0xfffffe74
  28:	5f00776f 	svcpl	0x0000776f
  2c:	69747865 	ldmdbvs	r4!, {r0, r2, r5, r6, fp, ip, sp, lr}^
  30:	79656b00 	stmdbvc	r5!, {r8, r9, fp, sp, lr}^
  34:	72616f62 	rsbvc	r6, r1, #392	; 0x188
  38:	6e695f64 	cdpvs	15, 6, cr5, cr9, cr4, {3}
  3c:	72726574 	rsbsvc	r6, r2, #116, 10	; 0x1d000000
  40:	5f747075 	svcpl	0x00747075
  44:	646e6168 	strbtvs	r6, [lr], #-360	; 0xfffffe98
  48:	0072656c 	rsbseq	r6, r2, ip, ror #10
  4c:	69747865 	ldmdbvs	r4!, {r0, r2, r5, r6, fp, ip, sp, lr}^
  50:	00317263 	eorseq	r7, r1, r3, ror #4
  54:	69747865 	ldmdbvs	r4!, {r0, r2, r5, r6, fp, ip, sp, lr}^
  58:	00327263 	eorseq	r7, r2, r3, ror #4
  5c:	69747865 	ldmdbvs	r4!, {r0, r2, r5, r6, fp, ip, sp, lr}^
  60:	00337263 	eorseq	r7, r3, r3, ror #4
  64:	69747865 	ldmdbvs	r4!, {r0, r2, r5, r6, fp, ip, sp, lr}^
  68:	00347263 	eorseq	r7, r4, r3, ror #4
  6c:	6d656e65 	stclvs	14, cr6, [r5, #-404]!	; 0xfffffe6c
  70:	00785f79 	rsbseq	r5, r8, r9, ror pc
  74:	6d656e65 	stclvs	14, cr6, [r5, #-404]!	; 0xfffffe6c
  78:	00795f79 	rsbseq	r5, r9, r9, ror pc
  7c:	4872646f 	ldmdami	r2!, {r0, r1, r2, r3, r5, r6, sl, sp, lr}^
  80:	00686769 	rsbeq	r6, r8, r9, ror #14
  84:	20554e47 	subscs	r4, r5, r7, asr #28
  88:	20393943 	eorscs	r3, r9, r3, asr #18
  8c:	2e332e36 	mrccs	14, 1, r2, cr3, cr6, {1}
  90:	30322031 	eorscc	r2, r2, r1, lsr r0
  94:	32303731 	eorscc	r3, r0, #12845056	; 0xc40000
  98:	28203531 	stmdacs	r0!, {r0, r4, r5, r8, sl, ip, sp}
  9c:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
  a0:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
  a4:	52415b20 	subpl	r5, r1, #32, 22	; 0x8000
  a8:	6d652f4d 	stclvs	15, cr2, [r5, #-308]!	; 0xfffffecc
  ac:	64646562 	strbtvs	r6, [r4], #-1378	; 0xfffffa9e
  b0:	362d6465 	strtcc	r6, [sp], -r5, ror #8
  b4:	6172622d 	cmnvs	r2, sp, lsr #4
  b8:	2068636e 	rsbcs	r6, r8, lr, ror #6
  bc:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
  c0:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
  c4:	35343220 	ldrcc	r3, [r4, #-544]!	; 0xfffffde0
  c8:	5d323135 	ldfpls	f3, [r2, #-212]!	; 0xffffff2c
  cc:	746d2d20 	strbtvc	r2, [sp], #-3360	; 0xfffff2e0
  d0:	626d7568 	rsbvs	r7, sp, #104, 10	; 0x1a000000
  d4:	616d2d20 	cmnvs	sp, r0, lsr #26
  d8:	3d686372 	stclcc	3, cr6, [r8, #-456]!	; 0xfffffe38
  dc:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
  e0:	206d2d36 	rsbcs	r2, sp, r6, lsr sp
  e4:	6c666d2d 	stclvs	13, cr6, [r6], #-180	; 0xffffff4c
  e8:	2d74616f 	ldfcse	f6, [r4, #-444]!	; 0xfffffe44
  ec:	3d696261 	sfmcc	f6, 2, [r9, #-388]!	; 0xfffffe7c
  f0:	74666f73 	strbtvc	r6, [r6], #-3955	; 0xfffff08d
  f4:	746d2d20 	strbtvc	r2, [sp], #-3360	; 0xfffff2e0
  f8:	626d7568 	rsbvs	r7, sp, #104, 10	; 0x1a000000
  fc:	616d2d20 	cmnvs	sp, r0, lsr #26
 100:	3d686372 	stclcc	3, cr6, [r8, #-456]!	; 0xfffffe38
 104:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
 108:	206d2d36 	rsbcs	r2, sp, r6, lsr sp
 10c:	2d20672d 	stccs	7, cr6, [r0, #-180]!	; 0xffffff4c
 110:	2d20304f 	stccs	0, cr3, [r0, #-316]!	; 0xfffffec4
 114:	3d647473 	cfstrdcc	mvd7, [r4, #-460]!	; 0xfffffe34
 118:	00393963 	eorseq	r3, r9, r3, ror #18
 11c:	6f6f7073 	svcvs	0x006f7073
 120:	735f7970 	cmpvc	pc, #112, 18	; 0x1c0000
 124:	74697270 	strbtvc	r7, [r9], #-624	; 0xfffffd90
 128:	70730065 	rsbsvc	r0, r3, r5, rrx
 12c:	79706f6f 	ldmdbvc	r0!, {r0, r1, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 130:	7a697300 	bvc	1a5cd38 <startup-0x1e5a32c8>
 134:	70797465 	rsbsvc	r7, r9, r5, ror #8
 138:	6d630065 	stclvs	0, cr0, [r3, #-404]!	; 0xfffffe6c
 13c:	48726370 	ldmdami	r2!, {r4, r5, r6, r8, r9, sp, lr}^
 140:	00686769 	rsbeq	r6, r8, r9, ror #14
 144:	63706d63 	cmnvs	r0, #6336	; 0x18c0
 148:	776f4c72 			; <UNDEFINED> instruction: 0x776f4c72
 14c:	69616d00 	stmdbvs	r1!, {r8, sl, fp, sp, lr}^
 150:	656d006e 	strbvs	r0, [sp, #-110]!	; 0xffffff92
 154:	706d726d 	rsbvc	r7, sp, sp, ror #4
 158:	00776f4c 	rsbseq	r6, r7, ip, asr #30
 15c:	74697865 	strbtvc	r7, [r9], #-2149	; 0xfffff79b
 160:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
 164:	656b0073 	strbvs	r0, [fp, #-115]!	; 0xffffff8d
 168:	616f6279 	smcvs	63017	; 0xf629
 16c:	765f6472 			; <UNDEFINED> instruction: 0x765f6472
 170:	77006c61 	strvc	r6, [r0, -r1, ror #24]
 174:	6d5f6e69 	ldclvs	14, cr6, [pc, #-420]	; ffffffd8 <enemy_bits+0xdfffe8b4>
 178:	61737365 	cmnvs	r3, r5, ror #6
 17c:	6f006567 	svcvs	0x00006567
 180:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 184:	6f670072 	svcvs	0x00670072
 188:	79786f74 	ldmdbvc	r8!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 18c:	74786500 	ldrbtvc	r6, [r8], #-1280	; 0xfffffb00
 190:	33726369 	cmncc	r2, #-1543503871	; 0xa4000001
 194:	00776f4c 	rsbseq	r6, r7, ip, asr #30
 198:	656d6167 	strbvs	r6, [sp, #-359]!	; 0xfffffe99
 19c:	65766f5f 	ldrbvs	r6, [r6, #-3935]!	; 0xfffff0a1
 1a0:	656d5f72 	strbvs	r5, [sp, #-3954]!	; 0xfffff08e
 1a4:	67617373 			; <UNDEFINED> instruction: 0x67617373
 1a8:	69770065 	ldmdbvs	r7!, {r0, r2, r5, r6}^
 1ac:	74735f6e 	ldrbtvc	r5, [r3], #-3950	; 0xfffff092
 1b0:	00657461 	rsbeq	r7, r5, r1, ror #8
 1b4:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 1b8:	656d5f74 	strbvs	r5, [sp, #-3956]!	; 0xfffff08c
 1bc:	67617373 			; <UNDEFINED> instruction: 0x67617373
 1c0:	77003265 	strvc	r3, [r0, -r5, ror #4]
 1c4:	68746469 	ldmdavs	r4!, {r0, r3, r5, r6, sl, sp, lr}^
 1c8:	63736100 	cmnvs	r3, #0, 2
 1cc:	775f6969 	ldrbvc	r6, [pc, -r9, ror #18]
 1d0:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
 1d4:	7274735f 	rsbsvc	r7, r4, #2080374785	; 0x7c000001
 1d8:	00676e69 	rsbeq	r6, r7, r9, ror #28
 1dc:	65766f6d 	ldrbvs	r6, [r6, #-3949]!	; 0xfffff093
 1e0:	736f7000 	cmnvc	pc, #0
 1e4:	6f697469 	svcvs	0x00697469
 1e8:	68635f6e 	stmdavs	r3!, {r1, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
 1ec:	696b6365 	stmdbvs	fp!, {r0, r2, r5, r6, r8, r9, sp, lr}^
 1f0:	6500676e 	strvs	r6, [r0, #-1902]	; 0xfffff892
 1f4:	5f746978 	svcpl	0x00746978
 1f8:	6e696f70 	mcrvs	15, 3, r6, cr9, cr0, {3}
 1fc:	00726574 	rsbseq	r6, r2, r4, ror r5
 200:	74697865 	strbtvc	r7, [r9], #-2149	; 0xfffff79b
 204:	6500785f 	strvs	r7, [r0, #-2143]	; 0xfffff7a1
 208:	5f746978 	svcpl	0x00746978
 20c:	736f0079 	cmnvc	pc, #121	; 0x79
 210:	64656570 	strbtvs	r6, [r5], #-1392	; 0xfffffa90
 214:	656b0072 	strbvs	r0, [fp, #-114]!	; 0xffffff8e
 218:	6d006279 	sfmvs	f6, 4, [r0, #-484]	; 0xfffffe1c
 21c:	6d726d65 	ldclvs	13, cr6, [r2, #-404]!	; 0xfffffe6c
 220:	67694870 			; <UNDEFINED> instruction: 0x67694870
 224:	53500068 	cmppl	r0, #104	; 0x68
 228:	54495250 	strbpl	r5, [r9], #-592	; 0xfffffdb0
 22c:	53740045 	cmnpl	r4, #69	; 0x45
 230:	74697270 	strbtvc	r7, [r9], #-624	; 0xfffffd90
 234:	73610065 	cmnvc	r1, #101	; 0x65
 238:	64696963 	strbtvs	r6, [r9], #-2403	; 0xfffff69d
 23c:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 240:	695f7961 	ldmdbvs	pc, {r0, r5, r6, r8, fp, ip, sp, lr}^	; <UNPREDICTABLE>
 244:	0074696e 	rsbseq	r6, r4, lr, ror #18
 248:	5359535f 	cmppl	r9, #2080374785	; 0x7c000001
 24c:	00474643 	subeq	r4, r7, r3, asr #12
 250:	532f3a43 			; <UNDEFINED> instruction: 0x532f3a43
 254:	6f6f6863 	svcvs	0x006f6863
 258:	41442f6c 	cmpmi	r4, ip, ror #30
 25c:	37313054 			; <UNDEFINED> instruction: 0x37313054
 260:	706f4d2f 	rsbvc	r4, pc, pc, lsr #26
 264:	5441442d 	strbpl	r4, [r1], #-1069	; 0xfffffbd3
 268:	2f373130 	svccs	0x00373130
 26c:	7362614c 	cmnvc	r2, #76, 2
 270:	646e6120 	strbtvs	r6, [lr], #-288	; 0xfffffee0
 274:	63784520 	cmnvs	r8, #32, 10	; 0x8000000
 278:	69637265 	stmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 27c:	2f736573 	svccs	0x00736573
 280:	6f6f7073 	svcvs	0x006f7073
 284:	5f737970 	svcpl	0x00737970
 288:	617a6962 	cmnvs	sl, r2, ror #18
 28c:	5f657272 	svcpl	0x00657272
 290:	65766461 	ldrbvs	r6, [r6, #-1121]!	; 0xfffffb9f
 294:	7275746e 	rsbsvc	r7, r5, #1845493760	; 0x6e000000
 298:	74732f65 	ldrbtvc	r2, [r3], #-3941	; 0xfffff09b
 29c:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
 2a0:	00632e70 	rsbeq	r2, r3, r0, ror lr
 2a4:	72737472 	rsbsvc	r7, r3, #1912602624	; 0x72000000
 2a8:	69786500 	ldmdbvs	r8!, {r8, sl, sp, lr}^
 2ac:	70735f74 	rsbsvc	r5, r3, r4, ror pc
 2b0:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
 2b4:	736e7500 	cmnvc	lr, #0, 10
 2b8:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
 2bc:	68632064 	stmdavs	r3!, {r2, r5, r6, sp}^
 2c0:	63007261 	movwvs	r7, #609	; 0x261
 2c4:	7263706d 	rsbvc	r7, r3, #109	; 0x6d
 2c8:	74786500 	ldrbtvc	r6, [r8], #-1280	; 0xfffffb00
 2cc:	00726369 	rsbseq	r6, r2, r9, ror #6
 2d0:	6f6f7073 	svcvs	0x006f7073
 2d4:	705f7970 	subsvc	r7, pc, r0, ror r9	; <UNPREDICTABLE>
 2d8:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
 2dc:	50007265 	andpl	r7, r0, r5, ror #4
 2e0:	49525053 	ldmdbmi	r2, {r0, r1, r4, r6, ip, lr}^
 2e4:	4f5f4554 	svcmi	0x005f4554
 2e8:	43454a42 	movtmi	r4, #23106	; 0x5a42
 2ec:	6f700054 	svcvs	0x00700054
 2f0:	00785f73 	rsbseq	r5, r8, r3, ror pc
 2f4:	69747865 	ldmdbvs	r4!, {r0, r2, r5, r6, fp, ip, sp, lr}^
 2f8:	4c347263 	lfmmi	f7, 4, [r4], #-396	; 0xfffffe74
 2fc:	7300776f 	movwvc	r7, #1903	; 0x76f
 300:	706f6f70 	rsbvc	r6, pc, r0, ror pc	; <UNPREDICTABLE>
 304:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
 308:	65680073 	strbvs	r0, [r8, #-115]!	; 0xffffff8d
 30c:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
 310:	656e6500 	strbvs	r6, [lr, #-1280]!	; 0xfffffb00
 314:	735f796d 	cmpvc	pc, #1785856	; 0x1b4000
 318:	74697270 	strbtvc	r7, [r9], #-624	; 0xfffffd90
 31c:	675f0065 	ldrbvs	r0, [pc, -r5, rrx]
 320:	006f6970 	rsbeq	r6, pc, r0, ror r9	; <UNPREDICTABLE>
 324:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 328:	656d5f74 	strbvs	r5, [sp, #-3956]!	; 0xfffff08c
 32c:	67617373 			; <UNDEFINED> instruction: 0x67617373
 330:	73003165 	movwvc	r3, #357	; 0x165
 334:	706f6f70 	rsbvc	r6, pc, r0, ror pc	; <UNPREDICTABLE>
 338:	75635f79 	strbvc	r5, [r3, #-3961]!	; 0xfffff087
 33c:	6e657272 	mcrvs	2, 3, r7, cr5, cr2, {3}
 340:	00785f74 	rsbseq	r5, r8, r4, ror pc
 344:	69747865 	ldmdbvs	r4!, {r0, r2, r5, r6, fp, ip, sp, lr}^
 348:	48337263 	ldmdami	r3!, {r0, r1, r5, r6, r9, ip, sp, lr}
 34c:	00686769 	rsbeq	r6, r8, r9, ror #14
 350:	6f6f7073 	svcvs	0x006f7073
 354:	635f7970 	cmpvs	pc, #112, 18	; 0x1c0000
 358:	65727275 	ldrbvs	r7, [r2, #-629]!	; 0xfffffd8b
 35c:	795f746e 	ldmdbvc	pc, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
 360:	6d656d00 	stclvs	13, cr6, [r5, #-0]
 364:	00706d72 	rsbseq	r6, r0, r2, ror sp
 368:	6279656b 	rsbsvs	r6, r9, #448790528	; 0x1ac00000
 36c:	6472616f 	ldrbtvs	r6, [r2], #-367	; 0xfffffe91
 370:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
 374:	68730074 	ldmdavs	r3!, {r2, r4, r5, r6}^
 378:	2074726f 	rsbscs	r7, r4, pc, ror #4
 37c:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
 380:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
 384:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
 388:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
 38c:	6f70004f 	svcvs	0x0070004f
 390:	00795f73 	rsbseq	r5, r9, r3, ror pc
 394:	69747865 	ldmdbvs	r4!, {r0, r2, r5, r6, fp, ip, sp, lr}^
 398:	48317263 	ldmdami	r1!, {r0, r1, r5, r6, r9, ip, sp, lr}
 39c:	00686769 	rsbeq	r6, r8, r9, ror #14
 3a0:	74697865 	strbtvc	r7, [r9], #-2149	; 0xfffff79b
 3a4:	63736100 	cmnvs	r3, #0, 2
 3a8:	635f6969 	cmpvs	pc, #1720320	; 0x1a4000
 3ac:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
 3b0:	7263735f 	rsbvc	r7, r3, #2080374785	; 0x7c000001
 3b4:	006e6565 	rsbeq	r6, lr, r5, ror #10
 3b8:	7379735f 	cmnvc	r9, #2080374785	; 0x7c000001
 3bc:	00676663 	rsbeq	r6, r7, r3, ror #12
 3c0:	6d656e65 	stclvs	14, cr6, [r5, #-404]!	; 0xfffffe6c
 3c4:	6f705f79 	svcvs	0x00705f79
 3c8:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
 3cc:	64690072 	strbtvs	r0, [r9], #-114	; 0xffffff8e
 3d0:	67694872 			; <UNDEFINED> instruction: 0x67694872
 3d4:	53740068 	cmnpl	r4, #104	; 0x68
 3d8:	74697270 	strbtvc	r7, [r9], #-624	; 0xfffffd90
 3dc:	6a624f65 	bvs	1894178 <startup-0x1e76be88>
 3e0:	656e6500 	strbvs	r6, [lr, #-1280]!	; 0xfffffb00
 3e4:	625f796d 	subsvs	r7, pc, #1785856	; 0x1b4000
 3e8:	00737469 	rsbseq	r7, r3, r9, ror #8
 3ec:	69747865 	ldmdbvs	r4!, {r0, r2, r5, r6, fp, ip, sp, lr}^
 3f0:	4c317263 	lfmmi	f7, 4, [r1], #-396	; 0xfffffe74
 3f4:	6400776f 	strvs	r7, [r0], #-1903	; 0xfffff891
 3f8:	00776172 	rsbseq	r6, r7, r2, ror r1
 3fc:	5f746573 	svcpl	0x00746573
 400:	65657073 	strbvs	r7, [r5, #-115]!	; 0xffffff8d
 404:	455f0064 	ldrbmi	r0, [pc, #-100]	; 3a8 <startup-0x1ffffc58>
 408:	00495458 	subeq	r5, r9, r8, asr r4
 40c:	5f707061 	svcpl	0x00707061
 410:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 414:	74786500 	ldrbtvc	r6, [r8], #-1280	; 0xfffffb00
 418:	32726369 	rsbscc	r6, r2, #-1543503871	; 0xa4000001
 41c:	68676948 	stmdavs	r7!, {r3, r6, r8, fp, sp, lr}^
 420:	69786500 	ldmdbvs	r8!, {r8, sl, sp, lr}^
 424:	70735f74 	rsbsvc	r5, r3, r4, ror pc
 428:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
 42c:	696f705f 	stmdbvs	pc!, {r0, r1, r2, r3, r4, r6, ip, sp, lr}^	; <UNPREDICTABLE>
 430:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
 434:	70757000 	rsbsvc	r7, r5, r0
 438:	66007264 	strvs	r7, [r0], -r4, ror #4
 43c:	00727374 	rsbseq	r7, r2, r4, ror r3
 440:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 444:	70616d5f 	rsbvc	r6, r1, pc, asr sp
 448:	6972675f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, sp, lr}^
 44c:	6e650064 	cdpvs	0, 6, cr0, cr5, cr4, {3}
 450:	00796d65 	rsbseq	r6, r9, r5, ror #26
 454:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
 458:	6d700072 	ldclvs	0, cr0, [r0, #-456]!	; 0xfffffe38
 45c:	74794263 	ldrbtvc	r4, [r9], #-611	; 0xfffffd9d
 460:	73003365 	movwvc	r3, #869	; 0x365
 464:	00747270 	rsbseq	r7, r4, r0, ror r2
 468:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 46c:	00707574 	rsbseq	r7, r0, r4, ror r5
 470:	69747865 	ldmdbvs	r4!, {r0, r2, r5, r6, fp, ip, sp, lr}^
 474:	48347263 	ldmdami	r4!, {r0, r1, r5, r6, r9, ip, sp, lr}
 478:	00686769 	rsbeq	r6, r8, r9, ror #14
 47c:	61647075 	smcvs	18181	; 0x4705
 480:	655f6574 	ldrbvs	r6, [pc, #-1396]	; ffffff14 <enemy_bits+0xdfffe7f0>
 484:	796d656e 	stmdbvc	sp!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
 488:	736f705f 	cmnvc	pc, #95	; 0x5f
 48c:	6f697469 	svcvs	0x00697469
 490:	7563006e 	strbvc	r0, [r3, #-110]!	; 0xffffff92
 494:	735f7272 	cmpvc	pc, #536870919	; 0x20000007
 498:	65636170 	strbvs	r6, [r3, #-368]!	; 0xfffffe90
 49c:	72696400 	rsbvc	r6, r9, #0, 8
 4a0:	6400785f 	strvs	r7, [r0], #-2143	; 0xfffff7a1
 4a4:	795f7269 	ldmdbvc	pc, {r0, r3, r5, r6, r9, ip, sp, lr}^	; <UNPREDICTABLE>
 4a8:	72646f00 	rsbvc	r6, r4, #0, 30
 4ac:	00776f4c 	rsbseq	r6, r7, ip, asr #30
 4b0:	65697773 	strbvs	r7, [r9, #-1907]!	; 0xfffff88d
 4b4:	70730072 	rsbsvc	r0, r3, r2, ror r0
 4b8:	79706f6f 	ldmdbvc	r0!, {r0, r1, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 4bc:	7300785f 	movwvc	r7, #2143	; 0x85f
 4c0:	706f6f70 	rsbvc	r6, pc, r0, ror pc	; <UNPREDICTABLE>
 4c4:	00795f79 	rsbseq	r5, r9, r9, ror pc
 4c8:	4f454750 	svcmi	0x00454750
 4cc:	5254454d 	subspl	r4, r4, #322961408	; 0x13400000
 4d0:	69730059 	ldmdbvs	r3!, {r0, r3, r4, r6}^
 4d4:	785f657a 	ldmdavc	pc, {r1, r3, r4, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
 4d8:	7a697300 	bvc	1a5d0e0 <startup-0x1e5a2f20>
 4dc:	00795f65 	rsbseq	r5, r9, r5, ror #30
 4e0:	77617264 	strbvc	r7, [r1, -r4, ror #4]!
 4e4:	6a626f5f 	bvs	189c268 <startup-0x1e763d98>
 4e8:	00746365 	rsbseq	r6, r4, r5, ror #6
 4ec:	656c6573 	strbvs	r6, [ip, #-1395]!	; 0xfffffa8d
 4f0:	635f7463 	cmpvs	pc, #1660944384	; 0x63000000
 4f4:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
 4f8:	656c6c6f 	strbvs	r6, [ip, #-3183]!	; 0xfffff391
 4fc:	72670072 	rsbvc	r0, r7, #114	; 0x72
 500:	69687061 	stmdbvs	r8!, {r0, r5, r6, ip, sp, lr}^
 504:	65725f63 	ldrbvs	r5, [r2, #-3939]!	; 0xfffff09d
 508:	645f6461 	ldrbvs	r6, [pc], #-1121	; 510 <startup-0x1ffffaf0>
 50c:	00617461 	rsbeq	r7, r1, r1, ror #8
 510:	65676170 	strbvs	r6, [r7, #-368]!	; 0xfffffe90
 514:	78697000 	stmdavc	r9!, {ip, sp, lr}^
 518:	74006c65 	strvc	r6, [r0], #-3173	; 0xfffff39b
 51c:	6e696f50 	mcrvs	15, 3, r6, cr9, cr0, {2}
 520:	4f500074 	svcmi	0x00500074
 524:	00544e49 	subseq	r4, r4, r9, asr #28
 528:	63615f78 	cmnvs	r1, #120, 30	; 0x1e0
 52c:	6c617574 	cfstr64vs	mvdx7, [r1], #-464	; 0xfffffe30
 530:	2f3a4300 	svccs	0x003a4300
 534:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
 538:	616c2f73 	smcvs	49907	; 0xc2f3
 53c:	67697468 	strbvs	r7, [r9, -r8, ror #8]!
 540:	776f442f 	strbvc	r4, [pc, -pc, lsr #8]!
 544:	616f6c6e 	cmnvs	pc, lr, ror #24
 548:	4d2f7364 	stcmi	3, cr7, [pc, #-400]!	; 3c0 <startup-0x1ffffc40>
 54c:	442d706f 	strtmi	r7, [sp], #-111	; 0xffffff91
 550:	31305441 	teqcc	r0, r1, asr #8
 554:	616d2d37 	cmnvs	sp, r7, lsr sp
 558:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
 55c:	706f4d2f 	rsbvc	r4, pc, pc, lsr #26
 560:	5441442d 	strbpl	r4, [r1], #-1069	; 0xfffffbd3
 564:	2d373130 	ldfcss	f3, [r7, #-192]!	; 0xffffff40
 568:	7473616d 	ldrbtvc	r6, [r3], #-365	; 0xfffffe93
 56c:	4c2f7265 	sfmmi	f7, 4, [pc], #-404	; 3e0 <startup-0x1ffffc20>
 570:	20736261 	rsbscs	r6, r3, r1, ror #4
 574:	20646e61 	rsbcs	r6, r4, r1, ror #28
 578:	72657865 	rsbvc	r7, r5, #6619136	; 0x650000
 57c:	65736963 	ldrbvs	r6, [r3, #-2403]!	; 0xfffff69d
 580:	70732f73 	rsbsvc	r2, r3, r3, ror pc
 584:	79706f6f 	ldmdbvc	r0!, {r0, r1, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 588:	69625f73 	stmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 58c:	7272617a 	rsbsvc	r6, r2, #-2147483618	; 0x8000001e
 590:	64615f65 	strbtvs	r5, [r1], #-3941	; 0xfffff09b
 594:	746e6576 	strbtvc	r6, [lr], #-1398	; 0xfffffa8a
 598:	2f657275 	svccs	0x00657275
 59c:	70617267 	rsbvc	r7, r1, r7, ror #4
 5a0:	64636968 	strbtvs	r6, [r3], #-2408	; 0xfffff698
 5a4:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 5a8:	632e7961 			; <UNDEFINED> instruction: 0x632e7961
 5ac:	61726700 	cmnvs	r2, r0, lsl #14
 5b0:	63696870 	cmnvs	r9, #112, 16	; 0x700000
 5b4:	6972775f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}^
 5b8:	74006574 	strvc	r6, [r0], #-1396	; 0xfffffa8c
 5bc:	00706d65 	rsbseq	r6, r0, r5, ror #26
 5c0:	70617267 	rsbvc	r7, r1, r7, ror #4
 5c4:	5f636968 	svcpl	0x00636968
 5c8:	6c727463 	cfldrdvs	mvd7, [r2], #-396	; 0xfffffe74
 5cc:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
 5d0:	656c635f 	strbvs	r6, [ip, #-863]!	; 0xfffffca1
 5d4:	63007261 	movwvs	r7, #609	; 0x261
 5d8:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
 5dc:	725f6c6f 	subsvc	r6, pc, #28416	; 0x6f00
 5e0:	73696765 	cmnvc	r9, #26476544	; 0x1940000
 5e4:	00726574 	rsbseq	r6, r2, r4, ror r5
 5e8:	70617267 	rsbvc	r7, r1, r7, ror #4
 5ec:	5f636968 	svcpl	0x00636968
 5f0:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 5f4:	696c6169 	stmdbvs	ip!, {r0, r3, r5, r6, r8, sp, lr}^
 5f8:	6700657a 	smlsdxvs	r0, sl, r5, r6
 5fc:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
 600:	635f6369 	cmpvs	pc, #-1543503871	; 0xa4000001
 604:	5f6c7274 	svcpl	0x006c7274
 608:	5f746962 	svcpl	0x00746962
 60c:	00746573 	rsbseq	r6, r4, r3, ror r5
 610:	6f654774 	svcvs	0x00654774
 614:	7274656d 	rsbsvc	r6, r4, #457179136	; 0x1b400000
 618:	69750079 	ldmdbvs	r5!, {r0, r3, r4, r5, r6}^
 61c:	5f38746e 	svcpl	0x0038746e
 620:	72670074 	rsbvc	r0, r7, #116	; 0x74
 624:	69687061 	stmdbvs	r8!, {r0, r5, r6, ip, sp, lr}^
 628:	73696463 	cmnvc	r9, #1660944384	; 0x63000000
 62c:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 630:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
 634:	69640074 	stmdbvs	r4!, {r2, r4, r5, r6}^
 638:	616c7073 	smcvs	50947	; 0xc703
 63c:	75625f79 	strbvc	r5, [r2, #-3961]!	; 0xfffff087
 640:	735f7973 	cmpvc	pc, #1884160	; 0x1cc000
 644:	75746174 	ldrbvc	r6, [r4, #-372]!	; 0xfffffe8c
 648:	616d0073 	smcvs	53251	; 0xd003
 64c:	67006b73 	smlsdxvs	r0, r3, fp, r6
 650:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
 654:	775f6369 	ldrbvc	r6, [pc, -r9, ror #6]
 658:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
 65c:	7461645f 	strbtvc	r6, [r1], #-1119	; 0xfffffba1
 660:	65730061 	ldrbvs	r0, [r3, #-97]!	; 0xffffff9f
 664:	626f5f74 	rsbvs	r5, pc, #116, 30	; 0x1d0
 668:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
 66c:	6570735f 	ldrbvs	r7, [r0, #-863]!	; 0xfffffca1
 670:	67006465 	strvs	r6, [r0, -r5, ror #8]
 674:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
 678:	775f6369 	ldrbvc	r6, [pc, -r9, ror #6]
 67c:	5f746961 	svcpl	0x00746961
 680:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
 684:	6e690079 	mcrvs	0, 3, r0, cr9, cr9, {3}
 688:	00786564 	rsbseq	r6, r8, r4, ror #10
 68c:	61656c63 	cmnvs	r5, r3, ror #24
 690:	626f5f72 	rsbvs	r5, pc, #456	; 0x1c8
 694:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
 698:	624f7400 	subvs	r7, pc, #0, 8
 69c:	7267006a 	rsbvc	r0, r7, #106	; 0x6a
 6a0:	69687061 	stmdbvs	r8!, {r0, r5, r6, ip, sp, lr}^
 6a4:	65725f63 	ldrbvs	r5, [r2, #-3939]!	; 0xfffff09d
 6a8:	6e006461 	cdpvs	4, 0, cr6, cr0, cr1, {3}
 6ac:	6f706d75 	svcvs	0x00706d75
 6b0:	73746e69 	cmnvc	r4, #1680	; 0x690
 6b4:	766f6d00 	strbtvc	r6, [pc], -r0, lsl #26
 6b8:	626f5f65 	rsbvs	r5, pc, #404	; 0x194
 6bc:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
 6c0:	61726700 	cmnvs	r2, r0, lsl #14
 6c4:	63696870 	cmnvs	r9, #112, 16	; 0x700000
 6c8:	6972775f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}^
 6cc:	635f6574 	cmpvs	pc, #116, 10	; 0x1d000000
 6d0:	616d6d6f 	cmnvs	sp, pc, ror #26
 6d4:	5000646e 	andpl	r6, r0, lr, ror #8
 6d8:	454a424f 	strbmi	r4, [sl, #-591]	; 0xfffffdb1
 6dc:	67005443 	strvs	r5, [r0, -r3, asr #8]
 6e0:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
 6e4:	635f6369 	cmpvs	pc, #-1543503871	; 0xa4000001
 6e8:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
 6ec:	7263735f 	rsbvc	r7, r3, #2080374785	; 0x7c000001
 6f0:	006e6565 	rsbeq	r6, lr, r5, ror #10
 6f4:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
 6f8:	65746361 	ldrbvs	r6, [r4, #-865]!	; 0xfffffc9f
 6fc:	6f630072 	svcvs	0x00630072
 700:	6e6d756c 	cdpvs	5, 6, cr7, cr13, cr12, {3}
 704:	74796200 	ldrbtvc	r6, [r9], #-512	; 0xfffffe00
 708:	65720065 	ldrbvs	r0, [r2, #-101]!	; 0xffffff9b
 70c:	6e727574 	mrcvs	5, 3, r7, cr2, cr4, {3}
 710:	6c61765f 	stclvs	6, cr7, [r1], #-380	; 0xfffffe84
 714:	61006575 	tstvs	r0, r5, ror r5
 718:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 71c:	6165725f 	cmnvs	r5, pc, asr r2
 720:	74735f64 	ldrbtvc	r5, [r3], #-3940	; 0xfffff09c
 724:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
 728:	736f7000 	cmnvc	pc, #0
 72c:	6f635f74 	svcvs	0x00635f74
 730:	6e616d6d 	cdpvs	13, 6, cr6, cr1, cr13, {3}
 734:	65645f64 	strbvs	r5, [r4, #-3940]!	; 0xfffff09c
 738:	0079616c 	rsbseq	r6, r9, ip, ror #2
 73c:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
 740:	72775f69 	rsbsvc	r5, r7, #420	; 0x1a4
 744:	5f657469 	svcpl	0x00657469
 748:	61746164 	cmnvs	r4, r4, ror #2
 74c:	63736100 	cmnvs	r3, #0, 2
 750:	725f6969 	subsvc	r6, pc, #1720320	; 0x1a4000
 754:	5f646165 	svcpl	0x00646165
 758:	746e6f63 	strbtvc	r6, [lr], #-3939	; 0xfffff09d
 75c:	6c6c6f72 	stclvs	15, cr6, [ip], #-456	; 0xfffffe38
 760:	61007265 	tstvs	r0, r5, ror #4
 764:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 768:	7274635f 	rsbsvc	r6, r4, #2080374785	; 0x7c000001
 76c:	69625f6c 	stmdbvs	r2!, {r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
 770:	65735f74 	ldrbvs	r5, [r3, #-3956]!	; 0xfffff08c
 774:	6f700074 	svcvs	0x00700074
 778:	765f7472 			; <UNDEFINED> instruction: 0x765f7472
 77c:	61006c61 	tstvs	r0, r1, ror #24
 780:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 784:	6972775f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}^
 788:	635f6574 	cmpvs	pc, #116, 10	; 0x1d000000
 78c:	6100646d 	tstvs	r0, sp, ror #8
 790:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
 794:	65007373 	strvs	r7, [r0, #-883]	; 0xfffffc8d
 798:	7974706d 	ldmdbvc	r4!, {r0, r2, r3, r5, r6, ip, sp, lr}^
 79c:	63736100 	cmnvs	r3, #0, 2
 7a0:	635f6969 	cmpvs	pc, #1720320	; 0x1a4000
 7a4:	616d6d6f 	cmnvs	sp, pc, ror #26
 7a8:	4300646e 	movwmi	r6, #1134	; 0x46e
 7ac:	73552f3a 	cmpvc	r5, #58, 30	; 0xe8
 7b0:	2f737265 	svccs	0x00737265
 7b4:	7468616c 	strbtvc	r6, [r8], #-364	; 0xfffffe94
 7b8:	442f6769 	strtmi	r6, [pc], #-1897	; 7c0 <startup-0x1ffff840>
 7bc:	6c6e776f 	stclvs	7, cr7, [lr], #-444	; 0xfffffe44
 7c0:	7364616f 	cmnvc	r4, #-1073741797	; 0xc000001b
 7c4:	706f4d2f 	rsbvc	r4, pc, pc, lsr #26
 7c8:	5441442d 	strbpl	r4, [r1], #-1069	; 0xfffffbd3
 7cc:	2d373130 	ldfcss	f3, [r7, #-192]!	; 0xffffff40
 7d0:	7473616d 	ldrbtvc	r6, [r3], #-365	; 0xfffffe93
 7d4:	4d2f7265 	sfmmi	f7, 4, [pc, #-404]!	; 648 <startup-0x1ffff9b8>
 7d8:	442d706f 	strtmi	r7, [sp], #-111	; 0xffffff91
 7dc:	31305441 	teqcc	r0, r1, asr #8
 7e0:	616d2d37 	cmnvs	sp, r7, lsr sp
 7e4:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
 7e8:	62614c2f 	rsbvs	r4, r1, #12032	; 0x2f00
 7ec:	6e612073 	mcrvs	0, 3, r2, cr1, cr3, {3}
 7f0:	78652064 	stmdavc	r5!, {r2, r5, r6, sp}^
 7f4:	69637265 	stmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 7f8:	2f736573 	svccs	0x00736573
 7fc:	6f6f7073 	svcvs	0x006f7073
 800:	5f737970 	svcpl	0x00737970
 804:	617a6962 	cmnvs	sl, r2, ror #18
 808:	5f657272 	svcpl	0x00657272
 80c:	65766461 	ldrbvs	r6, [r6, #-1121]!	; 0xfffffb9f
 810:	7275746e 	rsbsvc	r7, r5, #1845493760	; 0x6e000000
 814:	73612f65 	cmnvc	r1, #404	; 0x194
 818:	64696963 	strbtvs	r6, [r9], #-2403	; 0xfffff69d
 81c:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 820:	632e7961 			; <UNDEFINED> instruction: 0x632e7961
 824:	63736100 	cmnvs	r3, #0, 2
 828:	635f6969 	cmpvs	pc, #1720320	; 0x1a4000
 82c:	5f6c7274 	svcpl	0x006c7274
 830:	5f746962 	svcpl	0x00746962
 834:	61656c63 	cmnvs	r5, r3, ror #24
 838:	73610072 	cmnvc	r1, #114	; 0x72
 83c:	5f696963 	svcpl	0x00696963
 840:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
 844:	7461645f 	strbtvc	r6, [r1], #-1119	; 0xfffffba1
 848:	73610061 	cmnvc	r1, #97	; 0x61
 84c:	5f696963 	svcpl	0x00696963
 850:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 854:	6f635f65 	svcvs	0x00635f65
 858:	6f72746e 	svcvs	0x0072746e
 85c:	72656c6c 	rsbvc	r6, r5, #108, 24	; 0x6c00
 860:	63736100 	cmnvs	r3, #0, 2
 864:	775f6969 	ldrbvc	r6, [pc, -r9, ror #18]
 868:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
 86c:	6168635f 	cmnvs	r8, pc, asr r3
 870:	63410072 	movtvs	r0, #4210	; 0x1072
 874:	61766974 	cmnvs	r6, r4, ror r9
 878:	6f526574 	svcvs	0x00526574
 87c:	3a430077 	bcc	10c0a60 <startup-0x1ef3f5a0>
 880:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
 884:	6c2f7372 	stcvs	3, cr7, [pc], #-456	; 6c4 <startup-0x1ffff93c>
 888:	69746861 	ldmdbvs	r4!, {r0, r5, r6, fp, sp, lr}^
 88c:	6f442f67 	svcvs	0x00442f67
 890:	6f6c6e77 	svcvs	0x006c6e77
 894:	2f736461 	svccs	0x00736461
 898:	2d706f4d 	ldclcs	15, cr6, [r0, #-308]!	; 0xfffffecc
 89c:	30544144 	subscc	r4, r4, r4, asr #2
 8a0:	6d2d3731 	stcvs	7, cr3, [sp, #-196]!	; 0xffffff3c
 8a4:	65747361 	ldrbvs	r7, [r4, #-865]!	; 0xfffffc9f
 8a8:	6f4d2f72 	svcvs	0x004d2f72
 8ac:	41442d70 	hvcmi	17104	; 0x42d0
 8b0:	37313054 			; <UNDEFINED> instruction: 0x37313054
 8b4:	73616d2d 	cmnvc	r1, #2880	; 0xb40
 8b8:	2f726574 	svccs	0x00726574
 8bc:	7362614c 	cmnvc	r2, #76, 2
 8c0:	646e6120 	strbtvs	r6, [lr], #-288	; 0xfffffee0
 8c4:	65786520 	ldrbvs	r6, [r8, #-1312]!	; 0xfffffae0
 8c8:	73696372 	cmnvc	r9, #-939524095	; 0xc8000001
 8cc:	732f7365 			; <UNDEFINED> instruction: 0x732f7365
 8d0:	706f6f70 	rsbvc	r6, pc, r0, ror pc	; <UNPREDICTABLE>
 8d4:	625f7379 	subsvs	r7, pc, #-469762047	; 0xe4000001
 8d8:	72617a69 	rsbvc	r7, r1, #430080	; 0x69000
 8dc:	615f6572 	cmpvs	pc, r2, ror r5	; <UNPREDICTABLE>
 8e0:	6e657664 	cdpvs	6, 6, cr7, cr5, cr4, {3}
 8e4:	65727574 	ldrbvs	r7, [r2, #-1396]!	; 0xfffffa8c
 8e8:	79656b2f 	stmdbvc	r5!, {r0, r1, r2, r3, r5, r8, r9, fp, sp, lr}^
 8ec:	2e646170 	mcrcs	1, 3, r6, cr4, cr0, {3}
 8f0:	65520063 	ldrbvs	r0, [r2, #-99]	; 0xffffff9d
 8f4:	6f436461 	svcvs	0x00436461
 8f8:	6e6d756c 	cdpvs	5, 6, cr7, cr13, cr12, {3}
 8fc:	6d756400 	cfldrdvs	mvd6, [r5, #-0]
 900:	665f796d 	ldrbvs	r7, [pc], -sp, ror #18
 904:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 908:	326e6f69 	rsbcc	r6, lr, #420	; 0x1a4
 90c:	766f6d00 	strbtvc	r6, [pc], -r0, lsl #26
 910:	70735f65 	rsbsvc	r5, r3, r5, ror #30
 914:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
 918:	6a626f5f 	bvs	189c69c <startup-0x1e763964>
 91c:	00746365 	rsbseq	r6, r4, r5, ror #6
 920:	6d6d7564 	cfstr64vs	mvdx7, [sp, #-400]!	; 0xfffffe70
 924:	75665f79 	strbvc	r5, [r6, #-3961]!	; 0xfffff087
 928:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 92c:	00316e6f 	eorseq	r6, r1, pc, ror #28
 930:	532f3a43 			; <UNDEFINED> instruction: 0x532f3a43
 934:	6f6f6863 	svcvs	0x006f6863
 938:	41442f6c 	cmpmi	r4, ip, ror #30
 93c:	37313054 			; <UNDEFINED> instruction: 0x37313054
 940:	706f4d2f 	rsbvc	r4, pc, pc, lsr #26
 944:	5441442d 	strbpl	r4, [r1], #-1069	; 0xfffffbd3
 948:	2f373130 	svccs	0x00373130
 94c:	7362614c 	cmnvc	r2, #76, 2
 950:	646e6120 	strbtvs	r6, [lr], #-288	; 0xfffffee0
 954:	63784520 	cmnvs	r8, #32, 10	; 0x8000000
 958:	69637265 	stmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 95c:	2f736573 	svccs	0x00736573
 960:	6f6f7073 	svcvs	0x006f7073
 964:	5f737970 	svcpl	0x00737970
 968:	617a6962 	cmnvs	sl, r2, ror #18
 96c:	5f657272 	svcpl	0x00657272
 970:	65766461 	ldrbvs	r6, [r6, #-1121]!	; 0xfffffb9f
 974:	7275746e 	rsbsvc	r7, r5, #1845493760	; 0x6e000000
 978:	70732f65 	rsbsvc	r2, r3, r5, ror #30
 97c:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
 980:	00632e73 	rsbeq	r2, r3, r3, ror lr
 984:	5f746573 	svcpl	0x00746573
 988:	69727073 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, ip, sp, lr}^
 98c:	6f5f6574 	svcvs	0x005f6574
 990:	63656a62 	cmnvs	r5, #401408	; 0x62000
 994:	70735f74 	rsbsvc	r5, r3, r4, ror pc
 998:	00646565 	rsbeq	r6, r4, r5, ror #10
 99c:	61647075 	smcvs	18181	; 0x4705
 9a0:	735f6574 	cmpvc	pc, #116, 10	; 0x1d000000
 9a4:	74697270 	strbtvc	r7, [r9], #-624	; 0xfffffd90
 9a8:	626f5f65 	rsbvs	r5, pc, #404	; 0x194
 9ac:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
 9b0:	61726400 	cmnvs	r2, r0, lsl #8
 9b4:	70735f77 	rsbsvc	r5, r3, r7, ror pc
 9b8:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
 9bc:	64697700 	strbtvs	r7, [r9], #-1792	; 0xfffff900
 9c0:	695f6874 	ldmdbvs	pc, {r2, r4, r5, r6, fp, sp, lr}^	; <UNPREDICTABLE>
 9c4:	79625f6e 	stmdbvc	r2!, {r1, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
 9c8:	00736574 	rsbseq	r6, r3, r4, ror r5
 9cc:	64616f6c 	strbtvs	r6, [r1], #-3948	; 0xfffff094
 9d0:	7270735f 	rsbsvc	r7, r0, #2080374785	; 0x7c000001
 9d4:	00657469 	rsbeq	r7, r5, r9, ror #8
 9d8:	77617264 	strbvc	r7, [r1, -r4, ror #4]!
 9dc:	7270735f 	rsbsvc	r7, r0, #2080374785	; 0x7c000001
 9e0:	5f657469 	svcpl	0x00657469
 9e4:	656a626f 	strbvs	r6, [sl, #-623]!	; 0xfffffd91
 9e8:	63007463 	movwvs	r7, #1123	; 0x463
 9ec:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
 9f0:	7270735f 	rsbsvc	r7, r0, #2080374785	; 0x7c000001
 9f4:	5f657469 	svcpl	0x00657469
 9f8:	656a626f 	strbvs	r6, [sl, #-623]!	; 0xfffffd91
 9fc:	64007463 	strvs	r7, [r0], #-1123	; 0xfffffb9d
 a00:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
 a04:	6b696d5f 	blvs	1a5bf88 <startup-0x1e5a4078>
 a08:	64006f72 	strvs	r6, [r0], #-3954	; 0xfffff08e
 a0c:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
 a10:	3030355f 	eorscc	r3, r0, pc, asr r5
 a14:	6400736e 	strvs	r7, [r0], #-878	; 0xfffffc92
 a18:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
 a1c:	6c696d5f 	stclvs	13, cr6, [r9], #-380	; 0xfffffe84
 a20:	6400696c 	strvs	r6, [r0], #-2412	; 0xfffff694
 a24:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
 a28:	3035325f 	eorscc	r3, r5, pc, asr r2
 a2c:	4300736e 	movwmi	r7, #878	; 0x36e
 a30:	73552f3a 	cmpvc	r5, #58, 30	; 0xe8
 a34:	2f737265 	svccs	0x00737265
 a38:	7468616c 	strbtvc	r6, [r8], #-364	; 0xfffffe94
 a3c:	442f6769 	strtmi	r6, [pc], #-1897	; a44 <startup-0x1ffff5bc>
 a40:	6c6e776f 	stclvs	7, cr7, [lr], #-444	; 0xfffffe44
 a44:	7364616f 	cmnvc	r4, #-1073741797	; 0xc000001b
 a48:	706f4d2f 	rsbvc	r4, pc, pc, lsr #26
 a4c:	5441442d 	strbpl	r4, [r1], #-1069	; 0xfffffbd3
 a50:	2d373130 	ldfcss	f3, [r7, #-192]!	; 0xffffff40
 a54:	7473616d 	ldrbtvc	r6, [r3], #-365	; 0xfffffe93
 a58:	4d2f7265 	sfmmi	f7, 4, [pc, #-404]!	; 8cc <startup-0x1ffff734>
 a5c:	442d706f 	strtmi	r7, [sp], #-111	; 0xffffff91
 a60:	31305441 	teqcc	r0, r1, asr #8
 a64:	616d2d37 	cmnvs	sp, r7, lsr sp
 a68:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
 a6c:	62614c2f 	rsbvs	r4, r1, #12032	; 0x2f00
 a70:	6e612073 	mcrvs	0, 3, r2, cr1, cr3, {3}
 a74:	78652064 	stmdavc	r5!, {r2, r5, r6, sp}^
 a78:	69637265 	stmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 a7c:	2f736573 	svccs	0x00736573
 a80:	6f6f7073 	svcvs	0x006f7073
 a84:	5f737970 	svcpl	0x00737970
 a88:	617a6962 	cmnvs	sl, r2, ror #18
 a8c:	5f657272 	svcpl	0x00657272
 a90:	65766461 	ldrbvs	r6, [r6, #-1121]!	; 0xfffffb9f
 a94:	7275746e 	rsbsvc	r7, r5, #1845493760	; 0x6e000000
 a98:	65642f65 	strbvs	r2, [r4, #-3941]!	; 0xfffff09b
 a9c:	2e79616c 	rpwcsez	f6, f1, #4.0
 aa0:	Address 0x00000aa0 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	204d5241 	subcs	r5, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d36 	eorscc	r2, r2, r6, lsr sp
  30:	712d3731 			; <UNDEFINED> instruction: 0x712d3731
  34:	70752d31 	rsbsvc	r2, r5, r1, lsr sp
  38:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0xfffffe9c
  3c:	2e362029 	cdpcs	0, 3, cr2, cr6, cr9, {1}
  40:	20312e33 	eorscs	r2, r1, r3, lsr lr
  44:	37313032 			; <UNDEFINED> instruction: 0x37313032
  48:	35313230 	ldrcc	r3, [r1, #-560]!	; 0xfffffdd0
  4c:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
  50:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
  54:	5b202965 	blpl	80a5f0 <startup-0x1f7f5a10>
  58:	2f4d5241 	svccs	0x004d5241
  5c:	65626d65 	strbvs	r6, [r2, #-3429]!	; 0xfffff29b
  60:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  64:	622d362d 	eorvs	r3, sp, #47185920	; 0x2d00000
  68:	636e6172 	cmnvs	lr, #-2147483620	; 0x8000001c
  6c:	65722068 	ldrbvs	r2, [r2, #-104]!	; 0xffffff98
  70:	69736976 	ldmdbvs	r3!, {r1, r2, r4, r5, r6, r8, fp, sp, lr}^
  74:	32206e6f 	eorcc	r6, r0, #1776	; 0x6f0
  78:	31353534 	teqcc	r5, r4, lsr r5
  7c:	Address 0x0000007c is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002a41 	andeq	r2, r0, r1, asr #20
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000020 	andeq	r0, r0, r0, lsr #32
  10:	4d2d3605 	stcmi	6, cr3, [sp, #-20]!	; 0xffffffec
  14:	070b0600 	streq	r0, [fp, -r0, lsl #12]
  18:	1201094d 	andne	r0, r1, #1261568	; 0x134000
  1c:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
  20:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  24:	1a011901 	bne	46430 <startup-0x1ffb9bd0>
  28:	Address 0x00000028 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
  20:	0000001c 	andeq	r0, r0, ip, lsl r0
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	000003c0 	andeq	r0, r0, r0, asr #7
  30:	40080e41 	andmi	r0, r8, r1, asr #28
  34:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  38:	a00e4101 	andge	r4, lr, r1, lsl #2
  3c:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  40:	00000018 	andeq	r0, r0, r8, lsl r0
  44:	00000000 	andeq	r0, r0, r0
  48:	200003d0 	ldrdcs	r0, [r0], -r0	; <UNPREDICTABLE>
  4c:	00000048 	andeq	r0, r0, r8, asr #32
  50:	40080e41 	andmi	r0, r8, r1, asr #28
  54:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  58:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  5c:	00000020 	andeq	r0, r0, r0, lsr #32
  60:	00000000 	andeq	r0, r0, r0
  64:	20000418 	andcs	r0, r0, r8, lsl r4
  68:	0000007c 	andeq	r0, r0, ip, ror r0
  6c:	400c0e41 	andmi	r0, ip, r1, asr #28
  70:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
  74:	018e4002 	orreq	r4, lr, r2
  78:	41280e41 			; <UNDEFINED> instruction: 0x41280e41
  7c:	0000070d 	andeq	r0, r0, sp, lsl #14
  80:	0000001c 	andeq	r0, r0, ip, lsl r0
  84:	00000000 	andeq	r0, r0, r0
  88:	20000494 	mulcs	r0, r4, r4
  8c:	00000070 	andeq	r0, r0, r0, ror r0
  90:	40080e41 	andmi	r0, r8, r1, asr #28
  94:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  98:	100e4101 	andne	r4, lr, r1, lsl #2
  9c:	00070d41 	andeq	r0, r7, r1, asr #26
  a0:	0000001c 	andeq	r0, r0, ip, lsl r0
  a4:	00000000 	andeq	r0, r0, r0
  a8:	20000504 	andcs	r0, r0, r4, lsl #10
  ac:	000000bc 	strheq	r0, [r0], -ip
  b0:	40080e41 	andmi	r0, r8, r1, asr #28
  b4:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  b8:	380e4101 	stmdacc	lr, {r0, r8, lr}
  bc:	00070d41 	andeq	r0, r7, r1, asr #26
  c0:	00000018 	andeq	r0, r0, r8, lsl r0
  c4:	00000000 	andeq	r0, r0, r0
  c8:	200005c0 	andcs	r0, r0, r0, asr #11
  cc:	000000a8 	andeq	r0, r0, r8, lsr #1
  d0:	40080e41 	andmi	r0, r8, r1, asr #28
  d4:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  d8:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  dc:	0000000c 	andeq	r0, r0, ip
  e0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
  e4:	7c020001 	stcvc	0, cr0, [r2], {1}
  e8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  ec:	0000001c 	andeq	r0, r0, ip, lsl r0
  f0:	000000dc 	ldrdeq	r0, [r0], -ip
  f4:	20000668 	andcs	r0, r0, r8, ror #12
  f8:	00000060 	andeq	r0, r0, r0, rrx
  fc:	40080e41 	andmi	r0, r8, r1, asr #28
 100:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 104:	180e4101 	stmdane	lr, {r0, r8, lr}
 108:	00070d41 	andeq	r0, r7, r1, asr #26
 10c:	0000001c 	andeq	r0, r0, ip, lsl r0
 110:	000000dc 	ldrdeq	r0, [r0], -ip
 114:	200006c8 	andcs	r0, r0, r8, asr #13
 118:	00000068 	andeq	r0, r0, r8, rrx
 11c:	40080e41 	andmi	r0, r8, r1, asr #28
 120:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 124:	180e4101 	stmdane	lr, {r0, r8, lr}
 128:	00070d41 	andeq	r0, r7, r1, asr #26
 12c:	0000001c 	andeq	r0, r0, ip, lsl r0
 130:	000000dc 	ldrdeq	r0, [r0], -ip
 134:	20000730 	andcs	r0, r0, r0, lsr r7
 138:	0000005a 	andeq	r0, r0, sl, asr r0
 13c:	40080e41 	andmi	r0, r8, r1, asr #28
 140:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 144:	100e4101 	andne	r4, lr, r1, lsl #2
 148:	00070d41 	andeq	r0, r7, r1, asr #26
 14c:	0000001c 	andeq	r0, r0, ip, lsl r0
 150:	000000dc 	ldrdeq	r0, [r0], -ip
 154:	2000078a 	andcs	r0, r0, sl, lsl #15
 158:	00000076 	andeq	r0, r0, r6, ror r0
 15c:	40080e41 	andmi	r0, r8, r1, asr #28
 160:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 164:	100e4101 	andne	r4, lr, r1, lsl #2
 168:	00070d41 	andeq	r0, r7, r1, asr #26
 16c:	0000001c 	andeq	r0, r0, ip, lsl r0
 170:	000000dc 	ldrdeq	r0, [r0], -ip
 174:	20000800 	andcs	r0, r0, r0, lsl #16
 178:	00000090 	muleq	r0, r0, r0
 17c:	40080e41 	andmi	r0, r8, r1, asr #28
 180:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 184:	180e4101 	stmdane	lr, {r0, r8, lr}
 188:	00070d41 	andeq	r0, r7, r1, asr #26
 18c:	0000001c 	andeq	r0, r0, ip, lsl r0
 190:	000000dc 	ldrdeq	r0, [r0], -ip
 194:	20000890 	mulcs	r0, r0, r8
 198:	00000080 	andeq	r0, r0, r0, lsl #1
 19c:	40080e41 	andmi	r0, r8, r1, asr #28
 1a0:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 1a4:	100e4101 	andne	r4, lr, r1, lsl #2
 1a8:	00070d41 	andeq	r0, r7, r1, asr #26
 1ac:	0000001c 	andeq	r0, r0, ip, lsl r0
 1b0:	000000dc 	ldrdeq	r0, [r0], -ip
 1b4:	20000910 	andcs	r0, r0, r0, lsl r9
 1b8:	00000040 	andeq	r0, r0, r0, asr #32
 1bc:	40080e41 	andmi	r0, r8, r1, asr #28
 1c0:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 1c4:	100e4101 	andne	r4, lr, r1, lsl #2
 1c8:	00070d41 	andeq	r0, r7, r1, asr #26
 1cc:	0000001c 	andeq	r0, r0, ip, lsl r0
 1d0:	000000dc 	ldrdeq	r0, [r0], -ip
 1d4:	20000950 	andcs	r0, r0, r0, asr r9
 1d8:	00000046 	andeq	r0, r0, r6, asr #32
 1dc:	40080e41 	andmi	r0, r8, r1, asr #28
 1e0:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 1e4:	100e4101 	andne	r4, lr, r1, lsl #2
 1e8:	00070d41 	andeq	r0, r7, r1, asr #26
 1ec:	0000001c 	andeq	r0, r0, ip, lsl r0
 1f0:	000000dc 	ldrdeq	r0, [r0], -ip
 1f4:	20000996 	mulcs	r0, r6, r9
 1f8:	0000002a 	andeq	r0, r0, sl, lsr #32
 1fc:	40080e41 	andmi	r0, r8, r1, asr #28
 200:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 204:	100e4101 	andne	r4, lr, r1, lsl #2
 208:	00070d41 	andeq	r0, r7, r1, asr #26
 20c:	00000018 	andeq	r0, r0, r8, lsl r0
 210:	000000dc 	ldrdeq	r0, [r0], -ip
 214:	200009c0 	andcs	r0, r0, r0, asr #19
 218:	0000005c 	andeq	r0, r0, ip, asr r0
 21c:	40080e41 	andmi	r0, r8, r1, asr #28
 220:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 224:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 228:	0000001c 	andeq	r0, r0, ip, lsl r0
 22c:	000000dc 	ldrdeq	r0, [r0], -ip
 230:	20000a1c 	andcs	r0, r0, ip, lsl sl
 234:	00000066 	andeq	r0, r0, r6, rrx
 238:	40080e41 	andmi	r0, r8, r1, asr #28
 23c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 240:	100e4101 	andne	r4, lr, r1, lsl #2
 244:	00070d41 	andeq	r0, r7, r1, asr #26
 248:	00000020 	andeq	r0, r0, r0, lsr #32
 24c:	000000dc 	ldrdeq	r0, [r0], -ip
 250:	20000a82 	andcs	r0, r0, r2, lsl #21
 254:	000001a6 	andeq	r0, r0, r6, lsr #3
 258:	400c0e41 	andmi	r0, ip, r1, asr #28
 25c:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 260:	018e4002 	orreq	r4, lr, r2
 264:	41200e41 			; <UNDEFINED> instruction: 0x41200e41
 268:	0000070d 	andeq	r0, r0, sp, lsl #14
 26c:	0000001c 	andeq	r0, r0, ip, lsl r0
 270:	000000dc 	ldrdeq	r0, [r0], -ip
 274:	20000c28 	andcs	r0, r0, r8, lsr #24
 278:	00000064 	andeq	r0, r0, r4, rrx
 27c:	40080e41 	andmi	r0, r8, r1, asr #28
 280:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 284:	180e4101 	stmdane	lr, {r0, r8, lr}
 288:	00070d41 	andeq	r0, r7, r1, asr #26
 28c:	0000001c 	andeq	r0, r0, ip, lsl r0
 290:	000000dc 	ldrdeq	r0, [r0], -ip
 294:	20000c8c 	andcs	r0, r0, ip, lsl #25
 298:	00000064 	andeq	r0, r0, r4, rrx
 29c:	40080e41 	andmi	r0, r8, r1, asr #28
 2a0:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 2a4:	180e4101 	stmdane	lr, {r0, r8, lr}
 2a8:	00070d41 	andeq	r0, r7, r1, asr #26
 2ac:	0000001c 	andeq	r0, r0, ip, lsl r0
 2b0:	000000dc 	ldrdeq	r0, [r0], -ip
 2b4:	20000cf0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 2b8:	00000080 	andeq	r0, r0, r0, lsl #1
 2bc:	40080e41 	andmi	r0, r8, r1, asr #28
 2c0:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 2c4:	100e4101 	andne	r4, lr, r1, lsl #2
 2c8:	00070d41 	andeq	r0, r7, r1, asr #26
 2cc:	0000001c 	andeq	r0, r0, ip, lsl r0
 2d0:	000000dc 	ldrdeq	r0, [r0], -ip
 2d4:	20000d70 	andcs	r0, r0, r0, ror sp
 2d8:	00000020 	andeq	r0, r0, r0, lsr #32
 2dc:	40080e41 	andmi	r0, r8, r1, asr #28
 2e0:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 2e4:	180e4101 	stmdane	lr, {r0, r8, lr}
 2e8:	00070d41 	andeq	r0, r7, r1, asr #26
 2ec:	00000018 	andeq	r0, r0, r8, lsl r0
 2f0:	000000dc 	ldrdeq	r0, [r0], -ip
 2f4:	20000d90 	mulcs	r0, r0, sp
 2f8:	00000020 	andeq	r0, r0, r0, lsr #32
 2fc:	40080e41 	andmi	r0, r8, r1, asr #28
 300:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 304:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 308:	0000000c 	andeq	r0, r0, ip
 30c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 310:	7c020001 	stcvc	0, cr0, [r2], {1}
 314:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 318:	00000018 	andeq	r0, r0, r8, lsl r0
 31c:	00000308 	andeq	r0, r0, r8, lsl #6
 320:	20000db0 			; <UNDEFINED> instruction: 0x20000db0
 324:	00000040 	andeq	r0, r0, r0, asr #32
 328:	40080e41 	andmi	r0, r8, r1, asr #28
 32c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 330:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 334:	0000001c 	andeq	r0, r0, ip, lsl r0
 338:	00000308 	andeq	r0, r0, r8, lsl #6
 33c:	20000df0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 340:	00000054 	andeq	r0, r0, r4, asr r0
 344:	40080e41 	andmi	r0, r8, r1, asr #28
 348:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 34c:	180e4101 	stmdane	lr, {r0, r8, lr}
 350:	00070d41 	andeq	r0, r7, r1, asr #26
 354:	0000001c 	andeq	r0, r0, ip, lsl r0
 358:	00000308 	andeq	r0, r0, r8, lsl #6
 35c:	20000e44 	andcs	r0, r0, r4, asr #28
 360:	00000060 	andeq	r0, r0, r0, rrx
 364:	40080e41 	andmi	r0, r8, r1, asr #28
 368:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 36c:	180e4101 	stmdane	lr, {r0, r8, lr}
 370:	00070d41 	andeq	r0, r7, r1, asr #26
 374:	0000001c 	andeq	r0, r0, ip, lsl r0
 378:	00000308 	andeq	r0, r0, r8, lsl #6
 37c:	20000ea4 	andcs	r0, r0, r4, lsr #29
 380:	0000002a 	andeq	r0, r0, sl, lsr #32
 384:	40080e41 	andmi	r0, r8, r1, asr #28
 388:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 38c:	100e4101 	andne	r4, lr, r1, lsl #2
 390:	00070d41 	andeq	r0, r7, r1, asr #26
 394:	0000001c 	andeq	r0, r0, ip, lsl r0
 398:	00000308 	andeq	r0, r0, r8, lsl #6
 39c:	20000ece 	andcs	r0, r0, lr, asr #29
 3a0:	0000002a 	andeq	r0, r0, sl, lsr #32
 3a4:	40080e41 	andmi	r0, r8, r1, asr #28
 3a8:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 3ac:	100e4101 	andne	r4, lr, r1, lsl #2
 3b0:	00070d41 	andeq	r0, r7, r1, asr #26
 3b4:	00000020 	andeq	r0, r0, r0, lsr #32
 3b8:	00000308 	andeq	r0, r0, r8, lsl #6
 3bc:	20000ef8 	strdcs	r0, [r0], -r8
 3c0:	00000048 	andeq	r0, r0, r8, asr #32
 3c4:	400c0e41 	andmi	r0, ip, r1, asr #28
 3c8:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 3cc:	018e4002 	orreq	r4, lr, r2
 3d0:	41180e41 	tstmi	r8, r1, asr #28
 3d4:	0000070d 	andeq	r0, r0, sp, lsl #14
 3d8:	00000020 	andeq	r0, r0, r0, lsr #32
 3dc:	00000308 	andeq	r0, r0, r8, lsl #6
 3e0:	20000f40 	andcs	r0, r0, r0, asr #30
 3e4:	00000048 	andeq	r0, r0, r8, asr #32
 3e8:	400c0e41 	andmi	r0, ip, r1, asr #28
 3ec:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 3f0:	018e4002 	orreq	r4, lr, r2
 3f4:	41180e41 	tstmi	r8, r1, asr #28
 3f8:	0000070d 	andeq	r0, r0, sp, lsl #14
 3fc:	0000001c 	andeq	r0, r0, ip, lsl r0
 400:	00000308 	andeq	r0, r0, r8, lsl #6
 404:	20000f88 	andcs	r0, r0, r8, lsl #31
 408:	00000030 	andeq	r0, r0, r0, lsr r0
 40c:	40080e41 	andmi	r0, r8, r1, asr #28
 410:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 414:	100e4101 	andne	r4, lr, r1, lsl #2
 418:	00070d41 	andeq	r0, r7, r1, asr #26
 41c:	0000001c 	andeq	r0, r0, ip, lsl r0
 420:	00000308 	andeq	r0, r0, r8, lsl #6
 424:	20000fb8 			; <UNDEFINED> instruction: 0x20000fb8
 428:	00000030 	andeq	r0, r0, r0, lsr r0
 42c:	40080e41 	andmi	r0, r8, r1, asr #28
 430:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 434:	100e4101 	andne	r4, lr, r1, lsl #2
 438:	00070d41 	andeq	r0, r7, r1, asr #26
 43c:	0000001c 	andeq	r0, r0, ip, lsl r0
 440:	00000308 	andeq	r0, r0, r8, lsl #6
 444:	20000fe8 	andcs	r0, r0, r8, ror #31
 448:	00000056 	andeq	r0, r0, r6, asr r0
 44c:	40080e41 	andmi	r0, r8, r1, asr #28
 450:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 454:	100e4101 	andne	r4, lr, r1, lsl #2
 458:	00070d41 	andeq	r0, r7, r1, asr #26
 45c:	0000001c 	andeq	r0, r0, ip, lsl r0
 460:	00000308 	andeq	r0, r0, r8, lsl #6
 464:	2000103e 	andcs	r1, r0, lr, lsr r0
 468:	00000044 	andeq	r0, r0, r4, asr #32
 46c:	40080e41 	andmi	r0, r8, r1, asr #28
 470:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 474:	100e4101 	andne	r4, lr, r1, lsl #2
 478:	00070d41 	andeq	r0, r7, r1, asr #26
 47c:	0000001c 	andeq	r0, r0, ip, lsl r0
 480:	00000308 	andeq	r0, r0, r8, lsl #6
 484:	20001082 	andcs	r1, r0, r2, lsl #1
 488:	00000068 	andeq	r0, r0, r8, rrx
 48c:	40080e41 	andmi	r0, r8, r1, asr #28
 490:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 494:	180e4101 	stmdane	lr, {r0, r8, lr}
 498:	00070d41 	andeq	r0, r7, r1, asr #26
 49c:	0000001c 	andeq	r0, r0, ip, lsl r0
 4a0:	00000308 	andeq	r0, r0, r8, lsl #6
 4a4:	200010ea 	andcs	r1, r0, sl, ror #1
 4a8:	00000028 	andeq	r0, r0, r8, lsr #32
 4ac:	40080e41 	andmi	r0, r8, r1, asr #28
 4b0:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 4b4:	100e4101 	andne	r4, lr, r1, lsl #2
 4b8:	00070d41 	andeq	r0, r7, r1, asr #26
 4bc:	00000020 	andeq	r0, r0, r0, lsr #32
 4c0:	00000308 	andeq	r0, r0, r8, lsl #6
 4c4:	20001112 	andcs	r1, r0, r2, lsl r1
 4c8:	0000004a 	andeq	r0, r0, sl, asr #32
 4cc:	400c0e41 	andmi	r0, ip, r1, asr #28
 4d0:	87400384 	strbhi	r0, [r0, -r4, lsl #7]
 4d4:	018e4002 	orreq	r4, lr, r2
 4d8:	41300e41 	teqmi	r0, r1, asr #28
 4dc:	0000070d 	andeq	r0, r0, sp, lsl #14
 4e0:	0000000c 	andeq	r0, r0, ip
 4e4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 4e8:	7c020001 	stcvc	0, cr0, [r2], {1}
 4ec:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 4f0:	00000018 	andeq	r0, r0, r8, lsl r0
 4f4:	000004e0 	andeq	r0, r0, r0, ror #9
 4f8:	2000115c 	andcs	r1, r0, ip, asr r1
 4fc:	00000060 	andeq	r0, r0, r0, rrx
 500:	40080e41 	andmi	r0, r8, r1, asr #28
 504:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 508:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 50c:	0000001c 	andeq	r0, r0, ip, lsl r0
 510:	000004e0 	andeq	r0, r0, r0, ror #9
 514:	200011bc 			; <UNDEFINED> instruction: 0x200011bc
 518:	0000006c 	andeq	r0, r0, ip, rrx
 51c:	40080e41 	andmi	r0, r8, r1, asr #28
 520:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 524:	100e4101 	andne	r4, lr, r1, lsl #2
 528:	00070d41 	andeq	r0, r7, r1, asr #26
 52c:	0000001c 	andeq	r0, r0, ip, lsl r0
 530:	000004e0 	andeq	r0, r0, r0, ror #9
 534:	20001228 	andcs	r1, r0, r8, lsr #4
 538:	00000058 	andeq	r0, r0, r8, asr r0
 53c:	40080e41 	andmi	r0, r8, r1, asr #28
 540:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 544:	100e4101 	andne	r4, lr, r1, lsl #2
 548:	00070d41 	andeq	r0, r7, r1, asr #26
 54c:	0000001c 	andeq	r0, r0, ip, lsl r0
 550:	000004e0 	andeq	r0, r0, r0, ror #9
 554:	20001280 	andcs	r1, r0, r0, lsl #5
 558:	00000054 	andeq	r0, r0, r4, asr r0
 55c:	40080e41 	andmi	r0, r8, r1, asr #28
 560:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 564:	100e4101 	andne	r4, lr, r1, lsl #2
 568:	00070d41 	andeq	r0, r7, r1, asr #26
 56c:	0000000c 	andeq	r0, r0, ip
 570:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 574:	7c020001 	stcvc	0, cr0, [r2], {1}
 578:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 57c:	0000001c 	andeq	r0, r0, ip, lsl r0
 580:	0000056c 	andeq	r0, r0, ip, ror #10
 584:	200012d4 	ldrdcs	r1, [r0], -r4
 588:	0000002c 	andeq	r0, r0, ip, lsr #32
 58c:	40080e41 	andmi	r0, r8, r1, asr #28
 590:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 594:	180e4101 	stmdane	lr, {r0, r8, lr}
 598:	00070d41 	andeq	r0, r7, r1, asr #26
 59c:	0000001c 	andeq	r0, r0, ip, lsl r0
 5a0:	0000056c 	andeq	r0, r0, ip, ror #10
 5a4:	20001300 	andcs	r1, r0, r0, lsl #6
 5a8:	000000da 	ldrdeq	r0, [r0], -sl
 5ac:	40080e41 	andmi	r0, r8, r1, asr #28
 5b0:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 5b4:	300e4101 	andcc	r4, lr, r1, lsl #2
 5b8:	00070d41 	andeq	r0, r7, r1, asr #26
 5bc:	0000001c 	andeq	r0, r0, ip, lsl r0
 5c0:	0000056c 	andeq	r0, r0, ip, ror #10
 5c4:	200013da 	ldrdcs	r1, [r0], -sl
 5c8:	00000022 	andeq	r0, r0, r2, lsr #32
 5cc:	40080e41 	andmi	r0, r8, r1, asr #28
 5d0:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 5d4:	100e4101 	andne	r4, lr, r1, lsl #2
 5d8:	00070d41 	andeq	r0, r7, r1, asr #26
 5dc:	0000001c 	andeq	r0, r0, ip, lsl r0
 5e0:	0000056c 	andeq	r0, r0, ip, ror #10
 5e4:	200013fc 	strdcs	r1, [r0], -ip
 5e8:	00000022 	andeq	r0, r0, r2, lsr #32
 5ec:	40080e41 	andmi	r0, r8, r1, asr #28
 5f0:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 5f4:	100e4101 	andne	r4, lr, r1, lsl #2
 5f8:	00070d41 	andeq	r0, r7, r1, asr #26
 5fc:	0000001c 	andeq	r0, r0, ip, lsl r0
 600:	0000056c 	andeq	r0, r0, ip, ror #10
 604:	2000141e 	andcs	r1, r0, lr, lsl r4
 608:	000000ba 	strheq	r0, [r0], -sl
 60c:	40080e41 	andmi	r0, r8, r1, asr #28
 610:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 614:	100e4101 	andne	r4, lr, r1, lsl #2
 618:	00070d41 	andeq	r0, r7, r1, asr #26
 61c:	0000001c 	andeq	r0, r0, ip, lsl r0
 620:	0000056c 	andeq	r0, r0, ip, ror #10
 624:	200014d8 	ldrdcs	r1, [r0], -r8
 628:	00000020 	andeq	r0, r0, r0, lsr #32
 62c:	40080e41 	andmi	r0, r8, r1, asr #28
 630:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 634:	180e4101 	stmdane	lr, {r0, r8, lr}
 638:	00070d41 	andeq	r0, r7, r1, asr #26
 63c:	0000001c 	andeq	r0, r0, ip, lsl r0
 640:	0000056c 	andeq	r0, r0, ip, ror #10
 644:	200014f8 	strdcs	r1, [r0], -r8
 648:	00000010 	andeq	r0, r0, r0, lsl r0
 64c:	40080e41 	andmi	r0, r8, r1, asr #28
 650:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 654:	100e4101 	andne	r4, lr, r1, lsl #2
 658:	00070d41 	andeq	r0, r7, r1, asr #26
 65c:	0000001c 	andeq	r0, r0, ip, lsl r0
 660:	0000056c 	andeq	r0, r0, ip, ror #10
 664:	20001508 	andcs	r1, r0, r8, lsl #10
 668:	00000014 	andeq	r0, r0, r4, lsl r0
 66c:	40080e41 	andmi	r0, r8, r1, asr #28
 670:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 674:	180e4101 	stmdane	lr, {r0, r8, lr}
 678:	00070d41 	andeq	r0, r7, r1, asr #26
 67c:	0000001c 	andeq	r0, r0, ip, lsl r0
 680:	0000056c 	andeq	r0, r0, ip, ror #10
 684:	2000151c 	andcs	r1, r0, ip, lsl r5
 688:	0000002e 	andeq	r0, r0, lr, lsr #32
 68c:	40080e41 	andmi	r0, r8, r1, asr #28
 690:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 694:	100e4101 	andne	r4, lr, r1, lsl #2
 698:	00070d41 	andeq	r0, r7, r1, asr #26
 69c:	0000000c 	andeq	r0, r0, ip
 6a0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 6a4:	7c020001 	stcvc	0, cr0, [r2], {1}
 6a8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 6ac:	00000018 	andeq	r0, r0, r8, lsl r0
 6b0:	0000069c 	muleq	r0, ip, r6
 6b4:	2000154c 	andcs	r1, r0, ip, asr #10
 6b8:	00000064 	andeq	r0, r0, r4, rrx
 6bc:	40080e41 	andmi	r0, r8, r1, asr #28
 6c0:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 6c4:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 6c8:	00000018 	andeq	r0, r0, r8, lsl r0
 6cc:	0000069c 	muleq	r0, ip, r6
 6d0:	200015b0 			; <UNDEFINED> instruction: 0x200015b0
 6d4:	00000012 	andeq	r0, r0, r2, lsl r0
 6d8:	40080e41 	andmi	r0, r8, r1, asr #28
 6dc:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 6e0:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 6e4:	0000001c 	andeq	r0, r0, ip, lsl r0
 6e8:	0000069c 	muleq	r0, ip, r6
 6ec:	200015c2 	andcs	r1, r0, r2, asr #11
 6f0:	0000002a 	andeq	r0, r0, sl, lsr #32
 6f4:	40080e41 	andmi	r0, r8, r1, asr #28
 6f8:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 6fc:	180e4101 	stmdane	lr, {r0, r8, lr}
 700:	00070d41 	andeq	r0, r7, r1, asr #26
 704:	0000001c 	andeq	r0, r0, ip, lsl r0
 708:	0000069c 	muleq	r0, ip, r6
 70c:	200015ec 	andcs	r1, r0, ip, ror #11
 710:	0000001e 	andeq	r0, r0, lr, lsl r0
 714:	40080e41 	andmi	r0, r8, r1, asr #28
 718:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 71c:	100e4101 	andne	r4, lr, r1, lsl #2
 720:	00070d41 	andeq	r0, r7, r1, asr #26
