
./Debug/graphicdisplay.elf:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
 #include "graphicdisplay.h"
 
void startup(void) __attribute__((naked)) __attribute__((section (".start_section")) );

void startup ( void ){
__asm volatile(
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <_exit+0x4>)
20000002:	4685      	mov	sp, r0
20000004:	f000 f804 	bl	20000010 <main>

20000008 <_exit>:
20000008:	e7fe      	b.n	20000008 <_exit>
	" LDR R0,=0x2001C000\n"		/* set stack */
	" MOV SP,R0\n"
	" BL main\n"				/* call main */
	"_exit: B .\n"				/* never return */
	) ;
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <main>:

void main(void){
20000010:	b580      	push	{r7, lr}
20000012:	af00      	add	r7, sp, #0
}
20000014:	46c0      	nop			; (mov r8, r8)
20000016:	46bd      	mov	sp, r7
20000018:	bd80      	pop	{r7, pc}
	...

2000001c <delay_250ns>:
#define STK_VAL *((volatile unsigned int*)(SYSTIK+0x8))

#define COUNT_VAL ((unsigned int)(42))
#define MILLI_TO_MIKRO 1000

void delay_250ns(void){
2000001c:	b580      	push	{r7, lr}
2000001e:	af00      	add	r7, sp, #0
    STK_CTRL &= 0xFFFEFFF8;
20000020:	4b13      	ldr	r3, [pc, #76]	; (20000070 <delay_250ns+0x54>)
20000022:	4a13      	ldr	r2, [pc, #76]	; (20000070 <delay_250ns+0x54>)
20000024:	6812      	ldr	r2, [r2, #0]
20000026:	4913      	ldr	r1, [pc, #76]	; (20000074 <delay_250ns+0x58>)
20000028:	400a      	ands	r2, r1
2000002a:	601a      	str	r2, [r3, #0]
    STK_LOAD &= 0xFF000000;
2000002c:	4b12      	ldr	r3, [pc, #72]	; (20000078 <delay_250ns+0x5c>)
2000002e:	4a12      	ldr	r2, [pc, #72]	; (20000078 <delay_250ns+0x5c>)
20000030:	6812      	ldr	r2, [r2, #0]
20000032:	0e12      	lsrs	r2, r2, #24
20000034:	0612      	lsls	r2, r2, #24
20000036:	601a      	str	r2, [r3, #0]
    STK_LOAD |= COUNT_VAL-1;
20000038:	4b0f      	ldr	r3, [pc, #60]	; (20000078 <delay_250ns+0x5c>)
2000003a:	4a0f      	ldr	r2, [pc, #60]	; (20000078 <delay_250ns+0x5c>)
2000003c:	6812      	ldr	r2, [r2, #0]
2000003e:	2129      	movs	r1, #41	; 0x29
20000040:	430a      	orrs	r2, r1
20000042:	601a      	str	r2, [r3, #0]
    STK_VAL = 0;
20000044:	4b0d      	ldr	r3, [pc, #52]	; (2000007c <delay_250ns+0x60>)
20000046:	2200      	movs	r2, #0
20000048:	601a      	str	r2, [r3, #0]
    STK_CTRL |= 0x5;
2000004a:	4b09      	ldr	r3, [pc, #36]	; (20000070 <delay_250ns+0x54>)
2000004c:	4a08      	ldr	r2, [pc, #32]	; (20000070 <delay_250ns+0x54>)
2000004e:	6812      	ldr	r2, [r2, #0]
20000050:	2105      	movs	r1, #5
20000052:	430a      	orrs	r2, r1
20000054:	601a      	str	r2, [r3, #0]
    
    while(STK_CTRL & 0x00010000 == 0);
20000056:	46c0      	nop			; (mov r8, r8)
20000058:	4b05      	ldr	r3, [pc, #20]	; (20000070 <delay_250ns+0x54>)
2000005a:	681b      	ldr	r3, [r3, #0]
    
    STK_CTRL &= 0xFFFEFFF8;
2000005c:	4b04      	ldr	r3, [pc, #16]	; (20000070 <delay_250ns+0x54>)
2000005e:	4a04      	ldr	r2, [pc, #16]	; (20000070 <delay_250ns+0x54>)
20000060:	6812      	ldr	r2, [r2, #0]
20000062:	4904      	ldr	r1, [pc, #16]	; (20000074 <delay_250ns+0x58>)
20000064:	400a      	ands	r2, r1
20000066:	601a      	str	r2, [r3, #0]
}
20000068:	46c0      	nop			; (mov r8, r8)
2000006a:	46bd      	mov	sp, r7
2000006c:	bd80      	pop	{r7, pc}
2000006e:	46c0      	nop			; (mov r8, r8)
20000070:	e000e010 	and	lr, r0, r0, lsl r0
20000074:	fffefff8 			; <UNDEFINED> instruction: 0xfffefff8
20000078:	e000e014 	and	lr, r0, r4, lsl r0
2000007c:	e000e018 	and	lr, r0, r8, lsl r0

20000080 <delay_500ns>:

void delay_500ns(void){
20000080:	b580      	push	{r7, lr}
20000082:	af00      	add	r7, sp, #0
    delay_250ns();
20000084:	f7ff ffca 	bl	2000001c <delay_250ns>
    delay_250ns();
20000088:	f7ff ffc8 	bl	2000001c <delay_250ns>
}
2000008c:	46c0      	nop			; (mov r8, r8)
2000008e:	46bd      	mov	sp, r7
20000090:	bd80      	pop	{r7, pc}

20000092 <delay_mikro>:

void delay_mikro(unsigned int us){
20000092:	b580      	push	{r7, lr}
20000094:	b084      	sub	sp, #16
20000096:	af00      	add	r7, sp, #0
20000098:	6078      	str	r0, [r7, #4]
    for(int i=0; i < us*2; i++){
2000009a:	2300      	movs	r3, #0
2000009c:	60fb      	str	r3, [r7, #12]
2000009e:	e004      	b.n	200000aa <delay_mikro+0x18>
        delay_500ns();
200000a0:	f7ff ffee 	bl	20000080 <delay_500ns>
    for(int i=0; i < us*2; i++){
200000a4:	68fb      	ldr	r3, [r7, #12]
200000a6:	3301      	adds	r3, #1
200000a8:	60fb      	str	r3, [r7, #12]
200000aa:	687b      	ldr	r3, [r7, #4]
200000ac:	005a      	lsls	r2, r3, #1
200000ae:	68fb      	ldr	r3, [r7, #12]
200000b0:	429a      	cmp	r2, r3
200000b2:	d8f5      	bhi.n	200000a0 <delay_mikro+0xe>
    }
}
200000b4:	46c0      	nop			; (mov r8, r8)
200000b6:	46bd      	mov	sp, r7
200000b8:	b004      	add	sp, #16
200000ba:	bd80      	pop	{r7, pc}

200000bc <delay_milli>:

void delay_milli(unsigned int ms){
200000bc:	b580      	push	{r7, lr}
200000be:	b082      	sub	sp, #8
200000c0:	af00      	add	r7, sp, #0
200000c2:	6078      	str	r0, [r7, #4]
    delay_mikro(ms*MILLI_TO_MIKRO);
200000c4:	687b      	ldr	r3, [r7, #4]
200000c6:	22fa      	movs	r2, #250	; 0xfa
200000c8:	0092      	lsls	r2, r2, #2
200000ca:	4353      	muls	r3, r2
200000cc:	0018      	movs	r0, r3
200000ce:	f7ff ffe0 	bl	20000092 <delay_mikro>
}
200000d2:	46c0      	nop			; (mov r8, r8)
200000d4:	46bd      	mov	sp, r7
200000d6:	b002      	add	sp, #8
200000d8:	bd80      	pop	{r7, pc}
200000da:	46c0      	nop			; (mov r8, r8)

200000dc <graphic_ctrl_bit_set>:
#include "graphicdisplay.h"

void graphic_ctrl_bit_set(uint8_t x){
200000dc:	b580      	push	{r7, lr}
200000de:	b084      	sub	sp, #16
200000e0:	af00      	add	r7, sp, #0
200000e2:	0002      	movs	r2, r0
200000e4:	1dfb      	adds	r3, r7, #7
200000e6:	701a      	strb	r2, [r3, #0]
    uint8_t control_register = GPIO_E.odrLow;
200000e8:	4a0c      	ldr	r2, [pc, #48]	; (2000011c <graphic_ctrl_bit_set+0x40>)
200000ea:	230f      	movs	r3, #15
200000ec:	18fb      	adds	r3, r7, r3
200000ee:	7d12      	ldrb	r2, [r2, #20]
200000f0:	701a      	strb	r2, [r3, #0]
    control_register |= (x | B_SELECT);
200000f2:	1dfa      	adds	r2, r7, #7
200000f4:	230f      	movs	r3, #15
200000f6:	18fb      	adds	r3, r7, r3
200000f8:	7812      	ldrb	r2, [r2, #0]
200000fa:	781b      	ldrb	r3, [r3, #0]
200000fc:	4313      	orrs	r3, r2
200000fe:	b2da      	uxtb	r2, r3
20000100:	230f      	movs	r3, #15
20000102:	18fb      	adds	r3, r7, r3
20000104:	2104      	movs	r1, #4
20000106:	430a      	orrs	r2, r1
20000108:	701a      	strb	r2, [r3, #0]
    GPIO_E.odrLow = control_register;
2000010a:	4a04      	ldr	r2, [pc, #16]	; (2000011c <graphic_ctrl_bit_set+0x40>)
2000010c:	230f      	movs	r3, #15
2000010e:	18fb      	adds	r3, r7, r3
20000110:	781b      	ldrb	r3, [r3, #0]
20000112:	7513      	strb	r3, [r2, #20]
}
20000114:	46c0      	nop			; (mov r8, r8)
20000116:	46bd      	mov	sp, r7
20000118:	b004      	add	sp, #16
2000011a:	bd80      	pop	{r7, pc}
2000011c:	40021000 	andmi	r1, r2, r0

20000120 <graphic_ctrl_bit_clear>:

void graphic_ctrl_bit_clear(uint8_t x){
20000120:	b580      	push	{r7, lr}
20000122:	b084      	sub	sp, #16
20000124:	af00      	add	r7, sp, #0
20000126:	0002      	movs	r2, r0
20000128:	1dfb      	adds	r3, r7, #7
2000012a:	701a      	strb	r2, [r3, #0]
    uint8_t control_register = GPIO_E.odrLow;
2000012c:	4a11      	ldr	r2, [pc, #68]	; (20000174 <graphic_ctrl_bit_clear+0x54>)
2000012e:	230f      	movs	r3, #15
20000130:	18fb      	adds	r3, r7, r3
20000132:	7d12      	ldrb	r2, [r2, #20]
20000134:	701a      	strb	r2, [r3, #0]
    control_register &= ~x;
20000136:	1dfb      	adds	r3, r7, #7
20000138:	781b      	ldrb	r3, [r3, #0]
2000013a:	b25b      	sxtb	r3, r3
2000013c:	43db      	mvns	r3, r3
2000013e:	b25b      	sxtb	r3, r3
20000140:	220f      	movs	r2, #15
20000142:	18ba      	adds	r2, r7, r2
20000144:	7812      	ldrb	r2, [r2, #0]
20000146:	b252      	sxtb	r2, r2
20000148:	4013      	ands	r3, r2
2000014a:	b25a      	sxtb	r2, r3
2000014c:	230f      	movs	r3, #15
2000014e:	18fb      	adds	r3, r7, r3
20000150:	701a      	strb	r2, [r3, #0]
    control_register |= B_SELECT;
20000152:	230f      	movs	r3, #15
20000154:	18fb      	adds	r3, r7, r3
20000156:	220f      	movs	r2, #15
20000158:	18ba      	adds	r2, r7, r2
2000015a:	7812      	ldrb	r2, [r2, #0]
2000015c:	2104      	movs	r1, #4
2000015e:	430a      	orrs	r2, r1
20000160:	701a      	strb	r2, [r3, #0]
    GPIO_E.odrLow = control_register;
20000162:	4a04      	ldr	r2, [pc, #16]	; (20000174 <graphic_ctrl_bit_clear+0x54>)
20000164:	230f      	movs	r3, #15
20000166:	18fb      	adds	r3, r7, r3
20000168:	781b      	ldrb	r3, [r3, #0]
2000016a:	7513      	strb	r3, [r2, #20]
}
2000016c:	46c0      	nop			; (mov r8, r8)
2000016e:	46bd      	mov	sp, r7
20000170:	b004      	add	sp, #16
20000172:	bd80      	pop	{r7, pc}
20000174:	40021000 	andmi	r1, r2, r0

20000178 <select_controller>:

void select_controller(uint8_t controller){
20000178:	b580      	push	{r7, lr}
2000017a:	b082      	sub	sp, #8
2000017c:	af00      	add	r7, sp, #0
2000017e:	0002      	movs	r2, r0
20000180:	1dfb      	adds	r3, r7, #7
20000182:	701a      	strb	r2, [r3, #0]
    switch(controller){
20000184:	1dfb      	adds	r3, r7, #7
20000186:	781b      	ldrb	r3, [r3, #0]
20000188:	2b08      	cmp	r3, #8
2000018a:	d00c      	beq.n	200001a6 <select_controller+0x2e>
2000018c:	dc02      	bgt.n	20000194 <select_controller+0x1c>
2000018e:	2b00      	cmp	r3, #0
20000190:	d005      	beq.n	2000019e <select_controller+0x26>
            break;
        case B_CS1 | B_CS2:
            graphic_ctrl_bit_set(B_CS1 | B_CS2);
            break;
    }
}
20000192:	e01a      	b.n	200001ca <select_controller+0x52>
    switch(controller){
20000194:	2b10      	cmp	r3, #16
20000196:	d00d      	beq.n	200001b4 <select_controller+0x3c>
20000198:	2b18      	cmp	r3, #24
2000019a:	d012      	beq.n	200001c2 <select_controller+0x4a>
}
2000019c:	e015      	b.n	200001ca <select_controller+0x52>
            graphic_ctrl_bit_clear(B_CS1 | B_CS2);
2000019e:	2018      	movs	r0, #24
200001a0:	f7ff ffbe 	bl	20000120 <graphic_ctrl_bit_clear>
            break;
200001a4:	e011      	b.n	200001ca <select_controller+0x52>
            graphic_ctrl_bit_clear(B_CS2);
200001a6:	2010      	movs	r0, #16
200001a8:	f7ff ffba 	bl	20000120 <graphic_ctrl_bit_clear>
            graphic_ctrl_bit_set(B_CS1);
200001ac:	2008      	movs	r0, #8
200001ae:	f7ff ff95 	bl	200000dc <graphic_ctrl_bit_set>
            break;
200001b2:	e00a      	b.n	200001ca <select_controller+0x52>
            graphic_ctrl_bit_clear(B_CS1);
200001b4:	2008      	movs	r0, #8
200001b6:	f7ff ffb3 	bl	20000120 <graphic_ctrl_bit_clear>
            graphic_ctrl_bit_set(B_CS2);
200001ba:	2010      	movs	r0, #16
200001bc:	f7ff ff8e 	bl	200000dc <graphic_ctrl_bit_set>
            break;
200001c0:	e003      	b.n	200001ca <select_controller+0x52>
            graphic_ctrl_bit_set(B_CS1 | B_CS2);
200001c2:	2018      	movs	r0, #24
200001c4:	f7ff ff8a 	bl	200000dc <graphic_ctrl_bit_set>
            break;
200001c8:	46c0      	nop			; (mov r8, r8)
}
200001ca:	46c0      	nop			; (mov r8, r8)
200001cc:	46bd      	mov	sp, r7
200001ce:	b002      	add	sp, #8
200001d0:	bd80      	pop	{r7, pc}

200001d2 <graphic_wait_ready>:

void graphic_wait_ready(void){
200001d2:	b580      	push	{r7, lr}
200001d4:	af00      	add	r7, sp, #0
    // Enable = 0
    graphic_ctrl_bit_clear(B_E);
200001d6:	2040      	movs	r0, #64	; 0x40
200001d8:	f7ff ffa2 	bl	20000120 <graphic_ctrl_bit_clear>
    // E: 15-8 = input, 7-0 = output
    GPIO_E.moder = 0x00005555;
200001dc:	4b11      	ldr	r3, [pc, #68]	; (20000224 <graphic_wait_ready+0x52>)
200001de:	4a12      	ldr	r2, [pc, #72]	; (20000228 <graphic_wait_ready+0x56>)
200001e0:	601a      	str	r2, [r3, #0]
    
    // RS = 0, RW = 1
    graphic_ctrl_bit_clear(B_RS);
200001e2:	2001      	movs	r0, #1
200001e4:	f7ff ff9c 	bl	20000120 <graphic_ctrl_bit_clear>
    graphic_ctrl_bit_set(B_RW);
200001e8:	2002      	movs	r0, #2
200001ea:	f7ff ff77 	bl	200000dc <graphic_ctrl_bit_set>
    delay_500ns();
200001ee:	f7ff ff47 	bl	20000080 <delay_500ns>
    
    while(1){
        // Enable = 1
        graphic_ctrl_bit_set(B_E);
200001f2:	2040      	movs	r0, #64	; 0x40
200001f4:	f7ff ff72 	bl	200000dc <graphic_ctrl_bit_set>
        delay_500ns();
200001f8:	f7ff ff42 	bl	20000080 <delay_500ns>
        // Enable = 0
        graphic_ctrl_bit_clear(B_E);
200001fc:	2040      	movs	r0, #64	; 0x40
200001fe:	f7ff ff8f 	bl	20000120 <graphic_ctrl_bit_clear>
        
        // Exit loop if not busy
        if((GPIO_E.idrHigh & 0x80) != 0){
20000202:	4b08      	ldr	r3, [pc, #32]	; (20000224 <graphic_wait_ready+0x52>)
20000204:	7c5b      	ldrb	r3, [r3, #17]
20000206:	b2db      	uxtb	r3, r3
20000208:	b25b      	sxtb	r3, r3
2000020a:	2b00      	cmp	r3, #0
2000020c:	db00      	blt.n	20000210 <graphic_wait_ready+0x3e>
        graphic_ctrl_bit_set(B_E);
2000020e:	e7f0      	b.n	200001f2 <graphic_wait_ready+0x20>
            break;
20000210:	46c0      	nop			; (mov r8, r8)
        } 
    }
    
    // Enable = 1
    graphic_ctrl_bit_set(B_E);
20000212:	2040      	movs	r0, #64	; 0x40
20000214:	f7ff ff62 	bl	200000dc <graphic_ctrl_bit_set>
    // E: 15-0 = output
    GPIO_E.moder = 0x55555555;
20000218:	4b02      	ldr	r3, [pc, #8]	; (20000224 <graphic_wait_ready+0x52>)
2000021a:	4a04      	ldr	r2, [pc, #16]	; (2000022c <graphic_wait_ready+0x5a>)
2000021c:	601a      	str	r2, [r3, #0]
}
2000021e:	46c0      	nop			; (mov r8, r8)
20000220:	46bd      	mov	sp, r7
20000222:	bd80      	pop	{r7, pc}
20000224:	40021000 	andmi	r1, r2, r0
20000228:	00005555 	andeq	r5, r0, r5, asr r5
2000022c:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

20000230 <graphic_read>:

uint8_t graphic_read(uint8_t controller){
20000230:	b580      	push	{r7, lr}
20000232:	b082      	sub	sp, #8
20000234:	af00      	add	r7, sp, #0
20000236:	0002      	movs	r2, r0
20000238:	1dfb      	adds	r3, r7, #7
2000023a:	701a      	strb	r2, [r3, #0]
    
}
2000023c:	46c0      	nop			; (mov r8, r8)
2000023e:	0018      	movs	r0, r3
20000240:	46bd      	mov	sp, r7
20000242:	b002      	add	sp, #8
20000244:	bd80      	pop	{r7, pc}
20000246:	46c0      	nop			; (mov r8, r8)

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	0000004e 	andeq	r0, r0, lr, asr #32
   4:	00000004 	andeq	r0, r0, r4
   8:	01040000 	mrseq	r0, (UNDEF: 4)
   c:	0000005d 	andeq	r0, r0, sp, asr r0
  10:	00000d0c 	andeq	r0, r0, ip, lsl #26
	...
  20:	08010200 	stmdaeq	r1, {r9}
  24:	000000f5 	strdeq	r0, [r0], -r5
  28:	00070402 	andeq	r0, r7, r2, lsl #8
  2c:	03000000 	movweq	r0, #0
  30:	00000103 	andeq	r0, r0, r3, lsl #2
  34:	00101401 	andseq	r1, r0, r1, lsl #8
  38:	000a2000 	andeq	r2, sl, r0
  3c:	9c010000 	stcls	0, cr0, [r1], {-0}
  40:	00005503 	andeq	r5, r0, r3, lsl #10
  44:	000b0100 	andeq	r0, fp, r0, lsl #2
  48:	0c200000 	stceq	0, cr0, [r0], #-0
  4c:	01000000 	mrseq	r0, (UNDEF: 0)
  50:	00aa009c 	umlaleq	r0, sl, ip, r0
  54:	00040000 	andeq	r0, r4, r0
  58:	00000035 	andeq	r0, r0, r5, lsr r0
  5c:	005d0104 	subseq	r0, sp, r4, lsl #2
  60:	200c0000 	andcs	r0, ip, r0
  64:	1c000001 	stcne	0, cr0, [r0], {1}
  68:	be200000 	cdplt	0, 2, cr0, cr0, cr0, {0}
  6c:	89000000 	stmdbhi	r0, {}	; <UNPREDICTABLE>
  70:	02000000 	andeq	r0, r0, #0
  74:	00000166 	andeq	r0, r0, r6, ror #2
  78:	00bc2301 	adcseq	r2, ip, r1, lsl #6
  7c:	001e2000 	andseq	r2, lr, r0
  80:	9c010000 	stcls	0, cr0, [r1], {-0}
  84:	00000044 	andeq	r0, r0, r4, asr #32
  88:	00736d03 	rsbseq	r6, r3, r3, lsl #26
  8c:	00442301 	subeq	r2, r4, r1, lsl #6
  90:	91020000 	mrsls	r0, (UNDEF: 2)
  94:	04040074 	streq	r0, [r4], #-116	; 0xffffff8c
  98:	00000007 	andeq	r0, r0, r7
  9c:	01080200 	mrseq	r0, R8_fiq
  a0:	1d010000 	stcne	0, cr0, [r1, #-0]
  a4:	20000092 	mulcs	r0, r2, r0
  a8:	0000002a 	andeq	r0, r0, sl, lsr #32
  ac:	00849c01 	addeq	r9, r4, r1, lsl #24
  b0:	75030000 	strvc	r0, [r3, #-0]
  b4:	1d010073 	stcne	0, cr0, [r1, #-460]	; 0xfffffe34
  b8:	00000044 	andeq	r0, r0, r4, asr #32
  bc:	056c9102 	strbeq	r9, [ip, #-258]!	; 0xfffffefe
  c0:	2000009a 	mulcs	r0, sl, r0
  c4:	0000001a 	andeq	r0, r0, sl, lsl r0
  c8:	01006906 	tsteq	r0, r6, lsl #18
  cc:	0000841e 	andeq	r8, r0, lr, lsl r4
  d0:	74910200 	ldrvc	r0, [r1], #512	; 0x200
  d4:	04070000 	streq	r0, [r7], #-0
  d8:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
  dc:	01140800 	tsteq	r4, r0, lsl #16
  e0:	18010000 	stmdane	r1, {}	; <UNPREDICTABLE>
  e4:	20000080 	andcs	r0, r0, r0, lsl #1
  e8:	00000012 	andeq	r0, r0, r2, lsl r0
  ec:	72099c01 	andvc	r9, r9, #256	; 0x100
  f0:	01000001 	tsteq	r0, r1
  f4:	00001c0c 	andeq	r1, r0, ip, lsl #24
  f8:	00006420 	andeq	r6, r0, r0, lsr #8
  fc:	009c0100 	addseq	r0, ip, r0, lsl #2
 100:	000001b8 			; <UNDEFINED> instruction: 0x000001b8
 104:	00ce0004 	sbceq	r0, lr, r4
 108:	01040000 	mrseq	r0, (UNDEF: 4)
 10c:	0000005d 	andeq	r0, r0, sp, asr r0
 110:	00020f0c 	andeq	r0, r2, ip, lsl #30
 114:	0000dc00 	andeq	sp, r0, r0, lsl #24
 118:	00016a20 	andeq	r6, r1, r0, lsr #20
 11c:	00012100 	andeq	r2, r1, r0, lsl #2
 120:	02020200 	andeq	r0, r2, #0, 4
 124:	0000420b 	andeq	r4, r0, fp, lsl #4
 128:	01d70300 	bicseq	r0, r7, r0, lsl #6
 12c:	0c020000 	stceq	0, cr0, [r2], {-0}
 130:	00000042 	andeq	r0, r0, r2, asr #32
 134:	02630300 	rsbeq	r0, r3, #0, 6
 138:	0d020000 	stceq	0, cr0, [r2, #-0]
 13c:	00000042 	andeq	r0, r0, r2, asr #32
 140:	01040001 	tsteq	r4, r1
 144:	0000f508 	andeq	pc, r0, r8, lsl #10
 148:	02040500 	andeq	r0, r4, #0, 10
 14c:	00006209 	andeq	r6, r0, r9, lsl #4
 150:	64690600 	strbtvs	r0, [r9], #-1536	; 0xfffffa00
 154:	0a020072 	beq	80324 <startup-0x1ff7fcdc>
 158:	00000062 	andeq	r0, r0, r2, rrx
 15c:	00002107 	andeq	r2, r0, r7, lsl #2
 160:	04040000 	streq	r0, [r4], #-0
 164:	00000007 	andeq	r0, r0, r7
 168:	02020200 	andeq	r0, r2, #0, 4
 16c:	00008a12 	andeq	r8, r0, r2, lsl sl
 170:	01d00300 	bicseq	r0, r0, r0, lsl #6
 174:	13020000 	movwne	r0, #8192	; 0x2000
 178:	00000042 	andeq	r0, r0, r2, asr #32
 17c:	01970300 	orrseq	r0, r7, r0, lsl #6
 180:	14020000 	strne	r0, [r2], #-0
 184:	00000042 	andeq	r0, r0, r2, asr #32
 188:	04050001 	streq	r0, [r5], #-1
 18c:	00a31002 	adceq	r1, r3, r2
 190:	6f060000 	svcvs	0x00060000
 194:	02007264 	andeq	r7, r0, #100, 4	; 0x40000006
 198:	00006211 	andeq	r6, r0, r1, lsl r2
 19c:	00690700 	rsbeq	r0, r9, r0, lsl #14
 1a0:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
 1a4:	000001f8 	strdeq	r0, [r0], -r8
 1a8:	ec040218 	sfm	f0, 4, [r4], {24}
 1ac:	03000000 	movweq	r0, #0
 1b0:	00000184 	andeq	r0, r0, r4, lsl #3
 1b4:	00620502 	rsbeq	r0, r2, r2, lsl #10
 1b8:	03000000 	movweq	r0, #0
 1bc:	000001b6 			; <UNDEFINED> instruction: 0x000001b6
 1c0:	00620602 	rsbeq	r0, r2, r2, lsl #12
 1c4:	03040000 	movweq	r0, #16384	; 0x4000
 1c8:	00000280 	andeq	r0, r0, r0, lsl #5
 1cc:	00620702 	rsbeq	r0, r2, r2, lsl #14
 1d0:	03080000 	movweq	r0, #32768	; 0x8000
 1d4:	0000017e 	andeq	r0, r0, lr, ror r1
 1d8:	00620802 	rsbeq	r0, r2, r2, lsl #16
 1dc:	090c0000 	stmdbeq	ip, {}	; <UNPREDICTABLE>
 1e0:	00000049 	andeq	r0, r0, r9, asr #32
 1e4:	008a0910 	addeq	r0, sl, r0, lsl r9
 1e8:	00140000 	andseq	r0, r4, r0
 1ec:	00025e0a 	andeq	r5, r2, sl, lsl #28
 1f0:	a3170200 	tstge	r7, #0, 4
 1f4:	0a000000 	beq	1fc <startup-0x1ffffe04>
 1f8:	000001de 	ldrdeq	r0, [r0], -lr
 1fc:	00420f03 	subeq	r0, r2, r3, lsl #30
 200:	8a0b0000 	bhi	2c0208 <startup-0x1fd3fdf8>
 204:	01000001 	tsteq	r0, r1
 208:	0000f741 	andeq	pc, r0, r1, asr #14
 20c:	00023000 	andeq	r3, r2, r0
 210:	00001620 	andeq	r1, r0, r0, lsr #12
 214:	2a9c0100 	bcs	fe70061c <graphic_read+0xde7003ec>
 218:	0c000001 	stceq	0, cr0, [r0], {1}
 21c:	000001ed 	andeq	r0, r0, sp, ror #3
 220:	00f74101 	rscseq	r4, r7, r1, lsl #2
 224:	91020000 	mrsls	r0, (UNDEF: 2)
 228:	bd0d0077 	stclt	0, cr0, [sp, #-476]	; 0xfffffe24
 22c:	01000001 	tsteq	r0, r1
 230:	0001d223 	andeq	sp, r1, r3, lsr #4
 234:	00005e20 	andeq	r5, r0, r0, lsr #28
 238:	0e9c0100 	fmleqe	f0, f4, f0
 23c:	000001e6 	andeq	r0, r0, r6, ror #3
 240:	01781001 	cmneq	r8, r1
 244:	005a2000 	subseq	r2, sl, r0
 248:	9c010000 	stcls	0, cr0, [r1], {-0}
 24c:	0000015f 	andeq	r0, r0, pc, asr r1
 250:	0001ed0c 	andeq	lr, r1, ip, lsl #26
 254:	f7100100 			; <UNDEFINED> instruction: 0xf7100100
 258:	02000000 	andeq	r0, r0, #0
 25c:	0f007791 	svceq	0x00007791
 260:	0000019f 	muleq	r0, pc, r1	; <UNPREDICTABLE>
 264:	01200901 			; <UNDEFINED> instruction: 0x01200901
 268:	00582000 	subseq	r2, r8, r0
 26c:	9c010000 	stcls	0, cr0, [r1], {-0}
 270:	0000018f 	andeq	r0, r0, pc, lsl #3
 274:	01007810 	tsteq	r0, r0, lsl r8
 278:	0000f709 	andeq	pc, r0, r9, lsl #14
 27c:	6f910200 	svcvs	0x00910200
 280:	0001fe11 	andeq	pc, r1, r1, lsl lr	; <UNPREDICTABLE>
 284:	f70a0100 			; <UNDEFINED> instruction: 0xf70a0100
 288:	02000000 	andeq	r0, r0, #0
 28c:	12007791 	andne	r7, r0, #38010880	; 0x2440000
 290:	0000026b 	andeq	r0, r0, fp, ror #4
 294:	00dc0301 	sbcseq	r0, ip, r1, lsl #6
 298:	00442000 	subeq	r2, r4, r0
 29c:	9c010000 	stcls	0, cr0, [r1], {-0}
 2a0:	01007810 	tsteq	r0, r0, lsl r8
 2a4:	0000f703 	andeq	pc, r0, r3, lsl #14
 2a8:	6f910200 	svcvs	0x00910200
 2ac:	0001fe11 	andeq	pc, r1, r1, lsl lr	; <UNPREDICTABLE>
 2b0:	f7040100 			; <UNDEFINED> instruction: 0xf7040100
 2b4:	02000000 	andeq	r0, r0, #0
 2b8:	00007791 	muleq	r0, r1, r7

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	1117550e 	tstne	r7, lr, lsl #10
   c:	00171001 	andseq	r1, r7, r1
  10:	00240200 	eoreq	r0, r4, r0, lsl #4
  14:	0b3e0b0b 	bleq	f82c48 <startup-0x1f07d3b8>
  18:	00000e03 	andeq	r0, r0, r3, lsl #28
  1c:	3f002e03 	svccc	0x00002e03
  20:	3a0e0319 	bcc	380c8c <startup-0x1fc7f374>
  24:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
  28:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
  2c:	97184006 	ldrls	r4, [r8, -r6]
  30:	00001942 	andeq	r1, r0, r2, asr #18
  34:	01110100 	tsteq	r1, r0, lsl #2
  38:	0b130e25 	bleq	4c38d4 <startup-0x1fb3c72c>
  3c:	01110e03 	tsteq	r1, r3, lsl #28
  40:	17100612 			; <UNDEFINED> instruction: 0x17100612
  44:	2e020000 	cdpcs	0, 0, cr0, cr2, cr0, {0}
  48:	03193f01 	tsteq	r9, #1, 30
  4c:	3b0b3a0e 	blcc	2ce88c <startup-0x1fd31774>
  50:	1119270b 	tstne	r9, fp, lsl #14
  54:	40061201 	andmi	r1, r6, r1, lsl #4
  58:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
  5c:	00001301 	andeq	r1, r0, r1, lsl #6
  60:	03000503 	movweq	r0, #1283	; 0x503
  64:	3b0b3a08 	blcc	2ce88c <startup-0x1fd31774>
  68:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
  6c:	04000018 	streq	r0, [r0], #-24	; 0xffffffe8
  70:	0b0b0024 	bleq	2c0108 <startup-0x1fd3fef8>
  74:	0e030b3e 	vmoveq.16	d3[0], r0
  78:	0b050000 	bleq	140080 <startup-0x1febff80>
  7c:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
  80:	06000006 	streq	r0, [r0], -r6
  84:	08030034 	stmdaeq	r3, {r2, r4, r5}
  88:	0b3b0b3a 	bleq	ec2d78 <startup-0x1f13d288>
  8c:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
  90:	24070000 	strcs	r0, [r7], #-0
  94:	3e0b0b00 	vmlacc.f64	d0, d11, d0
  98:	0008030b 	andeq	r0, r8, fp, lsl #6
  9c:	002e0800 	eoreq	r0, lr, r0, lsl #16
  a0:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  a4:	0b3b0b3a 	bleq	ec2d94 <startup-0x1f13d26c>
  a8:	01111927 	tsteq	r1, r7, lsr #18
  ac:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
  b0:	00194296 	mulseq	r9, r6, r2
  b4:	002e0900 	eoreq	r0, lr, r0, lsl #18
  b8:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  bc:	0b3b0b3a 	bleq	ec2dac <startup-0x1f13d254>
  c0:	01111927 	tsteq	r1, r7, lsr #18
  c4:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
  c8:	00194297 	mulseq	r9, r7, r2
  cc:	11010000 	mrsne	r0, (UNDEF: 1)
  d0:	130e2501 	movwne	r2, #58625	; 0xe501
  d4:	110e030b 	tstne	lr, fp, lsl #6
  d8:	10061201 	andne	r1, r6, r1, lsl #4
  dc:	02000017 	andeq	r0, r0, #23
  e0:	0b0b0113 	bleq	2c0534 <startup-0x1fd3facc>
  e4:	0b3b0b3a 	bleq	ec2dd4 <startup-0x1f13d22c>
  e8:	00001301 	andeq	r1, r0, r1, lsl #6
  ec:	03000d03 	movweq	r0, #3331	; 0xd03
  f0:	3b0b3a0e 	blcc	2ce930 <startup-0x1fd316d0>
  f4:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
  f8:	0400000b 	streq	r0, [r0], #-11
  fc:	0b0b0024 	bleq	2c0194 <startup-0x1fd3fe6c>
 100:	0e030b3e 	vmoveq.16	d3[0], r0
 104:	17050000 	strne	r0, [r5, -r0]
 108:	3a0b0b01 	bcc	2c2d14 <startup-0x1fd3d2ec>
 10c:	010b3b0b 	tsteq	fp, fp, lsl #22
 110:	06000013 			; <UNDEFINED> instruction: 0x06000013
 114:	0803000d 	stmdaeq	r3, {r0, r2, r3}
 118:	0b3b0b3a 	bleq	ec2e08 <startup-0x1f13d1f8>
 11c:	00001349 	andeq	r1, r0, r9, asr #6
 120:	49000d07 	stmdbmi	r0, {r0, r1, r2, r8, sl, fp}
 124:	08000013 	stmdaeq	r0, {r0, r1, r4}
 128:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
 12c:	0b3a0b0b 	bleq	e82d60 <startup-0x1f17d2a0>
 130:	13010b3b 	movwne	r0, #6971	; 0x1b3b
 134:	0d090000 	stceq	0, cr0, [r9, #-0]
 138:	38134900 	ldmdacc	r3, {r8, fp, lr}
 13c:	0a00000b 	beq	170 <startup-0x1ffffe90>
 140:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
 144:	0b3b0b3a 	bleq	ec2e34 <startup-0x1f13d1cc>
 148:	00001349 	andeq	r1, r0, r9, asr #6
 14c:	3f012e0b 	svccc	0x00012e0b
 150:	3a0e0319 	bcc	380dbc <startup-0x1fc7f244>
 154:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 158:	11134919 	tstne	r3, r9, lsl r9
 15c:	40061201 	andmi	r1, r6, r1, lsl #4
 160:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
 164:	00001301 	andeq	r1, r0, r1, lsl #6
 168:	0300050c 	movweq	r0, #1292	; 0x50c
 16c:	3b0b3a0e 	blcc	2ce9ac <startup-0x1fd31654>
 170:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 174:	0d000018 	stceq	0, cr0, [r0, #-96]	; 0xffffffa0
 178:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
 17c:	0b3a0e03 	bleq	e83990 <startup-0x1f17c670>
 180:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 184:	06120111 			; <UNDEFINED> instruction: 0x06120111
 188:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
 18c:	0e000019 	mcreq	0, 0, r0, cr0, cr9, {0}
 190:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 194:	0b3a0e03 	bleq	e839a8 <startup-0x1f17c658>
 198:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 19c:	06120111 			; <UNDEFINED> instruction: 0x06120111
 1a0:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
 1a4:	00130119 	andseq	r0, r3, r9, lsl r1
 1a8:	012e0f00 			; <UNDEFINED> instruction: 0x012e0f00
 1ac:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 1b0:	0b3b0b3a 	bleq	ec2ea0 <startup-0x1f13d160>
 1b4:	01111927 	tsteq	r1, r7, lsr #18
 1b8:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 1bc:	01194297 			; <UNDEFINED> instruction: 0x01194297
 1c0:	10000013 	andne	r0, r0, r3, lsl r0
 1c4:	08030005 	stmdaeq	r3, {r0, r2}
 1c8:	0b3b0b3a 	bleq	ec2eb8 <startup-0x1f13d148>
 1cc:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 1d0:	34110000 	ldrcc	r0, [r1], #-0
 1d4:	3a0e0300 	bcc	380ddc <startup-0x1fc7f224>
 1d8:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 1dc:	00180213 	andseq	r0, r8, r3, lsl r2
 1e0:	012e1200 			; <UNDEFINED> instruction: 0x012e1200
 1e4:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 1e8:	0b3b0b3a 	bleq	ec2ed8 <startup-0x1f13d128>
 1ec:	01111927 	tsteq	r1, r7, lsr #18
 1f0:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 1f4:	00194297 	mulseq	r9, r7, r2
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	0000000a 	andeq	r0, r0, sl
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
	...
  28:	0000001c 	andeq	r0, r0, ip, lsl r0
  2c:	00520002 	subseq	r0, r2, r2
  30:	00040000 	andeq	r0, r4, r0
  34:	00000000 	andeq	r0, r0, r0
  38:	2000001c 	andcs	r0, r0, ip, lsl r0
  3c:	000000be 	strheq	r0, [r0], -lr
	...
  48:	0000001c 	andeq	r0, r0, ip, lsl r0
  4c:	01000002 	tsteq	r0, r2
  50:	00040000 	andeq	r0, r4, r0
  54:	00000000 	andeq	r0, r0, r0
  58:	200000dc 	ldrdcs	r0, [r0], -ip
  5c:	0000016a 	andeq	r0, r0, sl, ror #2
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000010 	andcs	r0, r0, r0, lsl r0
   4:	2000001a 	andcs	r0, r0, sl, lsl r0
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	00000085 	andeq	r0, r0, r5, lsl #1
   4:	005e0002 	subseq	r0, lr, r2
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	43010000 	movwmi	r0, #4096	; 0x1000
  1c:	63532f3a 	cmpvs	r3, #58, 30	; 0xe8
  20:	6c6f6f68 	stclvs	15, cr6, [pc], #-416	; fffffe88 <graphic_read+0xdffffc58>
  24:	5441442f 	strbpl	r4, [r1], #-1071	; 0xfffffbd1
  28:	2f373130 	svccs	0x00373130
  2c:	2d706f4d 	ldclcs	15, cr6, [r0, #-308]!	; 0xfffffecc
  30:	30544144 	subscc	r4, r4, r4, asr #2
  34:	4c2f3731 	stcmi	7, cr3, [pc], #-196	; ffffff78 <graphic_read+0xdffffd48>
  38:	20736261 	rsbscs	r6, r3, r1, ror #4
  3c:	20646e61 	rsbcs	r6, r4, r1, ror #28
  40:	72657865 	rsbvc	r7, r5, #6619136	; 0x650000
  44:	65736963 	ldrbvs	r6, [r3, #-2403]!	; 0xfffff69d
  48:	72672f73 	rsbvc	r2, r7, #460	; 0x1cc
  4c:	69687061 	stmdbvs	r8!, {r0, r5, r6, ip, sp, lr}^
  50:	73696463 	cmnvc	r9, #1660944384	; 0x63000000
  54:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
  58:	74730000 	ldrbtvc	r0, [r3], #-0
  5c:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
  60:	00632e70 	rsbeq	r2, r3, r0, ror lr
  64:	00000001 	andeq	r0, r0, r1
  68:	00020500 	andeq	r0, r2, r0, lsl #10
  6c:	03200000 	nopeq	{0}	; <UNPREDICTABLE>
  70:	5e13010a 	mufpls	f0, f3, #2.0
  74:	01000302 	tsteq	r0, r2, lsl #6
  78:	02050001 	andeq	r0, r5, #1
  7c:	20000010 	andcs	r0, r0, r0, lsl r0
  80:	2f011303 	svccs	0x00011303
  84:	01000302 	tsteq	r0, r2, lsl #6
  88:	00009401 	andeq	r9, r0, r1, lsl #8
  8c:	5c000200 	sfmpl	f0, 4, [r0], {-0}
  90:	02000000 	andeq	r0, r0, #0
  94:	0d0efb01 	vstreq	d15, [lr, #-4]
  98:	01010100 	mrseq	r0, (UNDEF: 17)
  9c:	00000001 	andeq	r0, r0, r1
  a0:	01000001 	tsteq	r0, r1
  a4:	532f3a43 			; <UNDEFINED> instruction: 0x532f3a43
  a8:	6f6f6863 	svcvs	0x006f6863
  ac:	41442f6c 	cmpmi	r4, ip, ror #30
  b0:	37313054 			; <UNDEFINED> instruction: 0x37313054
  b4:	706f4d2f 	rsbvc	r4, pc, pc, lsr #26
  b8:	5441442d 	strbpl	r4, [r1], #-1069	; 0xfffffbd3
  bc:	2f373130 	svccs	0x00373130
  c0:	7362614c 	cmnvc	r2, #76, 2
  c4:	646e6120 	strbtvs	r6, [lr], #-288	; 0xfffffee0
  c8:	65786520 	ldrbvs	r6, [r8, #-1312]!	; 0xfffffae0
  cc:	73696372 	cmnvc	r9, #-939524095	; 0xc8000001
  d0:	672f7365 	strvs	r7, [pc, -r5, ror #6]!
  d4:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
  d8:	69646369 	stmdbvs	r4!, {r0, r3, r5, r6, r8, r9, sp, lr}^
  dc:	616c7073 	smcvs	50947	; 0xc703
  e0:	64000079 	strvs	r0, [r0], #-121	; 0xffffff87
  e4:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
  e8:	0100632e 	tsteq	r0, lr, lsr #6
  ec:	00000000 	andeq	r0, r0, r0
  f0:	001c0205 	andseq	r0, ip, r5, lsl #4
  f4:	0b032000 	bleq	c80fc <startup-0x1ff37f04>
  f8:	67672f01 	strbvs	r2, [r7, -r1, lsl #30]!
  fc:	3e683d67 	cdpcc	13, 6, cr3, cr8, cr7, {3}
 100:	2f2fbc67 	svccs	0x002fbc67
 104:	004b3e2f 	subeq	r3, fp, pc, lsr #28
 108:	3d030402 	cfstrscc	mvf0, [r3, #-8]
 10c:	03040200 	movweq	r0, #16896	; 0x4200
 110:	0402002d 	streq	r0, [r2], #-45	; 0xffffffd3
 114:	063c0601 	ldrteq	r0, [ip], -r1, lsl #12
 118:	754b4c5b 	strbvc	r4, [fp, #-3163]	; 0xfffff3a5
 11c:	01000402 	tsteq	r0, r2, lsl #8
 120:	0000cb01 	andeq	ip, r0, r1, lsl #22
 124:	83000200 	movwhi	r0, #512	; 0x200
 128:	02000000 	andeq	r0, r0, #0
 12c:	0d0efb01 	vstreq	d15, [lr, #-4]
 130:	01010100 	mrseq	r0, (UNDEF: 17)
 134:	00000001 	andeq	r0, r0, r1
 138:	01000001 	tsteq	r0, r1
 13c:	532f3a43 			; <UNDEFINED> instruction: 0x532f3a43
 140:	6f6f6863 	svcvs	0x006f6863
 144:	41442f6c 	cmpmi	r4, ip, ror #30
 148:	37313054 			; <UNDEFINED> instruction: 0x37313054
 14c:	706f4d2f 	rsbvc	r4, pc, pc, lsr #26
 150:	5441442d 	strbpl	r4, [r1], #-1069	; 0xfffffbd3
 154:	2f373130 	svccs	0x00373130
 158:	7362614c 	cmnvc	r2, #76, 2
 15c:	646e6120 	strbtvs	r6, [lr], #-288	; 0xfffffee0
 160:	65786520 	ldrbvs	r6, [r8, #-1312]!	; 0xfffffae0
 164:	73696372 	cmnvc	r9, #-939524095	; 0xc8000001
 168:	672f7365 	strvs	r7, [pc, -r5, ror #6]!
 16c:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
 170:	69646369 	stmdbvs	r4!, {r0, r3, r5, r6, r8, r9, sp, lr}^
 174:	616c7073 	smcvs	50947	; 0xc703
 178:	67000079 	smlsdxvs	r0, r9, r0, r0
 17c:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
 180:	69646369 	stmdbvs	r4!, {r0, r3, r5, r6, r8, r9, sp, lr}^
 184:	616c7073 	smcvs	50947	; 0xc703
 188:	00632e79 	rsbeq	r2, r3, r9, ror lr
 18c:	67000001 	strvs	r0, [r0, -r1]
 190:	2e6f6970 			; <UNDEFINED> instruction: 0x2e6f6970
 194:	00010068 	andeq	r0, r1, r8, rrx
 198:	61726700 	cmnvs	r2, r0, lsl #14
 19c:	63696870 	cmnvs	r9, #112, 16	; 0x700000
 1a0:	70736964 	rsbsvc	r6, r3, r4, ror #18
 1a4:	2e79616c 	rpwcsez	f6, f1, #4.0
 1a8:	00010068 	andeq	r0, r1, r8, rrx
 1ac:	05000000 	streq	r0, [r0, #-0]
 1b0:	0000dc02 	andeq	sp, r0, r2, lsl #24
 1b4:	59671420 	stmdbpl	r7!, {r5, sl, ip}^
 1b8:	676859bb 			; <UNDEFINED> instruction: 0x676859bb
 1bc:	5983d759 	stmibpl	r3, {r0, r3, r4, r6, r8, r9, sl, ip, lr, pc}
 1c0:	10036768 	andne	r6, r3, r8, ror #14
 1c4:	20700374 	rsbscs	r0, r0, r4, ror r3
 1c8:	034a1003 	movteq	r1, #40963	; 0xa003
 1cc:	223d2072 	eorscs	r2, sp, #114	; 0x72
 1d0:	3d223d3d 	stccc	13, cr3, [r2, #-244]!	; 0xffffff0c
 1d4:	223d223d 	eorscs	r2, sp, #-805306365	; 0xd0000003
 1d8:	3f3e304c 	svccc	0x003e304c
 1dc:	3d323d3d 	ldccc	13, cr3, [r2, #-244]!	; 0xffffff0c
 1e0:	7a033f30 	bvc	cfea8 <startup-0x1ff30158>
 1e4:	3e252766 	cdpcc	7, 2, cr2, cr5, cr6, {3}
 1e8:	0268923d 	rsbeq	r9, r8, #-805306365	; 0xd0000003
 1ec:	01010005 	tsteq	r1, r5

Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
   4:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
   8:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
   c:	2f3a4300 	svccs	0x003a4300
  10:	6f686353 	svcvs	0x00686353
  14:	442f6c6f 	strtmi	r6, [pc], #-3183	; 1c <startup-0x1fffffe4>
  18:	31305441 	teqcc	r0, r1, asr #8
  1c:	6f4d2f37 	svcvs	0x004d2f37
  20:	41442d70 	hvcmi	17104	; 0x42d0
  24:	37313054 			; <UNDEFINED> instruction: 0x37313054
  28:	62614c2f 	rsbvs	r4, r1, #12032	; 0x2f00
  2c:	6e612073 	mcrvs	0, 3, r2, cr1, cr3, {3}
  30:	78652064 	stmdavc	r5!, {r2, r5, r6, sp}^
  34:	69637265 	stmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
  38:	2f736573 	svccs	0x00736573
  3c:	70617267 	rsbvc	r7, r1, r7, ror #4
  40:	64636968 	strbtvs	r6, [r3], #-2408	; 0xfffff698
  44:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
  48:	732f7961 			; <UNDEFINED> instruction: 0x732f7961
  4c:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
  50:	632e7075 			; <UNDEFINED> instruction: 0x632e7075
  54:	61747300 	cmnvs	r4, r0, lsl #6
  58:	70757472 	rsbsvc	r7, r5, r2, ror r4
  5c:	554e4700 	strbpl	r4, [lr, #-1792]	; 0xfffff900
  60:	39394320 	ldmdbcc	r9!, {r5, r8, r9, lr}
  64:	332e3620 			; <UNDEFINED> instruction: 0x332e3620
  68:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  6c:	30373130 	eorscc	r3, r7, r0, lsr r1
  70:	20353132 	eorscs	r3, r5, r2, lsr r1
  74:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  78:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  7c:	415b2029 	cmpmi	fp, r9, lsr #32
  80:	652f4d52 	strvs	r4, [pc, #-3410]!	; fffff336 <graphic_read+0xdffff106>
  84:	6465626d 	strbtvs	r6, [r5], #-621	; 0xfffffd93
  88:	2d646564 	cfstr64cs	mvdx6, [r4, #-400]!	; 0xfffffe70
  8c:	72622d36 	rsbvc	r2, r2, #3456	; 0xd80
  90:	68636e61 	stmdavs	r3!, {r0, r5, r6, r9, sl, fp, sp, lr}^
  94:	76657220 	strbtvc	r7, [r5], -r0, lsr #4
  98:	6f697369 	svcvs	0x00697369
  9c:	3432206e 	ldrtcc	r2, [r2], #-110	; 0xffffff92
  a0:	32313535 	eorscc	r3, r1, #222298112	; 0xd400000
  a4:	6d2d205d 	stcvs	0, cr2, [sp, #-372]!	; 0xfffffe8c
  a8:	6d756874 	ldclvs	8, cr6, [r5, #-464]!	; 0xfffffe30
  ac:	6d2d2062 	stcvs	0, cr2, [sp, #-392]!	; 0xfffffe78
  b0:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
  b4:	6d72613d 	ldfvse	f6, [r2, #-244]!	; 0xffffff0c
  b8:	6d2d3676 	stcvs	6, cr3, [sp, #-472]!	; 0xfffffe28
  bc:	666d2d20 	strbtvs	r2, [sp], -r0, lsr #26
  c0:	74616f6c 	strbtvc	r6, [r1], #-3948	; 0xfffff094
  c4:	6962612d 	stmdbvs	r2!, {r0, r2, r3, r5, r8, sp, lr}^
  c8:	666f733d 			; <UNDEFINED> instruction: 0x666f733d
  cc:	6d2d2074 	stcvs	0, cr2, [sp, #-464]!	; 0xfffffe30
  d0:	6d756874 	ldclvs	8, cr6, [r5, #-464]!	; 0xfffffe30
  d4:	6d2d2062 	stcvs	0, cr2, [sp, #-392]!	; 0xfffffe78
  d8:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
  dc:	6d72613d 	ldfvse	f6, [r2, #-244]!	; 0xffffff0c
  e0:	6d2d3676 	stcvs	6, cr3, [sp, #-472]!	; 0xfffffe28
  e4:	20672d20 	rsbcs	r2, r7, r0, lsr #26
  e8:	20304f2d 	eorscs	r4, r0, sp, lsr #30
  ec:	6474732d 	ldrbtvs	r7, [r4], #-813	; 0xfffffcd3
  f0:	3939633d 	ldmdbcc	r9!, {r0, r2, r3, r4, r5, r8, r9, sp, lr}
  f4:	736e7500 	cmnvc	lr, #0, 10
  f8:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
  fc:	68632064 	stmdavs	r3!, {r2, r5, r6, sp}^
 100:	6d007261 	sfmvs	f7, 4, [r0, #-388]	; 0xfffffe7c
 104:	006e6961 	rsbeq	r6, lr, r1, ror #18
 108:	616c6564 	cmnvs	ip, r4, ror #10
 10c:	696d5f79 	stmdbvs	sp!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 110:	006f726b 	rsbeq	r7, pc, fp, ror #4
 114:	616c6564 	cmnvs	ip, r4, ror #10
 118:	30355f79 	eorscc	r5, r5, r9, ror pc
 11c:	00736e30 	rsbseq	r6, r3, r0, lsr lr
 120:	532f3a43 			; <UNDEFINED> instruction: 0x532f3a43
 124:	6f6f6863 	svcvs	0x006f6863
 128:	41442f6c 	cmpmi	r4, ip, ror #30
 12c:	37313054 			; <UNDEFINED> instruction: 0x37313054
 130:	706f4d2f 	rsbvc	r4, pc, pc, lsr #26
 134:	5441442d 	strbpl	r4, [r1], #-1069	; 0xfffffbd3
 138:	2f373130 	svccs	0x00373130
 13c:	7362614c 	cmnvc	r2, #76, 2
 140:	646e6120 	strbtvs	r6, [lr], #-288	; 0xfffffee0
 144:	65786520 	ldrbvs	r6, [r8, #-1312]!	; 0xfffffae0
 148:	73696372 	cmnvc	r9, #-939524095	; 0xc8000001
 14c:	672f7365 	strvs	r7, [pc, -r5, ror #6]!
 150:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
 154:	69646369 	stmdbvs	r4!, {r0, r3, r5, r6, r8, r9, sp, lr}^
 158:	616c7073 	smcvs	50947	; 0xc703
 15c:	65642f79 	strbvs	r2, [r4, #-3961]!	; 0xfffff087
 160:	2e79616c 	rpwcsez	f6, f1, #4.0
 164:	65640063 	strbvs	r0, [r4, #-99]!	; 0xffffff9d
 168:	5f79616c 	svcpl	0x0079616c
 16c:	6c6c696d 			; <UNDEFINED> instruction: 0x6c6c696d
 170:	65640069 	strbvs	r0, [r4, #-105]!	; 0xffffff97
 174:	5f79616c 	svcpl	0x0079616c
 178:	6e303532 	mrcvs	5, 1, r3, cr0, cr2, {1}
 17c:	75700073 	ldrbvc	r0, [r0, #-115]!	; 0xffffff8d
 180:	00726470 	rsbseq	r6, r2, r0, ror r4
 184:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
 188:	72670072 	rsbvc	r0, r7, #114	; 0x72
 18c:	69687061 	stmdbvs	r8!, {r0, r5, r6, ip, sp, lr}^
 190:	65725f63 	ldrbvs	r5, [r2, #-3939]!	; 0xfffff09d
 194:	6f006461 	svcvs	0x00006461
 198:	69487264 	stmdbvs	r8, {r2, r5, r6, r9, ip, sp, lr}^
 19c:	67006867 	strvs	r6, [r0, -r7, ror #16]
 1a0:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
 1a4:	635f6369 	cmpvs	pc, #-1543503871	; 0xa4000001
 1a8:	5f6c7274 	svcpl	0x006c7274
 1ac:	5f746962 	svcpl	0x00746962
 1b0:	61656c63 	cmnvs	r5, r3, ror #24
 1b4:	746f0072 	strbtvc	r0, [pc], #-114	; 1bc <startup-0x1ffffe44>
 1b8:	72657079 	rsbvc	r7, r5, #121	; 0x79
 1bc:	61726700 	cmnvs	r2, r0, lsl #14
 1c0:	63696870 	cmnvs	r9, #112, 16	; 0x700000
 1c4:	6961775f 	stmdbvs	r1!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}^
 1c8:	65725f74 	ldrbvs	r5, [r2, #-3956]!	; 0xfffff08c
 1cc:	00796461 	rsbseq	r6, r9, r1, ror #8
 1d0:	4c72646f 	cfldrdmi	mvd6, [r2], #-444	; 0xfffffe44
 1d4:	6900776f 	stmdbvs	r0, {r0, r1, r2, r3, r5, r6, r8, r9, sl, ip, sp, lr}
 1d8:	6f4c7264 	svcvs	0x004c7264
 1dc:	69750077 	ldmdbvs	r5!, {r0, r1, r2, r4, r5, r6}^
 1e0:	5f38746e 	svcpl	0x0038746e
 1e4:	65730074 	ldrbvs	r0, [r3, #-116]!	; 0xffffff8c
 1e8:	7463656c 	strbtvc	r6, [r3], #-1388	; 0xfffffa94
 1ec:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
 1f0:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; 28 <startup-0x1fffffd8>
 1f4:	0072656c 	rsbseq	r6, r2, ip, ror #10
 1f8:	6970675f 	ldmdbvs	r0!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, sp, lr}^
 1fc:	6f63006f 	svcvs	0x0063006f
 200:	6f72746e 	svcvs	0x0072746e
 204:	65725f6c 	ldrbvs	r5, [r2, #-3948]!	; 0xfffff094
 208:	74736967 	ldrbtvc	r6, [r3], #-2407	; 0xfffff699
 20c:	43007265 	movwmi	r7, #613	; 0x265
 210:	63532f3a 	cmpvs	r3, #58, 30	; 0xe8
 214:	6c6f6f68 	stclvs	15, cr6, [pc], #-416	; 7c <startup-0x1fffff84>
 218:	5441442f 	strbpl	r4, [r1], #-1071	; 0xfffffbd1
 21c:	2f373130 	svccs	0x00373130
 220:	2d706f4d 	ldclcs	15, cr6, [r0, #-308]!	; 0xfffffecc
 224:	30544144 	subscc	r4, r4, r4, asr #2
 228:	4c2f3731 	stcmi	7, cr3, [pc], #-196	; 16c <startup-0x1ffffe94>
 22c:	20736261 	rsbscs	r6, r3, r1, ror #4
 230:	20646e61 	rsbcs	r6, r4, r1, ror #28
 234:	72657865 	rsbvc	r7, r5, #6619136	; 0x650000
 238:	65736963 	ldrbvs	r6, [r3, #-2403]!	; 0xfffff69d
 23c:	72672f73 	rsbvc	r2, r7, #460	; 0x1cc
 240:	69687061 	stmdbvs	r8!, {r0, r5, r6, ip, sp, lr}^
 244:	73696463 	cmnvc	r9, #1660944384	; 0x63000000
 248:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 24c:	6172672f 	cmnvs	r2, pc, lsr #14
 250:	63696870 	cmnvs	r9, #112, 16	; 0x700000
 254:	70736964 	rsbsvc	r6, r3, r4, ror #18
 258:	2e79616c 	rpwcsez	f6, f1, #4.0
 25c:	50470063 	subpl	r0, r7, r3, rrx
 260:	69004f49 	stmdbvs	r0, {r0, r3, r6, r8, r9, sl, fp, lr}
 264:	69487264 	stmdbvs	r8, {r2, r5, r6, r9, ip, sp, lr}^
 268:	67006867 	strvs	r6, [r0, -r7, ror #16]
 26c:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
 270:	635f6369 	cmpvs	pc, #-1543503871	; 0xa4000001
 274:	5f6c7274 	svcpl	0x006c7274
 278:	5f746962 	svcpl	0x00746962
 27c:	00746573 	rsbseq	r6, r4, r3, ror r5
 280:	6570736f 	ldrbvs	r7, [r0, #-879]!	; 0xfffffc91
 284:	00726465 	rsbseq	r6, r2, r5, ror #8

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	204d5241 	subcs	r5, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d36 	eorscc	r2, r2, r6, lsr sp
  30:	712d3731 			; <UNDEFINED> instruction: 0x712d3731
  34:	70752d31 	rsbsvc	r2, r5, r1, lsr sp
  38:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0xfffffe9c
  3c:	2e362029 	cdpcs	0, 3, cr2, cr6, cr9, {1}
  40:	20312e33 	eorscs	r2, r1, r3, lsr lr
  44:	37313032 			; <UNDEFINED> instruction: 0x37313032
  48:	35313230 	ldrcc	r3, [r1, #-560]!	; 0xfffffdd0
  4c:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
  50:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
  54:	5b202965 	blpl	80a5f0 <startup-0x1f7f5a10>
  58:	2f4d5241 	svccs	0x004d5241
  5c:	65626d65 	strbvs	r6, [r2, #-3429]!	; 0xfffff29b
  60:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  64:	622d362d 	eorvs	r3, sp, #47185920	; 0x2d00000
  68:	636e6172 	cmnvs	lr, #-2147483620	; 0x8000001c
  6c:	65722068 	ldrbvs	r2, [r2, #-104]!	; 0xffffff98
  70:	69736976 	ldmdbvs	r3!, {r1, r2, r4, r5, r6, r8, fp, sp, lr}^
  74:	32206e6f 	eorcc	r6, r0, #1776	; 0x6f0
  78:	31353534 	teqcc	r5, r4, lsr r5
  7c:	Address 0x0000007c is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002a41 	andeq	r2, r0, r1, asr #20
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000020 	andeq	r0, r0, r0, lsr #32
  10:	4d2d3605 	stcmi	6, cr3, [sp, #-20]!	; 0xffffffec
  14:	070b0600 	streq	r0, [fp, -r0, lsl #12]
  18:	1201094d 	andne	r0, r1, #1261568	; 0x134000
  1c:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
  20:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  24:	1a011901 	bne	46430 <startup-0x1ffb9bd0>
  28:	Address 0x00000028 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
  20:	00000018 	andeq	r0, r0, r8, lsl r0
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	0000000a 	andeq	r0, r0, sl
  30:	40080e41 	andmi	r0, r8, r1, asr #28
  34:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  38:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  3c:	0000000c 	andeq	r0, r0, ip
  40:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
  44:	7c020001 	stcvc	0, cr0, [r2], {1}
  48:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  4c:	00000018 	andeq	r0, r0, r8, lsl r0
  50:	0000003c 	andeq	r0, r0, ip, lsr r0
  54:	2000001c 	andcs	r0, r0, ip, lsl r0
  58:	00000064 	andeq	r0, r0, r4, rrx
  5c:	40080e41 	andmi	r0, r8, r1, asr #28
  60:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  64:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  68:	00000018 	andeq	r0, r0, r8, lsl r0
  6c:	0000003c 	andeq	r0, r0, ip, lsr r0
  70:	20000080 	andcs	r0, r0, r0, lsl #1
  74:	00000012 	andeq	r0, r0, r2, lsl r0
  78:	40080e41 	andmi	r0, r8, r1, asr #28
  7c:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  80:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  84:	0000001c 	andeq	r0, r0, ip, lsl r0
  88:	0000003c 	andeq	r0, r0, ip, lsr r0
  8c:	20000092 	mulcs	r0, r2, r0
  90:	0000002a 	andeq	r0, r0, sl, lsr #32
  94:	40080e41 	andmi	r0, r8, r1, asr #28
  98:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  9c:	180e4101 	stmdane	lr, {r0, r8, lr}
  a0:	00070d41 	andeq	r0, r7, r1, asr #26
  a4:	0000001c 	andeq	r0, r0, ip, lsl r0
  a8:	0000003c 	andeq	r0, r0, ip, lsr r0
  ac:	200000bc 	strhcs	r0, [r0], -ip
  b0:	0000001e 	andeq	r0, r0, lr, lsl r0
  b4:	40080e41 	andmi	r0, r8, r1, asr #28
  b8:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  bc:	100e4101 	andne	r4, lr, r1, lsl #2
  c0:	00070d41 	andeq	r0, r7, r1, asr #26
  c4:	0000000c 	andeq	r0, r0, ip
  c8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
  cc:	7c020001 	stcvc	0, cr0, [r2], {1}
  d0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  d4:	0000001c 	andeq	r0, r0, ip, lsl r0
  d8:	000000c4 	andeq	r0, r0, r4, asr #1
  dc:	200000dc 	ldrdcs	r0, [r0], -ip
  e0:	00000044 	andeq	r0, r0, r4, asr #32
  e4:	40080e41 	andmi	r0, r8, r1, asr #28
  e8:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  ec:	180e4101 	stmdane	lr, {r0, r8, lr}
  f0:	00070d41 	andeq	r0, r7, r1, asr #26
  f4:	0000001c 	andeq	r0, r0, ip, lsl r0
  f8:	000000c4 	andeq	r0, r0, r4, asr #1
  fc:	20000120 	andcs	r0, r0, r0, lsr #2
 100:	00000058 	andeq	r0, r0, r8, asr r0
 104:	40080e41 	andmi	r0, r8, r1, asr #28
 108:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 10c:	180e4101 	stmdane	lr, {r0, r8, lr}
 110:	00070d41 	andeq	r0, r7, r1, asr #26
 114:	0000001c 	andeq	r0, r0, ip, lsl r0
 118:	000000c4 	andeq	r0, r0, r4, asr #1
 11c:	20000178 	andcs	r0, r0, r8, ror r1
 120:	0000005a 	andeq	r0, r0, sl, asr r0
 124:	40080e41 	andmi	r0, r8, r1, asr #28
 128:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 12c:	100e4101 	andne	r4, lr, r1, lsl #2
 130:	00070d41 	andeq	r0, r7, r1, asr #26
 134:	00000018 	andeq	r0, r0, r8, lsl r0
 138:	000000c4 	andeq	r0, r0, r4, asr #1
 13c:	200001d2 	ldrdcs	r0, [r0], -r2
 140:	0000005e 	andeq	r0, r0, lr, asr r0
 144:	40080e41 	andmi	r0, r8, r1, asr #28
 148:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 14c:	070d4101 	streq	r4, [sp, -r1, lsl #2]
 150:	0000001c 	andeq	r0, r0, ip, lsl r0
 154:	000000c4 	andeq	r0, r0, r4, asr #1
 158:	20000230 	andcs	r0, r0, r0, lsr r2
 15c:	00000016 	andeq	r0, r0, r6, lsl r0
 160:	40080e41 	andmi	r0, r8, r1, asr #28
 164:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
 168:	100e4101 	andne	r4, lr, r1, lsl #2
 16c:	00070d41 	andeq	r0, r7, r1, asr #26
