
./Debug/keypad.elf:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:

void startup(void) __attribute__((naked)) __attribute__((section (".start_section")) );

void startup ( void )
{
__asm volatile(
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <_exit+0x4>)
20000002:	4685      	mov	sp, r0
20000004:	f000 f8de 	bl	200001c4 <main>

20000008 <_exit>:
20000008:	e7fe      	b.n	20000008 <_exit>
	" LDR R0,=0x2001C000\n"		/* set stack */
	" MOV SP,R0\n"
	" BL main\n"				/* call main */
	"_exit: B .\n"				/* never return */
	);
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <app_init>:

void app_init (void) {
20000010:	b580      	push	{r7, lr}
20000012:	af00      	add	r7, sp, #0
	GPIO_MODER = 0x55005555;
20000014:	4b12      	ldr	r3, [pc, #72]	; (20000060 <app_init+0x50>)
20000016:	4a13      	ldr	r2, [pc, #76]	; (20000064 <app_init+0x54>)
20000018:	601a      	str	r2, [r3, #0]
	GPIO_OTYPER &= 0x00FF;
2000001a:	4a13      	ldr	r2, [pc, #76]	; (20000068 <app_init+0x58>)
2000001c:	4b12      	ldr	r3, [pc, #72]	; (20000068 <app_init+0x58>)
2000001e:	881b      	ldrh	r3, [r3, #0]
20000020:	b29b      	uxth	r3, r3
20000022:	21ff      	movs	r1, #255	; 0xff
20000024:	400b      	ands	r3, r1
20000026:	b29b      	uxth	r3, r3
20000028:	8013      	strh	r3, [r2, #0]
	GPIO_OTYPER |= 0x0000;
2000002a:	4b0f      	ldr	r3, [pc, #60]	; (20000068 <app_init+0x58>)
2000002c:	4a0e      	ldr	r2, [pc, #56]	; (20000068 <app_init+0x58>)
2000002e:	8812      	ldrh	r2, [r2, #0]
20000030:	b292      	uxth	r2, r2
20000032:	801a      	strh	r2, [r3, #0]
	GPIO_PUPDR &= 0x0000FFFF;
20000034:	4b0d      	ldr	r3, [pc, #52]	; (2000006c <app_init+0x5c>)
20000036:	4a0d      	ldr	r2, [pc, #52]	; (2000006c <app_init+0x5c>)
20000038:	6812      	ldr	r2, [r2, #0]
2000003a:	0412      	lsls	r2, r2, #16
2000003c:	0c12      	lsrs	r2, r2, #16
2000003e:	601a      	str	r2, [r3, #0]
	GPIO_PUPDR |= 0x00AA0000;
20000040:	4b0a      	ldr	r3, [pc, #40]	; (2000006c <app_init+0x5c>)
20000042:	4a0a      	ldr	r2, [pc, #40]	; (2000006c <app_init+0x5c>)
20000044:	6812      	ldr	r2, [r2, #0]
20000046:	21aa      	movs	r1, #170	; 0xaa
20000048:	0409      	lsls	r1, r1, #16
2000004a:	430a      	orrs	r2, r1
2000004c:	601a      	str	r2, [r3, #0]
	GPIO_ODR_HIGH &= 0x00FF;
2000004e:	4b08      	ldr	r3, [pc, #32]	; (20000070 <app_init+0x60>)
20000050:	4a07      	ldr	r2, [pc, #28]	; (20000070 <app_init+0x60>)
20000052:	7812      	ldrb	r2, [r2, #0]
20000054:	b2d2      	uxtb	r2, r2
20000056:	701a      	strb	r2, [r3, #0]
}
20000058:	46c0      	nop			; (mov r8, r8)
2000005a:	46bd      	mov	sp, r7
2000005c:	bd80      	pop	{r7, pc}
2000005e:	46c0      	nop			; (mov r8, r8)
20000060:	40020c00 	andmi	r0, r2, r0, lsl #24
20000064:	55005555 	strpl	r5, [r0, #-1365]	; 0xfffffaab
20000068:	40020c04 	andmi	r0, r2, r4, lsl #24
2000006c:	40020c0c 	andmi	r0, r2, ip, lsl #24
20000070:	40020c15 	andmi	r0, r2, r5, lsl ip

20000074 <keyb>:
{0x66, 0x6D, 0x7D, 0x7C},
{0x07, 0x7F, 0x6F, 0x58},
{0x80, 0x3F, 0x76, 0x5E}
};

unsigned char keyb(void){
20000074:	b580      	push	{r7, lr}
20000076:	b082      	sub	sp, #8
20000078:	af00      	add	r7, sp, #0
	unsigned char row, column;
	
	for (unsigned char row = 1; row <= 4; row++) {
2000007a:	1dfb      	adds	r3, r7, #7
2000007c:	2201      	movs	r2, #1
2000007e:	701a      	strb	r2, [r3, #0]
20000080:	e020      	b.n	200000c4 <keyb+0x50>
		// mind the one indexing of rows and columns, to simplify resetting of values
		ActivateRow(row);
20000082:	1dfb      	adds	r3, r7, #7
20000084:	781b      	ldrb	r3, [r3, #0]
20000086:	0018      	movs	r0, r3
20000088:	f000 f82a 	bl	200000e0 <ActivateRow>
		column = ReadColumn();
2000008c:	f000 f854 	bl	20000138 <ReadColumn>
20000090:	0002      	movs	r2, r0
20000092:	1dbb      	adds	r3, r7, #6
20000094:	701a      	strb	r2, [r3, #0]
		if (column > 0){
20000096:	1dbb      	adds	r3, r7, #6
20000098:	781b      	ldrb	r3, [r3, #0]
2000009a:	2b00      	cmp	r3, #0
2000009c:	d00d      	beq.n	200000ba <keyb+0x46>
			ActivateRow(0);
2000009e:	2000      	movs	r0, #0
200000a0:	f000 f81e 	bl	200000e0 <ActivateRow>
			return key[row - 1][column - 1];
200000a4:	1dfb      	adds	r3, r7, #7
200000a6:	781b      	ldrb	r3, [r3, #0]
200000a8:	1e5a      	subs	r2, r3, #1
200000aa:	1dbb      	adds	r3, r7, #6
200000ac:	781b      	ldrb	r3, [r3, #0]
200000ae:	3b01      	subs	r3, #1
200000b0:	490a      	ldr	r1, [pc, #40]	; (200000dc <keyb+0x68>)
200000b2:	0092      	lsls	r2, r2, #2
200000b4:	188a      	adds	r2, r1, r2
200000b6:	5cd3      	ldrb	r3, [r2, r3]
200000b8:	e00c      	b.n	200000d4 <keyb+0x60>
	for (unsigned char row = 1; row <= 4; row++) {
200000ba:	1dfb      	adds	r3, r7, #7
200000bc:	781a      	ldrb	r2, [r3, #0]
200000be:	1dfb      	adds	r3, r7, #7
200000c0:	3201      	adds	r2, #1
200000c2:	701a      	strb	r2, [r3, #0]
200000c4:	1dfb      	adds	r3, r7, #7
200000c6:	781b      	ldrb	r3, [r3, #0]
200000c8:	2b04      	cmp	r3, #4
200000ca:	d9da      	bls.n	20000082 <keyb+0xe>
			//return decode7segMatrix[row - 1][column - 1];
		}
	}
	ActivateRow(0);
200000cc:	2000      	movs	r0, #0
200000ce:	f000 f807 	bl	200000e0 <ActivateRow>
	return 0xFF;
200000d2:	23ff      	movs	r3, #255	; 0xff
}
200000d4:	0018      	movs	r0, r3
200000d6:	46bd      	mov	sp, r7
200000d8:	b002      	add	sp, #8
200000da:	bd80      	pop	{r7, pc}
200000dc:	200001dc 	ldrdcs	r0, [r0], -ip

200000e0 <ActivateRow>:

void ActivateRow(unsigned char row) {
200000e0:	b580      	push	{r7, lr}
200000e2:	b082      	sub	sp, #8
200000e4:	af00      	add	r7, sp, #0
200000e6:	0002      	movs	r2, r0
200000e8:	1dfb      	adds	r3, r7, #7
200000ea:	701a      	strb	r2, [r3, #0]
	switch(row){
200000ec:	1dfb      	adds	r3, r7, #7
200000ee:	781b      	ldrb	r3, [r3, #0]
200000f0:	2b04      	cmp	r3, #4
200000f2:	d818      	bhi.n	20000126 <ActivateRow+0x46>
200000f4:	009a      	lsls	r2, r3, #2
200000f6:	4b0e      	ldr	r3, [pc, #56]	; (20000130 <ActivateRow+0x50>)
200000f8:	18d3      	adds	r3, r2, r3
200000fa:	681b      	ldr	r3, [r3, #0]
200000fc:	469f      	mov	pc, r3
		case 0: GPIO_ODR_HIGH = 0x0; break; //0 to reset
200000fe:	4b0d      	ldr	r3, [pc, #52]	; (20000134 <ActivateRow+0x54>)
20000100:	2200      	movs	r2, #0
20000102:	701a      	strb	r2, [r3, #0]
20000104:	e00f      	b.n	20000126 <ActivateRow+0x46>
		case 1: GPIO_ODR_HIGH = 0x10; break;
20000106:	4b0b      	ldr	r3, [pc, #44]	; (20000134 <ActivateRow+0x54>)
20000108:	2210      	movs	r2, #16
2000010a:	701a      	strb	r2, [r3, #0]
2000010c:	e00b      	b.n	20000126 <ActivateRow+0x46>
		case 2: GPIO_ODR_HIGH = 0x20; break;
2000010e:	4b09      	ldr	r3, [pc, #36]	; (20000134 <ActivateRow+0x54>)
20000110:	2220      	movs	r2, #32
20000112:	701a      	strb	r2, [r3, #0]
20000114:	e007      	b.n	20000126 <ActivateRow+0x46>
		case 3: GPIO_ODR_HIGH = 0x40; break;
20000116:	4b07      	ldr	r3, [pc, #28]	; (20000134 <ActivateRow+0x54>)
20000118:	2240      	movs	r2, #64	; 0x40
2000011a:	701a      	strb	r2, [r3, #0]
2000011c:	e003      	b.n	20000126 <ActivateRow+0x46>
		case 4: GPIO_ODR_HIGH = 0x80; break;
2000011e:	4b05      	ldr	r3, [pc, #20]	; (20000134 <ActivateRow+0x54>)
20000120:	2280      	movs	r2, #128	; 0x80
20000122:	701a      	strb	r2, [r3, #0]
20000124:	46c0      	nop			; (mov r8, r8)
	}
}
20000126:	46c0      	nop			; (mov r8, r8)
20000128:	46bd      	mov	sp, r7
2000012a:	b002      	add	sp, #8
2000012c:	bd80      	pop	{r7, pc}
2000012e:	46c0      	nop			; (mov r8, r8)
20000130:	2000020c 	andcs	r0, r0, ip, lsl #4
20000134:	40020c15 	andmi	r0, r2, r5, lsl ip

20000138 <ReadColumn>:

int ReadColumn(void) {
20000138:	b580      	push	{r7, lr}
2000013a:	b082      	sub	sp, #8
2000013c:	af00      	add	r7, sp, #0
	// Returns column number of pressed key, observe that the columns of the keyboard are read from right to left!
	unsigned char c;
	c = GPIO_IDR_HIGH;
2000013e:	4a12      	ldr	r2, [pc, #72]	; (20000188 <ReadColumn+0x50>)
20000140:	1dfb      	adds	r3, r7, #7
20000142:	7812      	ldrb	r2, [r2, #0]
20000144:	701a      	strb	r2, [r3, #0]
	if (c & 0x8){return 4;}
20000146:	1dfb      	adds	r3, r7, #7
20000148:	781b      	ldrb	r3, [r3, #0]
2000014a:	2208      	movs	r2, #8
2000014c:	4013      	ands	r3, r2
2000014e:	d001      	beq.n	20000154 <ReadColumn+0x1c>
20000150:	2304      	movs	r3, #4
20000152:	e015      	b.n	20000180 <ReadColumn+0x48>
	if (c & 0x4){return 3;}
20000154:	1dfb      	adds	r3, r7, #7
20000156:	781b      	ldrb	r3, [r3, #0]
20000158:	2204      	movs	r2, #4
2000015a:	4013      	ands	r3, r2
2000015c:	d001      	beq.n	20000162 <ReadColumn+0x2a>
2000015e:	2303      	movs	r3, #3
20000160:	e00e      	b.n	20000180 <ReadColumn+0x48>
	if (c & 0x2){return 2;}
20000162:	1dfb      	adds	r3, r7, #7
20000164:	781b      	ldrb	r3, [r3, #0]
20000166:	2202      	movs	r2, #2
20000168:	4013      	ands	r3, r2
2000016a:	d001      	beq.n	20000170 <ReadColumn+0x38>
2000016c:	2302      	movs	r3, #2
2000016e:	e007      	b.n	20000180 <ReadColumn+0x48>
	if (c & 0x1){return 1;}
20000170:	1dfb      	adds	r3, r7, #7
20000172:	781b      	ldrb	r3, [r3, #0]
20000174:	2201      	movs	r2, #1
20000176:	4013      	ands	r3, r2
20000178:	d001      	beq.n	2000017e <ReadColumn+0x46>
2000017a:	2301      	movs	r3, #1
2000017c:	e000      	b.n	20000180 <ReadColumn+0x48>
	return 0;
2000017e:	2300      	movs	r3, #0
}
20000180:	0018      	movs	r0, r3
20000182:	46bd      	mov	sp, r7
20000184:	b002      	add	sp, #8
20000186:	bd80      	pop	{r7, pc}
20000188:	40020c11 	andmi	r0, r2, r1, lsl ip

2000018c <out7seg>:

void out7seg(unsigned char c) {
2000018c:	b580      	push	{r7, lr}
2000018e:	b082      	sub	sp, #8
20000190:	af00      	add	r7, sp, #0
20000192:	0002      	movs	r2, r0
20000194:	1dfb      	adds	r3, r7, #7
20000196:	701a      	strb	r2, [r3, #0]
	if (c > 0xF) {
20000198:	1dfb      	adds	r3, r7, #7
2000019a:	781b      	ldrb	r3, [r3, #0]
2000019c:	2b0f      	cmp	r3, #15
2000019e:	d903      	bls.n	200001a8 <out7seg+0x1c>
		GPIO_ODR_LOW = 0;
200001a0:	4b06      	ldr	r3, [pc, #24]	; (200001bc <out7seg+0x30>)
200001a2:	2200      	movs	r2, #0
200001a4:	701a      	strb	r2, [r3, #0]
	} else {
	GPIO_ODR_LOW = decode7segArray[c];
	//GPIO_ODR_LOW = c;
	}
}
200001a6:	e005      	b.n	200001b4 <out7seg+0x28>
	GPIO_ODR_LOW = decode7segArray[c];
200001a8:	4904      	ldr	r1, [pc, #16]	; (200001bc <out7seg+0x30>)
200001aa:	1dfb      	adds	r3, r7, #7
200001ac:	781b      	ldrb	r3, [r3, #0]
200001ae:	4a04      	ldr	r2, [pc, #16]	; (200001c0 <out7seg+0x34>)
200001b0:	5cd3      	ldrb	r3, [r2, r3]
200001b2:	700b      	strb	r3, [r1, #0]
}
200001b4:	46c0      	nop			; (mov r8, r8)
200001b6:	46bd      	mov	sp, r7
200001b8:	b002      	add	sp, #8
200001ba:	bd80      	pop	{r7, pc}
200001bc:	40020c14 	andmi	r0, r2, r4, lsl ip
200001c0:	200001ec 	andcs	r0, r0, ip, ror #3

200001c4 <main>:

void main(void) {
200001c4:	b580      	push	{r7, lr}
200001c6:	af00      	add	r7, sp, #0
	app_init();
200001c8:	f7ff ff22 	bl	20000010 <app_init>
	while(1) {
	out7seg(keyb());
200001cc:	f7ff ff52 	bl	20000074 <keyb>
200001d0:	0003      	movs	r3, r0
200001d2:	0018      	movs	r0, r3
200001d4:	f7ff ffda 	bl	2000018c <out7seg>
200001d8:	e7f8      	b.n	200001cc <main+0x8>
200001da:	46c0      	nop			; (mov r8, r8)

200001dc <key>:
200001dc:	0a030201 	beq	200c09e8 <decode7segMatrix+0xc07ec>
200001e0:	0b060504 	bleq	201815f8 <decode7segMatrix+0x1813fc>
200001e4:	0c090807 	stceq	8, cr0, [r9], {7}
200001e8:	0d0f000e 	stceq	0, cr0, [pc, #-56]	; 200001b8 <out7seg+0x2c>

200001ec <decode7segArray>:
200001ec:	4f5b063f 	svcmi	0x005b063f
200001f0:	077d6d66 	ldrbeq	r6, [sp, -r6, ror #26]!
200001f4:	7c776f7f 	ldclvc	15, cr6, [r7], #-508	; 0xfffffe04
200001f8:	76805e58 	pkhtbvc	r5, r0, r8, asr #28

200001fc <decode7segMatrix>:
200001fc:	774f5b06 	strbvc	r5, [pc, -r6, lsl #22]
20000200:	7c7d6d66 	ldclvc	13, cr6, [sp], #-408	; 0xfffffe68
20000204:	586f7f07 	stmdapl	pc!, {r0, r1, r2, r8, r9, sl, fp, ip, sp, lr}^	; <UNPREDICTABLE>
20000208:	5e763f80 	cdppl	15, 7, cr3, cr6, cr0, {4}
2000020c:	200000fe 	strdcs	r0, [r0], -lr
20000210:	20000106 	andcs	r0, r0, r6, lsl #2
20000214:	2000010e 	andcs	r0, r0, lr, lsl #2
20000218:	20000116 	andcs	r0, r0, r6, lsl r1
2000021c:	2000011e 	andcs	r0, r0, lr, lsl r1

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	000001af 	andeq	r0, r0, pc, lsr #3
   4:	00000004 	andeq	r0, r0, r4
   8:	01040000 	mrseq	r0, (UNDEF: 4)
   c:	00000075 	andeq	r0, r0, r5, ror r0
  10:	0000000c 	andeq	r0, r0, ip
	...
  20:	003e0200 	eorseq	r0, lr, r0, lsl #4
  24:	00370000 	eorseq	r0, r7, r0
  28:	37030000 	strcc	r0, [r3, -r0]
  2c:	03000000 	movweq	r0, #0
  30:	00003703 	andeq	r3, r0, r3, lsl #14
  34:	04000300 	streq	r0, [r0], #-768	; 0xfffffd00
  38:	012c0704 			; <UNDEFINED> instruction: 0x012c0704
  3c:	01040000 	mrseq	r0, (UNDEF: 4)
  40:	00010d08 	andeq	r0, r1, r8, lsl #26
  44:	656b0500 	strbvs	r0, [fp, #-1280]!	; 0xfffffb00
  48:	26010079 			; <UNDEFINED> instruction: 0x26010079
  4c:	00000021 	andeq	r0, r0, r1, lsr #32
  50:	01dc0305 	bicseq	r0, ip, r5, lsl #6
  54:	3e022000 	cdpcc	0, 0, cr2, cr2, cr0, {0}
  58:	66000000 	strvs	r0, [r0], -r0
  5c:	03000000 	movweq	r0, #0
  60:	00000037 	andeq	r0, r0, r7, lsr r0
  64:	3206000f 	andcc	r0, r6, #15
  68:	01000000 	mrseq	r0, (UNDEF: 0)
  6c:	0000562d 	andeq	r5, r0, sp, lsr #12
  70:	ec030500 	cfstr32	mvfx0, [r3], {-0}
  74:	06200001 	strteq	r0, [r0], -r1
  78:	0000011b 	andeq	r0, r0, fp, lsl r1
  7c:	00212f01 	eoreq	r2, r1, r1, lsl #30
  80:	03050000 	movweq	r0, #20480	; 0x5000
  84:	200001fc 	strdcs	r0, [r0], -ip
  88:	00013507 	andeq	r3, r1, r7, lsl #10
  8c:	c4650100 	strbtgt	r0, [r5], #-256	; 0xffffff00
  90:	16200001 	strtne	r0, [r0], -r1
  94:	01000000 	mrseq	r0, (UNDEF: 0)
  98:	005a089c 			; <UNDEFINED> instruction: 0x005a089c
  9c:	5c010000 	stcpl	0, cr0, [r1], {-0}
  a0:	2000018c 	andcs	r0, r0, ip, lsl #3
  a4:	00000038 	andeq	r0, r0, r8, lsr r0
  a8:	00bb9c01 	adcseq	r9, fp, r1, lsl #24
  ac:	63090000 	movwvs	r0, #36864	; 0x9000
  b0:	3e5c0100 	rdfcce	f0, f4, f0
  b4:	02000000 	andeq	r0, r0, #0
  b8:	0a007791 	beq	1df04 <startup-0x1ffe20fc>
  bc:	00000062 	andeq	r0, r0, r2, rrx
  c0:	00e15101 	rsceq	r5, r1, r1, lsl #2
  c4:	01380000 	teqeq	r8, r0
  c8:	00542000 	subseq	r2, r4, r0
  cc:	9c010000 	stcls	0, cr0, [r1], {-0}
  d0:	000000e1 	andeq	r0, r0, r1, ror #1
  d4:	0100630b 	tsteq	r0, fp, lsl #6
  d8:	00003e53 	andeq	r3, r0, r3, asr lr
  dc:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
  e0:	05040c00 	streq	r0, [r4, #-3072]	; 0xfffff400
  e4:	00746e69 	rsbseq	r6, r4, r9, ror #28
  e8:	00004208 	andeq	r4, r0, r8, lsl #4
  ec:	e0470100 	sub	r0, r7, r0, lsl #2
  f0:	58200000 	stmdapl	r0!, {}	; <UNPREDICTABLE>
  f4:	01000000 	mrseq	r0, (UNDEF: 0)
  f8:	00010c9c 	muleq	r1, ip, ip
  fc:	6f720900 	svcvs	0x00720900
 100:	47010077 	smlsdxmi	r1, r7, r0, r0
 104:	0000003e 	andeq	r0, r0, lr, lsr r0
 108:	00779102 	rsbseq	r9, r7, r2, lsl #2
 10c:	00004e0d 	andeq	r4, r0, sp, lsl #28
 110:	3e360100 	rsfccs	f0, f6, f0
 114:	74000000 	strvc	r0, [r0], #-0
 118:	6c200000 	stcvs	0, cr0, [r0], #-0
 11c:	01000000 	mrseq	r0, (UNDEF: 0)
 120:	0001909c 	muleq	r1, ip, r0
 124:	6f720e00 	svcvs	0x00720e00
 128:	37010077 	smlsdxcc	r1, r7, r0, r0
 12c:	0000003e 	andeq	r0, r0, lr, lsr r0
 130:	0000530f 	andeq	r5, r0, pc, lsl #6
 134:	3e370100 	rsfccs	f0, f7, f0
 138:	02000000 	andeq	r0, r0, #0
 13c:	42107691 	andsmi	r7, r0, #152043520	; 0x9100000
 140:	01000000 	mrseq	r0, (UNDEF: 0)
 144:	0000e13b 	andeq	lr, r0, fp, lsr r1
 148:	00014f00 	andeq	r4, r1, r0, lsl #30
 14c:	12001100 	andne	r1, r0, #0, 2
 150:	2000007a 	andcs	r0, r0, sl, ror r0
 154:	00000052 	andeq	r0, r0, r2, asr r0
 158:	776f720b 	strbvc	r7, [pc, -fp, lsl #4]!
 15c:	3e390100 	rsfcce	f0, f1, f0
 160:	02000000 	andeq	r0, r0, #0
 164:	82127791 	andshi	r7, r2, #38010880	; 0x2440000
 168:	38200000 	stmdacc	r0!, {}	; <UNPREDICTABLE>
 16c:	10000000 	andne	r0, r0, r0
 170:	00000042 	andeq	r0, r0, r2, asr #32
 174:	00e13b01 	rsceq	r3, r1, r1, lsl #22
 178:	01800000 	orreq	r0, r0, r0
 17c:	00110000 	andseq	r0, r1, r0
 180:	00006213 	andeq	r6, r0, r3, lsl r2
 184:	e13c0100 	teq	ip, r0, lsl #2
 188:	11000000 	mrsne	r0, (UNDEF: 0)
 18c:	00000000 	andeq	r0, r0, r0
 190:	00013a14 	andeq	r3, r1, r4, lsl sl
 194:	101c0100 	andsne	r0, ip, r0, lsl #2
 198:	64200000 	strtvs	r0, [r0], #-0
 19c:	01000000 	mrseq	r0, (UNDEF: 0)
 1a0:	006d149c 	mlseq	sp, ip, r4, r1
 1a4:	12010000 	andne	r0, r1, #0
 1a8:	20000000 	andcs	r0, r0, r0
 1ac:	0000000c 	andeq	r0, r0, ip
 1b0:	Address 0x000001b0 is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	1117550e 	tstne	r7, lr, lsl #10
   c:	00171001 	andseq	r1, r7, r1
  10:	01010200 	mrseq	r0, R9_usr
  14:	13011349 	movwne	r1, #4937	; 0x1349
  18:	21030000 	mrscs	r0, (UNDEF: 3)
  1c:	2f134900 	svccs	0x00134900
  20:	0400000b 	streq	r0, [r0], #-11
  24:	0b0b0024 	bleq	2c00bc <startup-0x1fd3ff44>
  28:	0e030b3e 	vmoveq.16	d3[0], r0
  2c:	34050000 	strcc	r0, [r5], #-0
  30:	3a080300 	bcc	200c38 <startup-0x1fdff3c8>
  34:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  38:	02193f13 	andseq	r3, r9, #19, 30	; 0x4c
  3c:	06000018 			; <UNDEFINED> instruction: 0x06000018
  40:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
  44:	0b3b0b3a 	bleq	ec2d34 <startup-0x1f13d2cc>
  48:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
  4c:	00001802 	andeq	r1, r0, r2, lsl #16
  50:	3f002e07 	svccc	0x00002e07
  54:	3a0e0319 	bcc	380cc0 <startup-0x1fc7f340>
  58:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
  5c:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
  60:	96184006 	ldrls	r4, [r8], -r6
  64:	00001942 	andeq	r1, r0, r2, asr #18
  68:	3f012e08 	svccc	0x00012e08
  6c:	3a0e0319 	bcc	380cd8 <startup-0x1fc7f328>
  70:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
  74:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
  78:	97184006 	ldrls	r4, [r8, -r6]
  7c:	13011942 	movwne	r1, #6466	; 0x1942
  80:	05090000 	streq	r0, [r9, #-0]
  84:	3a080300 	bcc	200c8c <startup-0x1fdff374>
  88:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  8c:	00180213 	andseq	r0, r8, r3, lsl r2
  90:	012e0a00 			; <UNDEFINED> instruction: 0x012e0a00
  94:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  98:	0b3b0b3a 	bleq	ec2d88 <startup-0x1f13d278>
  9c:	13491927 	movtne	r1, #39207	; 0x9927
  a0:	06120111 			; <UNDEFINED> instruction: 0x06120111
  a4:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
  a8:	00130119 	andseq	r0, r3, r9, lsl r1
  ac:	00340b00 	eorseq	r0, r4, r0, lsl #22
  b0:	0b3a0803 	bleq	e820c4 <startup-0x1f17df3c>
  b4:	13490b3b 	movtne	r0, #39739	; 0x9b3b
  b8:	00001802 	andeq	r1, r0, r2, lsl #16
  bc:	0b00240c 	bleq	90f4 <startup-0x1fff6f0c>
  c0:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
  c4:	0d000008 	stceq	0, cr0, [r0, #-32]	; 0xffffffe0
  c8:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
  cc:	0b3a0e03 	bleq	e838e0 <startup-0x1f17c720>
  d0:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
  d4:	01111349 	tsteq	r1, r9, asr #6
  d8:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
  dc:	01194296 			; <UNDEFINED> instruction: 0x01194296
  e0:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
  e4:	08030034 	stmdaeq	r3, {r2, r4, r5}
  e8:	0b3b0b3a 	bleq	ec2dd8 <startup-0x1f13d228>
  ec:	00001349 	andeq	r1, r0, r9, asr #6
  f0:	0300340f 	movweq	r3, #1039	; 0x40f
  f4:	3b0b3a0e 	blcc	2ce934 <startup-0x1fd316cc>
  f8:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
  fc:	10000018 	andne	r0, r0, r8, lsl r0
 100:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 104:	0b3a0e03 	bleq	e83918 <startup-0x1f17c6e8>
 108:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 10c:	1301193c 	movwne	r1, #6460	; 0x193c
 110:	18110000 	ldmdane	r1, {}	; <UNPREDICTABLE>
 114:	12000000 	andne	r0, r0, #0
 118:	0111010b 	tsteq	r1, fp, lsl #2
 11c:	00000612 	andeq	r0, r0, r2, lsl r6
 120:	3f012e13 	svccc	0x00012e13
 124:	3a0e0319 	bcc	380d90 <startup-0x1fc7f270>
 128:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 12c:	00193c13 	andseq	r3, r9, r3, lsl ip
 130:	002e1400 	eoreq	r1, lr, r0, lsl #8
 134:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 138:	0b3b0b3a 	bleq	ec2e28 <startup-0x1f13d1d8>
 13c:	01111927 	tsteq	r1, r7, lsr #18
 140:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 144:	00194297 	mulseq	r9, r7, r2
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	00000024 	andeq	r0, r0, r4, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	000001ca 	andeq	r0, r0, sl, asr #3
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000010 	andcs	r0, r0, r0, lsl r0
   4:	200001da 	ldrdcs	r0, [r0], -sl
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	000000ca 	andeq	r0, r0, sl, asr #1
   4:	00480002 	subeq	r0, r8, r2
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	43010000 	movwmi	r0, #4096	; 0x1000
  1c:	73552f3a 	cmpvc	r5, #58, 30	; 0xe8
  20:	2f737265 	svccs	0x00737265
  24:	6f6d754c 	svcvs	0x006d754c
  28:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
  2c:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
  30:	4c2f7374 	stcmi	3, cr7, [pc], #-464	; fffffe68 <decode7segMatrix+0xdffffc6c>
  34:	5f6f6d75 	svcpl	0x006f6d75
  38:	2f706f4d 	svccs	0x00706f4d
  3c:	7079656b 	rsbsvc	r6, r9, fp, ror #10
  40:	00006461 	andeq	r6, r0, r1, ror #8
  44:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
  48:	2e707574 	mrccs	5, 3, r7, cr0, cr4, {3}
  4c:	00010063 	andeq	r0, r1, r3, rrx
  50:	05000000 	streq	r0, [r0, #-0]
  54:	00000002 	andeq	r0, r0, r2
  58:	01120320 	tsteq	r2, r0, lsr #6
  5c:	03025e13 	movweq	r5, #11795	; 0x2e13
  60:	00010100 	andeq	r0, r1, r0, lsl #2
  64:	00100205 	andseq	r0, r0, r5, lsl #4
  68:	1b032000 	blne	c8070 <startup-0x1ff37f90>
  6c:	833d2f01 	teqhi	sp, #1, 30
  70:	59756759 	ldmdbpl	r5!, {r0, r3, r4, r6, r8, r9, sl, sp, lr}^
  74:	3fd61303 	svccc	0x00d61303
  78:	4b59594c 	blmi	16565b0 <startup-0x1e9a9a50>
  7c:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
  80:	ac7a0302 	ldclge	3, cr0, [sl], #-8
  84:	01040200 	mrseq	r0, R12_usr
  88:	03065806 	movweq	r5, #26630	; 0x6806
  8c:	213d4a0a 	teqcs	sp, sl, lsl #20
  90:	4b916768 	blmi	fe459e38 <decode7segMatrix+0xde459c3c>
  94:	4c4b4b4b 	mcrrmi	11, 4, r4, fp, cr11
  98:	004b3f92 	umaaleq	r3, fp, r2, pc	; <UNPREDICTABLE>
  9c:	06010402 	streq	r0, [r1], -r2, lsl #8
  a0:	002f0658 	eoreq	r0, pc, r8, asr r6	; <UNPREDICTABLE>
  a4:	06010402 	streq	r0, [r1], -r2, lsl #8
  a8:	002f0658 	eoreq	r0, pc, r8, asr r6	; <UNPREDICTABLE>
  ac:	06010402 	streq	r0, [r1], -r2, lsl #8
  b0:	002f0658 	eoreq	r0, pc, r8, asr r6	; <UNPREDICTABLE>
  b4:	06010402 	streq	r0, [r1], -r2, lsl #8
  b8:	212f0658 			; <UNDEFINED> instruction: 0x212f0658
  bc:	414b6768 	cmpmi	fp, r8, ror #14
  c0:	2f84691d 	svccs	0x0084691d
  c4:	01040200 	mrseq	r0, R12_usr
  c8:	00070230 	andeq	r0, r7, r0, lsr r2
  cc:	Address 0x000000cc is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	552f3a43 	strpl	r3, [pc, #-2627]!	; fffff5c5 <decode7segMatrix+0xdffff3c9>
   4:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
   8:	6d754c2f 	ldclvs	12, cr4, [r5, #-188]!	; 0xffffff44
   c:	6f442f6f 	svcvs	0x00442f6f
  10:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
  14:	2f73746e 	svccs	0x0073746e
  18:	6f6d754c 	svcvs	0x006d754c
  1c:	706f4d5f 	rsbvc	r4, pc, pc, asr sp	; <UNPREDICTABLE>
  20:	79656b2f 	stmdbvc	r5!, {r0, r1, r2, r3, r5, r8, r9, fp, sp, lr}^
  24:	2f646170 	svccs	0x00646170
  28:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
  2c:	2e707574 	mrccs	5, 3, r7, cr0, cr4, {3}
  30:	65640063 	strbvs	r0, [r4, #-99]!	; 0xffffff9d
  34:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
  38:	67657337 			; <UNDEFINED> instruction: 0x67657337
  3c:	61727241 	cmnvs	r2, r1, asr #4
  40:	63410079 	movtvs	r0, #4217	; 0x1079
  44:	61766974 	cmnvs	r6, r4, ror r9
  48:	6f526574 	svcvs	0x00526574
  4c:	656b0077 	strbvs	r0, [fp, #-119]!	; 0xffffff89
  50:	63006279 	movwvs	r6, #633	; 0x279
  54:	6d756c6f 	ldclvs	12, cr6, [r5, #-444]!	; 0xfffffe44
  58:	756f006e 	strbvc	r0, [pc, #-110]!	; fffffff2 <decode7segMatrix+0xdffffdf6>
  5c:	65733774 	ldrbvs	r3, [r3, #-1908]!	; 0xfffff88c
  60:	65520067 	ldrbvs	r0, [r2, #-103]	; 0xffffff99
  64:	6f436461 	svcvs	0x00436461
  68:	6e6d756c 	cdpvs	5, 6, cr7, cr13, cr12, {3}
  6c:	61747300 	cmnvs	r4, r0, lsl #6
  70:	70757472 	rsbsvc	r7, r5, r2, ror r4
  74:	554e4700 	strbpl	r4, [lr, #-1792]	; 0xfffff900
  78:	39394320 	ldmdbcc	r9!, {r5, r8, r9, lr}
  7c:	332e3620 			; <UNDEFINED> instruction: 0x332e3620
  80:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  84:	30373130 	eorscc	r3, r7, r0, lsr r1
  88:	20353132 	eorscs	r3, r5, r2, lsr r1
  8c:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  90:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  94:	415b2029 	cmpmi	fp, r9, lsr #32
  98:	652f4d52 	strvs	r4, [pc, #-3410]!	; fffff34e <decode7segMatrix+0xdffff152>
  9c:	6465626d 	strbtvs	r6, [r5], #-621	; 0xfffffd93
  a0:	2d646564 	cfstr64cs	mvdx6, [r4, #-400]!	; 0xfffffe70
  a4:	72622d36 	rsbvc	r2, r2, #3456	; 0xd80
  a8:	68636e61 	stmdavs	r3!, {r0, r5, r6, r9, sl, fp, sp, lr}^
  ac:	76657220 	strbtvc	r7, [r5], -r0, lsr #4
  b0:	6f697369 	svcvs	0x00697369
  b4:	3432206e 	ldrtcc	r2, [r2], #-110	; 0xffffff92
  b8:	32313535 	eorscc	r3, r1, #222298112	; 0xd400000
  bc:	6d2d205d 	stcvs	0, cr2, [sp, #-372]!	; 0xfffffe8c
  c0:	6d756874 	ldclvs	8, cr6, [r5, #-464]!	; 0xfffffe30
  c4:	6d2d2062 	stcvs	0, cr2, [sp, #-392]!	; 0xfffffe78
  c8:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
  cc:	6d72613d 	ldfvse	f6, [r2, #-244]!	; 0xffffff0c
  d0:	6d2d3676 	stcvs	6, cr3, [sp, #-472]!	; 0xfffffe28
  d4:	666d2d20 	strbtvs	r2, [sp], -r0, lsr #26
  d8:	74616f6c 	strbtvc	r6, [r1], #-3948	; 0xfffff094
  dc:	6962612d 	stmdbvs	r2!, {r0, r2, r3, r5, r8, sp, lr}^
  e0:	666f733d 			; <UNDEFINED> instruction: 0x666f733d
  e4:	6d2d2074 	stcvs	0, cr2, [sp, #-464]!	; 0xfffffe30
  e8:	6d756874 	ldclvs	8, cr6, [r5, #-464]!	; 0xfffffe30
  ec:	6d2d2062 	stcvs	0, cr2, [sp, #-392]!	; 0xfffffe78
  f0:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
  f4:	6d72613d 	ldfvse	f6, [r2, #-244]!	; 0xffffff0c
  f8:	6d2d3676 	stcvs	6, cr3, [sp, #-472]!	; 0xfffffe28
  fc:	20672d20 	rsbcs	r2, r7, r0, lsr #26
 100:	20304f2d 	eorscs	r4, r0, sp, lsr #30
 104:	6474732d 	ldrbtvs	r7, [r4], #-813	; 0xfffffcd3
 108:	3939633d 	ldmdbcc	r9!, {r0, r2, r3, r4, r5, r8, r9, sp, lr}
 10c:	736e7500 	cmnvc	lr, #0, 10
 110:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
 114:	68632064 	stmdavs	r3!, {r2, r5, r6, sp}^
 118:	64007261 	strvs	r7, [r0], #-609	; 0xfffffd9f
 11c:	646f6365 	strbtvs	r6, [pc], #-869	; 124 <startup-0x1ffffedc>
 120:	65733765 	ldrbvs	r3, [r3, #-1893]!	; 0xfffff89b
 124:	74614d67 	strbtvc	r4, [r1], #-3431	; 0xfffff299
 128:	00786972 	rsbseq	r6, r8, r2, ror r9
 12c:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
 130:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 134:	69616d00 	stmdbvs	r1!, {r8, sl, fp, sp, lr}^
 138:	7061006e 	rsbvc	r0, r1, lr, rrx
 13c:	6e695f70 	mcrvs	15, 3, r5, cr9, cr0, {3}
 140:	Address 0x00000140 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	204d5241 	subcs	r5, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d36 	eorscc	r2, r2, r6, lsr sp
  30:	712d3731 			; <UNDEFINED> instruction: 0x712d3731
  34:	70752d31 	rsbsvc	r2, r5, r1, lsr sp
  38:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0xfffffe9c
  3c:	2e362029 	cdpcs	0, 3, cr2, cr6, cr9, {1}
  40:	20312e33 	eorscs	r2, r1, r3, lsr lr
  44:	37313032 			; <UNDEFINED> instruction: 0x37313032
  48:	35313230 	ldrcc	r3, [r1, #-560]!	; 0xfffffdd0
  4c:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
  50:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
  54:	5b202965 	blpl	80a5f0 <startup-0x1f7f5a10>
  58:	2f4d5241 	svccs	0x004d5241
  5c:	65626d65 	strbvs	r6, [r2, #-3429]!	; 0xfffff29b
  60:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  64:	622d362d 	eorvs	r3, sp, #47185920	; 0x2d00000
  68:	636e6172 	cmnvs	lr, #-2147483620	; 0x8000001c
  6c:	65722068 	ldrbvs	r2, [r2, #-104]!	; 0xffffff98
  70:	69736976 	ldmdbvs	r3!, {r1, r2, r4, r5, r6, r8, fp, sp, lr}^
  74:	32206e6f 	eorcc	r6, r0, #1776	; 0x6f0
  78:	31353534 	teqcc	r5, r4, lsr r5
  7c:	Address 0x0000007c is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002a41 	andeq	r2, r0, r1, asr #20
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000020 	andeq	r0, r0, r0, lsr #32
  10:	4d2d3605 	stcmi	6, cr3, [sp, #-20]!	; 0xffffffec
  14:	070b0600 	streq	r0, [fp, -r0, lsl #12]
  18:	1201094d 	andne	r0, r1, #1261568	; 0x134000
  1c:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
  20:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  24:	1a011901 	bne	46430 <startup-0x1ffb9bd0>
  28:	Address 0x00000028 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000000 	andcs	r0, r0, r0
  1c:	0000000c 	andeq	r0, r0, ip
  20:	00000018 	andeq	r0, r0, r8, lsl r0
  24:	00000000 	andeq	r0, r0, r0
  28:	20000010 	andcs	r0, r0, r0, lsl r0
  2c:	00000064 	andeq	r0, r0, r4, rrx
  30:	40080e41 	andmi	r0, r8, r1, asr #28
  34:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  38:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  3c:	0000001c 	andeq	r0, r0, ip, lsl r0
  40:	00000000 	andeq	r0, r0, r0
  44:	20000074 	andcs	r0, r0, r4, ror r0
  48:	0000006c 	andeq	r0, r0, ip, rrx
  4c:	40080e41 	andmi	r0, r8, r1, asr #28
  50:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  54:	100e4101 	andne	r4, lr, r1, lsl #2
  58:	00070d41 	andeq	r0, r7, r1, asr #26
  5c:	0000001c 	andeq	r0, r0, ip, lsl r0
  60:	00000000 	andeq	r0, r0, r0
  64:	200000e0 	andcs	r0, r0, r0, ror #1
  68:	00000058 	andeq	r0, r0, r8, asr r0
  6c:	40080e41 	andmi	r0, r8, r1, asr #28
  70:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  74:	100e4101 	andne	r4, lr, r1, lsl #2
  78:	00070d41 	andeq	r0, r7, r1, asr #26
  7c:	0000001c 	andeq	r0, r0, ip, lsl r0
  80:	00000000 	andeq	r0, r0, r0
  84:	20000138 	andcs	r0, r0, r8, lsr r1
  88:	00000054 	andeq	r0, r0, r4, asr r0
  8c:	40080e41 	andmi	r0, r8, r1, asr #28
  90:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  94:	100e4101 	andne	r4, lr, r1, lsl #2
  98:	00070d41 	andeq	r0, r7, r1, asr #26
  9c:	0000001c 	andeq	r0, r0, ip, lsl r0
  a0:	00000000 	andeq	r0, r0, r0
  a4:	2000018c 	andcs	r0, r0, ip, lsl #3
  a8:	00000038 	andeq	r0, r0, r8, lsr r0
  ac:	40080e41 	andmi	r0, r8, r1, asr #28
  b0:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  b4:	100e4101 	andne	r4, lr, r1, lsl #2
  b8:	00070d41 	andeq	r0, r7, r1, asr #26
  bc:	00000018 	andeq	r0, r0, r8, lsl r0
  c0:	00000000 	andeq	r0, r0, r0
  c4:	200001c4 	andcs	r0, r0, r4, asr #3
  c8:	00000016 	andeq	r0, r0, r6, lsl r0
  cc:	40080e41 	andmi	r0, r8, r1, asr #28
  d0:	8e400287 	cdphi	2, 4, cr0, cr0, cr7, {4}
  d4:	070d4101 	streq	r4, [sp, -r1, lsl #2]
